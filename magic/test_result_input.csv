input,methods
0,"['org.eclipse.egit.ui.IBranchNameProvider.getBranchNameSuggestion()', 'java.util.Iterator.next()', 'java.util.function.Function.identity()', 'java.util.Comparator.reversed()', 'java.util.Comparator.reverseOrder()', 'java.util.Comparator.naturalOrder()', 'java.util.Spliterator.OfDouble.trySplit()', 'java.util.Spliterator.OfInt.trySplit()', 'java.util.Spliterator.OfLong.trySplit()', 'java.util.Spliterator.OfPrimitive.trySplit()', 'java.util.Spliterator.trySplit()', 'java.util.Spliterator.getComparator()', 'java.util.stream.BaseStream.iterator()', 'java.util.stream.BaseStream.spliterator()', 'java.util.stream.BaseStream.sequential()', 'java.util.stream.BaseStream.parallel()', 'java.util.stream.BaseStream.unordered()', 'java.util.function.IntPredicate.negate()', 'java.util.function.IntUnaryOperator.identity()', 'java.util.function.Predicate.negate()', 'java.util.function.LongPredicate.negate()', 'java.util.function.LongUnaryOperator.identity()', 'java.util.function.DoublePredicate.negate()', 'java.util.function.DoubleUnaryOperator.identity()', 'java.util.OptionalDouble.empty()', 'java.util.OptionalDouble.toString()', 'java.util.function.Supplier.get()', 'java.util.DoubleSummaryStatistics.toString()', 'java.util.stream.DoubleStream.Builder.build()', 'java.util.stream.DoubleStream.distinct()', 'java.util.stream.DoubleStream.sorted()', 'java.util.stream.DoubleStream.min()', 'java.util.stream.DoubleStream.max()', 'java.util.stream.DoubleStream.average()', 'java.util.stream.DoubleStream.summaryStatistics()', 'java.util.stream.DoubleStream.findFirst()', 'java.util.stream.DoubleStream.findAny()', 'java.util.stream.DoubleStream.boxed()', 'java.util.stream.DoubleStream.sequential()', 'java.util.stream.DoubleStream.parallel()', 'java.util.stream.DoubleStream.empty()', 'java.util.stream.DoubleStream.parallel()', 'java.util.stream.DoubleStream.sequential()', 'java.util.stream.DoubleStream.spliterator()', 'java.util.stream.DoubleStream.iterator()', 'java.util.OptionalLong.empty()', 'java.util.OptionalLong.toString()', 'java.util.LongSummaryStatistics.toString()', 'java.util.stream.LongStream.Builder.build()', 'java.util.stream.LongStream.distinct()', 'java.util.stream.LongStream.sorted()', 'java.util.stream.LongStream.min()', 'java.util.stream.LongStream.max()', 'java.util.stream.LongStream.average()', 'java.util.stream.LongStream.summaryStatistics()', 'java.util.stream.LongStream.findFirst()', 'java.util.stream.LongStream.findAny()', 'java.util.stream.LongStream.asDoubleStream()', 'java.util.stream.LongStream.boxed()', 'java.util.stream.LongStream.sequential()', 'java.util.stream.LongStream.parallel()', 'java.util.stream.LongStream.empty()', 'java.util.stream.LongStream.parallel()', 'java.util.stream.LongStream.sequential()', 'java.util.stream.LongStream.spliterator()', 'java.util.stream.LongStream.iterator()', 'java.util.Optional.empty()', 'java.util.Optional.get()', 'java.util.Optional.toString()', 'java.lang.Iterable.iterator()', 'java.lang.Iterable.spliterator()', 'java.util.Collection.iterator()', 'java.util.Collection.toArray()', 'java.util.Collection.spliterator()', 'java.util.Collection.stream()', 'java.util.Collection.parallelStream()', 'java.util.Set.iterator()', 'java.util.Set.toArray()', 'java.util.Set.spliterator()', 'java.lang.Enum.name()', 'java.lang.Enum.toString()', 'java.lang.Enum.clone()', 'java.lang.Enum.getDeclaringClass()', 'java.util.stream.Collector.supplier()', 'java.util.stream.Collector.accumulator()', 'java.util.stream.Collector.combiner()', 'java.util.stream.Collector.finisher()', 'java.util.stream.Collector.characteristics()', 'java.util.function.UnaryOperator.identity()', 'java.util.stream.Stream.Builder.build()', 'java.util.stream.Stream.distinct()', 'java.util.stream.Stream.sorted()', 'java.util.stream.Stream.toArray()', 'java.util.stream.Stream.findFirst()', 'java.util.stream.Stream.findAny()', 'java.util.stream.Stream.empty()', 'java.util.OptionalInt.empty()', 'java.util.OptionalInt.toString()', 'java.util.IntSummaryStatistics.toString()', 'java.util.stream.IntStream.Builder.build()', 'java.util.stream.IntStream.distinct()', 'java.util.stream.IntStream.sorted()', 'java.util.stream.IntStream.min()', 'java.util.stream.IntStream.max()', 'java.util.stream.IntStream.average()', 'java.util.stream.IntStream.summaryStatistics()', 'java.util.stream.IntStream.findFirst()', 'java.util.stream.IntStream.findAny()', 'java.util.stream.IntStream.asLongStream()', 'java.util.stream.IntStream.asDoubleStream()', 'java.util.stream.IntStream.boxed()', 'java.util.stream.IntStream.sequential()', 'java.util.stream.IntStream.parallel()', 'java.util.stream.IntStream.empty()', 'java.util.stream.IntStream.parallel()', 'java.util.stream.IntStream.sequential()', 'java.util.stream.IntStream.spliterator()', 'java.util.stream.IntStream.iterator()', 'java.lang.CharSequence.toString()', 'java.lang.CharSequence.chars()', 'java.lang.CharSequence.codePoints()', 'sun.util.locale.Extension.getValue()', 'sun.util.locale.Extension.getID()', 'sun.util.locale.Extension.toString()', 'java.lang.Character.Subset.toString()', 'java.lang.Character.toString()', 'java.util.Map.Entry.getKey()', 'java.util.Map.Entry.getValue()', 'java.util.Map.Entry.comparingByKey()', 'java.util.Map.Entry.comparingByValue()', 'java.util.Map.keySet()', 'java.util.Map.values()', 'java.util.Map.entrySet()', 'sun.util.locale.LocaleExtensions.getKeys()', 'sun.util.locale.LocaleExtensions.getUnicodeLocaleAttributes()', 'sun.util.locale.LocaleExtensions.getUnicodeLocaleKeys()', 'sun.util.locale.LocaleExtensions.toString()', 'sun.util.locale.LocaleExtensions.getID()', 'java.lang.ref.ReferenceQueue.poll()', 'java.lang.ref.ReferenceQueue.remove()', 'java.lang.ThreadGroup.getName()', 'java.lang.ThreadGroup.getParent()', 'java.lang.ThreadGroup.toString()', 'java.net.URI.parseServerAuthority()', 'java.net.URI.normalize()', 'java.net.URI.toURL()', 'java.net.URI.getScheme()', 'java.net.URI.getRawSchemeSpecificPart()', 'java.net.URI.getSchemeSpecificPart()', 'java.net.URI.getRawAuthority()', 'java.net.URI.getAuthority()', 'java.net.URI.getRawUserInfo()', 'java.net.URI.getUserInfo()', 'java.net.URI.getHost()', 'java.net.URI.getRawPath()', 'java.net.URI.getPath()', 'java.net.URI.getRawQuery()', 'java.net.URI.getQuery()', 'java.net.URI.getRawFragment()', 'java.net.URI.getFragment()', 'java.net.URI.toString()', 'java.net.URI.toASCIIString()', 'java.util.Enumeration.nextElement()', 'java.security.PermissionCollection.elements()', 'java.security.PermissionCollection.toString()', 'java.security.Permission.getName()', 'java.security.Permission.getActions()', 'java.security.Permission.newPermissionCollection()', 'java.security.Permission.toString()', 'java.net.URLConnection.getFileNameMap()', 'java.net.URLConnection.getURL()', 'java.net.URLConnection.getContentType()', 'java.net.URLConnection.getContentEncoding()', 'java.net.URLConnection.getHeaderFields()', 'java.net.URLConnection.getContent()', 'java.net.URLConnection.getPermission()', 'java.net.URLConnection.getInputStream()', 'java.net.URLConnection.getOutputStream()', 'java.net.URLConnection.toString()', 'java.net.URLConnection.getRequestProperties()', 'java.net.URLConnection.getContentHandler()', 'java.net.Proxy.address()', 'java.net.Proxy.toString()', 'java.net.InetAddressImpl.getLocalHostName()', 'java.net.InetAddressImpl.anyLocalAddress()', 'java.net.InetAddressImpl.loopbackAddress()', 'java.net.InetAddress.InetAddressHolder.getHostName()', 'java.net.InetAddress.InetAddressHolder.getOriginalHostName()', 'java.net.InetAddress.getHostName()', 'java.net.InetAddress.getCanonicalHostName()', 'java.net.InetAddress.getHostAddress()', 'java.net.InetAddress.toString()', 'java.net.InetAddress.getLoopbackAddress()', 'java.net.InetAddress.getLocalHost()', 'java.net.InetAddress.anyLocalAddress()', 'java.net.URL.getQuery()', 'java.net.URL.getPath()', 'java.net.URL.getUserInfo()', 'java.net.URL.getAuthority()', 'java.net.URL.getProtocol()', 'java.net.URL.getHost()', 'java.net.URL.getFile()', 'java.net.URL.getRef()', 'java.net.URL.toString()', 'java.net.URL.toExternalForm()', 'java.net.URL.toURI()', 'java.net.URL.openConnection()', 'java.net.URL.openStream()', 'java.net.URL.getContent()', 'java.security.Key.getAlgorithm()', 'java.security.Key.getFormat()', 'java.security.cert.Certificate.CertificateRep.readResolve()', 'java.security.cert.Certificate.getType()', 'java.security.cert.Certificate.toString()', 'java.security.cert.Certificate.getPublicKey()', 'java.security.cert.Certificate.writeReplace()', 'java.util.ListIterator.next()', 'java.util.ListIterator.previous()', 'java.util.List.iterator()', 'java.util.List.toArray()', 'java.util.List.listIterator()', 'java.util.List.spliterator()', 'java.security.cert.CertPath.CertPathRep.readResolve()', 'java.security.cert.CertPath.getType()', 'java.security.cert.CertPath.getEncodings()', 'java.security.cert.CertPath.toString()', 'java.security.cert.CertPath.getCertificates()', 'java.security.cert.CertPath.writeReplace()', 'java.time.temporal.ValueRange.toString()', 'java.time.temporal.TemporalAmount.getUnits()', 'java.io.DataInput.readLine()', 'java.io.DataInput.readUTF()', 'java.time.Duration.getUnits()', 'java.time.Duration.negated()', 'java.time.Duration.abs()', 'java.time.Duration.toString()', 'java.time.temporal.TemporalUnit.getDuration()', 'java.time.temporal.TemporalUnit.toString()', 'java.time.format.ResolverStyle.values()', 'java.time.temporal.TemporalField.getBaseUnit()', 'java.time.temporal.TemporalField.getRangeUnit()', 'java.time.temporal.TemporalField.range()', 'java.time.temporal.TemporalField.toString()', 'java.time.format.TextStyle.values()', 'java.time.format.TextStyle.asStandalone()', 'java.time.format.TextStyle.asNormal()', 'java.time.chrono.ChronoPeriod.getUnits()', 'java.time.chrono.ChronoPeriod.getChronology()', 'java.time.chrono.ChronoPeriod.negated()', 'java.time.chrono.ChronoPeriod.normalized()', 'java.time.chrono.ChronoPeriod.toString()', 'java.time.format.FormatStyle.values()', 'java.time.format.DecimalStyle.getAvailableLocales()', 'java.time.format.DecimalStyle.ofDefaultLocale()', 'java.time.format.DecimalStyle.toString()', 'java.text.ParsePosition.toString()', 'java.lang.AbstractStringBuilder.reverse()', 'java.lang.AbstractStringBuilder.toString()', 'java.lang.StringBuffer.reverse()', 'java.lang.StringBuffer.toString()', 'java.lang.StringBuffer.reverse()', 'java.text.FieldPosition.toString()', 'java.text.CharacterIterator.clone()', 'java.text.AttributedCharacterIterator.Attribute.toString()', 'java.text.AttributedCharacterIterator.Attribute.getName()', 'java.text.AttributedCharacterIterator.Attribute.readResolve()', 'java.text.AttributedCharacterIterator.getAttributes()', 'java.text.AttributedCharacterIterator.getAllAttributeKeys()', 'java.text.Format.clone()', 'java.time.format.DateTimeFormatter.parsedExcessDays()', 'java.time.format.DateTimeFormatter.parsedLeapSecond()', 'java.time.format.DateTimeFormatter.getLocale()', 'java.time.format.DateTimeFormatter.getDecimalStyle()', 'java.time.format.DateTimeFormatter.getChronology()', 'java.time.format.DateTimeFormatter.getZone()', 'java.time.format.DateTimeFormatter.getResolverStyle()', 'java.time.format.DateTimeFormatter.getResolverFields()', 'java.time.format.DateTimeFormatter.toFormat()', 'java.time.format.DateTimeFormatter.toString()', 'java.time.Month.values()', 'java.time.Month.firstMonthOfQuarter()', 'java.time.chrono.AbstractChronology.getAvailableChronologies()', 'java.time.chrono.AbstractChronology.toString()', 'java.time.chrono.AbstractChronology.writeReplace()', 'java.time.chrono.ChronoZonedDateTime.timeLineOrder()', 'java.time.chrono.ChronoZonedDateTime.toLocalDate()', 'java.time.chrono.ChronoZonedDateTime.toLocalTime()', 'java.time.chrono.ChronoZonedDateTime.toLocalDateTime()', 'java.time.chrono.ChronoZonedDateTime.getChronology()', 'java.time.chrono.ChronoZonedDateTime.getOffset()', 'java.time.chrono.ChronoZonedDateTime.getZone()', 'java.time.chrono.ChronoZonedDateTime.withEarlierOffsetAtOverlap()', 'java.time.chrono.ChronoZonedDateTime.withLaterOffsetAtOverlap()', 'java.time.chrono.ChronoZonedDateTime.toInstant()', 'java.time.chrono.ChronoZonedDateTime.toString()', 'java.time.DayOfWeek.values()', 'java.io.ObjectInput.readObject()', 'java.time.OffsetTime.now()', 'java.time.OffsetTime.getOffset()', 'java.time.OffsetTime.toLocalTime()', 'java.time.OffsetTime.toString()', 'java.time.OffsetDateTime.timeLineOrder()', 'java.time.OffsetDateTime.now()', 'java.time.OffsetDateTime.getOffset()', 'java.time.OffsetDateTime.toLocalDateTime()', 'java.time.OffsetDateTime.toLocalDate()', 'java.time.OffsetDateTime.getMonth()', 'java.time.OffsetDateTime.getDayOfWeek()', 'java.time.OffsetDateTime.toLocalTime()', 'java.time.OffsetDateTime.toOffsetTime()', 'java.time.OffsetDateTime.toZonedDateTime()', 'java.time.OffsetDateTime.toInstant()', 'java.time.OffsetDateTime.toString()', 'java.time.ZonedDateTime.now()', 'java.time.ZonedDateTime.getOffset()', 'java.time.ZonedDateTime.withEarlierOffsetAtOverlap()', 'java.time.ZonedDateTime.withLaterOffsetAtOverlap()', 'java.time.ZonedDateTime.getZone()', 'java.time.ZonedDateTime.withFixedOffsetZone()', 'java.time.ZonedDateTime.toLocalDateTime()', 'java.time.ZonedDateTime.toLocalDate()', 'java.time.ZonedDateTime.getMonth()', 'java.time.ZonedDateTime.getDayOfWeek()', 'java.time.ZonedDateTime.toLocalTime()', 'java.time.ZonedDateTime.toOffsetDateTime()', 'java.time.ZonedDateTime.toString()', 'java.time.ZonedDateTime.withLaterOffsetAtOverlap()', 'java.time.ZonedDateTime.withEarlierOffsetAtOverlap()', 'java.time.ZonedDateTime.toLocalDateTime()', 'java.time.ZonedDateTime.toLocalDate()', 'java.time.chrono.IsoEra.values()', 'java.time.temporal.ChronoField.values()', 'java.time.temporal.ChronoField.getBaseUnit()', 'java.time.temporal.ChronoField.getRangeUnit()', 'java.time.temporal.ChronoField.range()', 'java.time.temporal.ChronoField.toString()', 'java.time.Period.getUnits()', 'java.time.Period.getChronology()', 'java.time.Period.negated()', 'java.time.Period.normalized()', 'java.time.Period.toString()', 'java.time.Period.normalized()', 'java.time.Period.negated()', 'java.time.Period.getChronology()', 'java.time.chrono.IsoChronology.getId()', 'java.time.chrono.IsoChronology.getCalendarType()', 'java.time.chrono.IsoChronology.dateNow()', 'java.time.chrono.IsoChronology.eras()', 'java.time.chrono.IsoChronology.writeReplace()', 'java.time.chrono.IsoChronology.dateNow()', 'java.time.LocalDate.now()', 'java.time.LocalDate.getChronology()', 'java.time.LocalDate.getEra()', 'java.time.LocalDate.getMonth()', 'java.time.LocalDate.getDayOfWeek()', 'java.time.LocalDate.atStartOfDay()', 'java.time.LocalDate.toString()', 'java.time.LocalDate.getChronology()', 'java.time.LocalTime.now()', 'java.time.LocalTime.toString()', 'java.time.chrono.ChronoLocalDate.timeLineOrder()', 'java.time.chrono.ChronoLocalDate.getChronology()', 'java.time.chrono.ChronoLocalDate.getEra()', 'java.time.chrono.ChronoLocalDate.toString()', 'java.time.chrono.Chronology.getAvailableChronologies()', 'java.time.chrono.Chronology.getId()', 'java.time.chrono.Chronology.getCalendarType()', 'java.time.chrono.Chronology.dateNow()', 'java.time.chrono.Chronology.eras()', 'java.time.chrono.Chronology.toString()', 'java.time.chrono.ChronoLocalDateTime.timeLineOrder()', 'java.time.chrono.ChronoLocalDateTime.getChronology()', 'java.time.chrono.ChronoLocalDateTime.toLocalDate()', 'java.time.chrono.ChronoLocalDateTime.toLocalTime()', 'java.time.chrono.ChronoLocalDateTime.toString()', 'java.time.LocalDateTime.now()', 'java.time.LocalDateTime.toLocalDate()', 'java.time.LocalDateTime.getMonth()', 'java.time.LocalDateTime.getDayOfWeek()', 'java.time.LocalDateTime.toLocalTime()', 'java.time.LocalDateTime.toString()', 'java.time.LocalDateTime.toLocalDate()', 'java.time.zone.ZoneOffsetTransition.getInstant()', 'java.time.zone.ZoneOffsetTransition.getDateTimeBefore()', 'java.time.zone.ZoneOffsetTransition.getDateTimeAfter()', 'java.time.zone.ZoneOffsetTransition.getOffsetBefore()', 'java.time.zone.ZoneOffsetTransition.getOffsetAfter()', 'java.time.zone.ZoneOffsetTransition.getDuration()', 'java.time.zone.ZoneOffsetTransition.getValidOffsets()', 'java.time.zone.ZoneOffsetTransition.toString()', 'java.time.zone.ZoneRules.getTransitions()', 'java.time.zone.ZoneRules.getTransitionRules()', 'java.time.zone.ZoneRules.toString()', 'java.time.ZoneOffset.getId()', 'java.time.ZoneOffset.getRules()', 'java.time.ZoneOffset.toString()', 'java.time.ZoneId.systemDefault()', 'java.time.ZoneId.getAvailableZoneIds()', 'java.time.ZoneId.getId()', 'java.time.ZoneId.getRules()', 'java.time.ZoneId.normalized()', 'java.time.ZoneId.toString()', 'java.time.Clock.FixedClock.getZone()', 'java.time.Clock.FixedClock.instant()', 'java.time.Clock.FixedClock.toString()', 'java.time.Clock.OffsetClock.getZone()', 'java.time.Clock.OffsetClock.instant()', 'java.time.Clock.OffsetClock.toString()', 'java.time.Clock.SystemClock.getZone()', 'java.time.Clock.SystemClock.instant()', 'java.time.Clock.SystemClock.toString()', 'java.time.Clock.TickClock.getZone()', 'java.time.Clock.TickClock.instant()', 'java.time.Clock.TickClock.toString()', 'java.time.Clock.systemUTC()', 'java.time.Clock.systemDefaultZone()', 'java.time.Clock.getZone()', 'java.time.Clock.instant()', 'java.time.Instant.now()', 'java.time.Instant.toString()', 'java.util.Date.clone()', 'java.util.Date.toString()', 'java.util.Date.toLocaleString()', 'java.util.Date.toGMTString()', 'java.util.Date.toInstant()', 'java.security.Timestamp.getTimestamp()', 'java.security.Timestamp.getSignerCertPath()', 'java.security.Timestamp.toString()', 'java.security.CodeSigner.getSignerCertPath()', 'java.security.CodeSigner.getTimestamp()', 'java.security.CodeSigner.toString()', 'java.security.CodeSource.getLocation()', 'java.security.CodeSource.getCertificates()', 'java.security.CodeSource.getCodeSigners()', 'java.security.CodeSource.toString()', 'java.security.Principal.toString()', 'java.security.Principal.getName()', 'java.security.PrivilegedAction.run()', 'java.util.Random.RandomDoublesSpliterator.trySplit()', 'java.util.Random.RandomIntsSpliterator.trySplit()', 'java.util.Random.RandomLongsSpliterator.trySplit()', 'java.util.Random.ints()', 'java.util.Random.longs()', 'java.util.Random.doubles()', 'java.math.BigInteger.nextProbablePrime()', 'java.math.BigInteger.abs()', 'java.math.BigInteger.negate()', 'java.math.BigInteger.not()', 'java.math.BigInteger.toString()', 'java.security.AccessControlContext.getDebug()', 'java.security.AccessControlContext.getContext()', 'java.security.AccessControlContext.getAssignedCombiner()', 'java.security.AccessControlContext.getDomainCombiner()', 'java.security.AccessControlContext.getCombiner()', 'java.security.AccessControlContext.optimize()', 'java.security.ProtectionDomain.getCodeSource()', 'java.security.ProtectionDomain.getClassLoader()', 'java.security.ProtectionDomain.getPrincipals()', 'java.security.ProtectionDomain.getPermissions()', 'java.security.ProtectionDomain.toString()', 'java.nio.Buffer.mark()', 'java.nio.Buffer.reset()', 'java.nio.Buffer.clear()', 'java.nio.Buffer.flip()', 'java.nio.Buffer.rewind()', 'java.nio.Buffer.array()', 'java.nio.ByteOrder.nativeOrder()', 'java.nio.ByteOrder.toString()', 'java.nio.CharBuffer.slice()', 'java.nio.CharBuffer.duplicate()', 'java.nio.CharBuffer.asReadOnlyBuffer()', 'java.nio.CharBuffer.compact()', 'java.nio.CharBuffer.toString()', 'java.nio.CharBuffer.order()', 'java.nio.CharBuffer.chars()', 'java.nio.CharBuffer.array()', 'java.nio.ShortBuffer.slice()', 'java.nio.ShortBuffer.duplicate()', 'java.nio.ShortBuffer.asReadOnlyBuffer()', 'java.nio.ShortBuffer.compact()', 'java.nio.ShortBuffer.toString()', 'java.nio.ShortBuffer.order()', 'java.nio.ShortBuffer.array()', 'java.nio.IntBuffer.slice()', 'java.nio.IntBuffer.duplicate()', 'java.nio.IntBuffer.asReadOnlyBuffer()', 'java.nio.IntBuffer.compact()', 'java.nio.IntBuffer.toString()', 'java.nio.IntBuffer.order()', 'java.nio.IntBuffer.array()', 'java.nio.LongBuffer.slice()', 'java.nio.LongBuffer.duplicate()', 'java.nio.LongBuffer.asReadOnlyBuffer()', 'java.nio.LongBuffer.compact()', 'java.nio.LongBuffer.toString()', 'java.nio.LongBuffer.order()', 'java.nio.LongBuffer.array()', 'java.nio.FloatBuffer.slice()', 'java.nio.FloatBuffer.duplicate()', 'java.nio.FloatBuffer.asReadOnlyBuffer()', 'java.nio.FloatBuffer.compact()', 'java.nio.FloatBuffer.toString()', 'java.nio.FloatBuffer.order()', 'java.nio.FloatBuffer.array()', 'java.nio.DoubleBuffer.slice()', 'java.nio.DoubleBuffer.duplicate()', 'java.nio.DoubleBuffer.asReadOnlyBuffer()', 'java.nio.DoubleBuffer.compact()', 'java.nio.DoubleBuffer.toString()', 'java.nio.DoubleBuffer.order()', 'java.nio.DoubleBuffer.array()', 'java.nio.ByteBuffer.slice()', 'java.nio.ByteBuffer.duplicate()', 'java.nio.ByteBuffer.asReadOnlyBuffer()', 'java.nio.ByteBuffer.compact()', 'java.nio.ByteBuffer.toString()', 'java.nio.ByteBuffer.order()', 'java.nio.ByteBuffer.asCharBuffer()', 'java.nio.ByteBuffer.asShortBuffer()', 'java.nio.ByteBuffer.asIntBuffer()', 'java.nio.ByteBuffer.asLongBuffer()', 'java.nio.ByteBuffer.asFloatBuffer()', 'java.nio.ByteBuffer.asDoubleBuffer()', 'java.nio.ByteBuffer.array()', 'java.util.jar.Attributes.Name.toString()', 'java.util.jar.Attributes.keySet()', 'java.util.jar.Attributes.values()', 'java.util.jar.Attributes.entrySet()', 'java.util.jar.Attributes.clone()', 'java.util.concurrent.TimeUnit.values()', 'java.nio.file.attribute.FileTime.toInstant()', 'java.nio.file.attribute.FileTime.toString()', 'java.util.zip.ZipEntry.getName()', 'java.util.zip.ZipEntry.getLastModifiedTime()', 'java.util.zip.ZipEntry.getLastAccessTime()', 'java.util.zip.ZipEntry.getCreationTime()', 'java.util.zip.ZipEntry.getComment()', 'java.util.zip.ZipEntry.toString()', 'java.util.zip.ZipEntry.clone()', 'java.nio.file.WatchKey.pollEvents()', 'java.nio.file.WatchKey.watchable()', 'java.nio.file.WatchService.poll()', 'java.nio.file.WatchService.take()', 'java.nio.file.attribute.FileAttribute.name()', 'java.nio.file.attribute.FileAttribute.value()', 'java.nio.MappedByteBuffer.load()', 'java.nio.MappedByteBuffer.force()', 'java.util.concurrent.Future.get()', 'java.util.concurrent.Callable.call()', 'java.util.concurrent.ExecutorService.shutdownNow()', 'java.nio.channels.AsynchronousFileChannel.lock()', 'java.nio.channels.AsynchronousFileChannel.tryLock()', 'java.nio.channels.FileLock.channel()', 'java.nio.channels.FileLock.acquiredBy()', 'java.nio.channels.FileLock.toString()', 'java.nio.channels.FileChannel.MapMode.toString()', 'java.nio.channels.FileChannel.lock()', 'java.nio.channels.FileChannel.tryLock()', 'java.nio.file.DirectoryStream.iterator()', 'java.nio.file.attribute.AttributeView.name()', 'java.nio.file.FileStore.name()', 'java.nio.file.FileStore.type()', 'java.nio.file.LinkOption.values()', 'java.nio.file.attribute.BasicFileAttributes.lastModifiedTime()', 'java.nio.file.attribute.BasicFileAttributes.lastAccessTime()', 'java.nio.file.attribute.BasicFileAttributes.creationTime()', 'java.nio.file.attribute.BasicFileAttributes.fileKey()', 'java.nio.file.spi.FileSystemProvider.installedProviders()', 'java.nio.file.spi.FileSystemProvider.getScheme()', 'java.nio.file.FileSystem.provider()', 'java.nio.file.FileSystem.getSeparator()', 'java.nio.file.FileSystem.getRootDirectories()', 'java.nio.file.FileSystem.getFileStores()', 'java.nio.file.FileSystem.supportedFileAttributeViews()', 'java.nio.file.FileSystem.getUserPrincipalLookupService()', 'java.nio.file.FileSystem.newWatchService()', 'java.nio.file.Path.getFileSystem()', 'java.nio.file.Path.getRoot()', 'java.nio.file.Path.getFileName()', 'java.nio.file.Path.getParent()', 'java.nio.file.Path.normalize()', 'java.nio.file.Path.toUri()', 'java.nio.file.Path.toAbsolutePath()', 'java.nio.file.Path.toFile()', 'java.nio.file.Path.iterator()', 'java.nio.file.Path.toString()', 'java.io.File.TempDirectory.location()', 'java.io.File.getName()', 'java.io.File.getParent()', 'java.io.File.getParentFile()', 'java.io.File.getPath()', 'java.io.File.getAbsolutePath()', 'java.io.File.getAbsoluteFile()', 'java.io.File.getCanonicalPath()', 'java.io.File.getCanonicalFile()', 'java.io.File.toURL()', 'java.io.File.toURI()', 'java.io.File.list()', 'java.io.File.listFiles()', 'java.io.File.listRoots()', 'java.io.File.toString()', 'java.io.File.toPath()', 'java.util.SortedMap.comparator()', 'java.util.SortedMap.firstKey()', 'java.util.SortedMap.lastKey()', 'java.util.SortedMap.keySet()', 'java.util.SortedMap.values()', 'java.util.SortedMap.entrySet()', 'java.nio.charset.CodingErrorAction.toString()', 'java.nio.charset.CoderResult.toString()', 'java.nio.charset.CharsetDecoder.charset()', 'java.nio.charset.CharsetDecoder.replacement()', 'java.nio.charset.CharsetDecoder.malformedInputAction()', 'java.nio.charset.CharsetDecoder.unmappableCharacterAction()', 'java.nio.charset.CharsetDecoder.reset()', 'java.nio.charset.CharsetDecoder.detectedCharset()', 'java.nio.charset.CharsetEncoder.charset()', 'java.nio.charset.CharsetEncoder.malformedInputAction()', 'java.nio.charset.CharsetEncoder.unmappableCharacterAction()', 'java.nio.charset.CharsetEncoder.reset()', 'java.nio.charset.spi.CharsetProvider.charsets()', 'java.nio.charset.Charset.ExtendedProviderHolder.1.run()', 'java.nio.charset.Charset.ExtendedProviderHolder.1.run()', 'java.nio.charset.Charset.availableCharsets()', 'java.nio.charset.Charset.defaultCharset()', 'java.nio.charset.Charset.name()', 'java.nio.charset.Charset.aliases()', 'java.nio.charset.Charset.displayName()', 'java.nio.charset.Charset.newDecoder()', 'java.nio.charset.Charset.newEncoder()', 'java.nio.charset.Charset.toString()', 'java.util.zip.ZipFile.ZipEntryIterator.nextElement()', 'java.util.zip.ZipFile.ZipEntryIterator.next()', 'java.util.zip.ZipFile.ZipEntryIterator.nextElement()', 'java.util.zip.ZipFile.ZipEntryIterator.next()', 'java.util.zip.ZipFile.getComment()', 'java.util.zip.ZipFile.getName()', 'java.util.zip.ZipFile.entries()', 'java.util.zip.ZipFile.stream()', 'java.util.jar.JarEntry.getAttributes()', 'java.util.jar.JarEntry.getCertificates()', 'java.util.jar.JarEntry.getCodeSigners()', 'java.util.jar.JarFile.JarEntryIterator.next()', 'java.util.jar.JarFile.JarEntryIterator.nextElement()', 'java.util.jar.JarFile.JarEntryIterator.nextElement()', 'java.util.jar.JarFile.JarEntryIterator.next()', 'java.util.jar.JarFile.JarFileEntry.getAttributes()', 'java.util.jar.JarFile.JarFileEntry.getCertificates()', 'java.util.jar.JarFile.JarFileEntry.getCodeSigners()', 'java.util.jar.JarFile.getManifest()', 'java.util.jar.JarFile.entries()', 'java.util.jar.JarFile.stream()', 'java.util.jar.JarFile.entries2()', 'java.util.jar.JarFile.getManifestDigests()', 'java.util.jar.JarVerifier.getManifestDigests()', 'java.util.jar.Manifest.getMainAttributes()', 'java.util.jar.Manifest.getEntries()', 'java.util.jar.Manifest.clone()', 'sun.misc.Resource.getName()', 'sun.misc.Resource.getURL()', 'sun.misc.Resource.getCodeSourceURL()', 'sun.misc.Resource.getInputStream()', 'sun.misc.Resource.getByteBuffer()', 'sun.misc.Resource.getManifest()', 'sun.misc.Resource.getCertificates()', 'sun.misc.Resource.getCodeSigners()', 'sun.misc.URLClassPath.FileLoader.1.getName()', 'sun.misc.URLClassPath.FileLoader.1.getURL()', 'sun.misc.URLClassPath.FileLoader.1.getCodeSourceURL()', 'sun.misc.URLClassPath.FileLoader.1.getInputStream()', 'java.util.AbstractCollection.iterator()', 'java.util.AbstractCollection.toArray()', 'java.util.AbstractCollection.toString()', 'java.util.AbstractList.Itr.next()', 'java.util.AbstractList.ListItr.previous()', 'java.util.AbstractList.iterator()', 'java.util.AbstractList.listIterator()', 'java.util.AbstractSequentialList.iterator()', 'java.util.Queue.remove()', 'java.util.Queue.poll()', 'java.util.Queue.element()', 'java.util.Queue.peek()', 'java.util.Deque.removeFirst()', 'java.util.Deque.removeLast()', 'java.util.Deque.pollFirst()', 'java.util.Deque.pollLast()', 'java.util.Deque.getFirst()', 'java.util.Deque.getLast()', 'java.util.Deque.peekFirst()', 'java.util.Deque.peekLast()', 'java.util.Deque.remove()', 'java.util.Deque.poll()', 'java.util.Deque.element()', 'java.util.Deque.peek()', 'java.util.Deque.pop()', 'java.util.Deque.iterator()', 'java.util.Deque.descendingIterator()', 'java.util.LinkedList.DescendingIterator.next()', 'java.util.LinkedList.LLSpliterator.trySplit()', 'java.util.LinkedList.ListItr.next()', 'java.util.LinkedList.ListItr.previous()', 'java.util.LinkedList.getFirst()', 'java.util.LinkedList.getLast()', 'java.util.LinkedList.removeFirst()', 'java.util.LinkedList.removeLast()', 'java.util.LinkedList.peek()', 'java.util.LinkedList.element()', 'java.util.LinkedList.poll()', 'java.util.LinkedList.remove()', 'java.util.LinkedList.peekFirst()', 'java.util.LinkedList.peekLast()', 'java.util.LinkedList.pollFirst()', 'java.util.LinkedList.pollLast()', 'java.util.LinkedList.pop()', 'java.util.LinkedList.descendingIterator()', 'java.util.LinkedList.clone()', 'java.util.LinkedList.toArray()', 'java.util.LinkedList.spliterator()', 'sun.misc.JarIndex.getJarFiles()', 'java.util.AbstractMap.SimpleEntry.getKey()', 'java.util.AbstractMap.SimpleEntry.getValue()', 'java.util.AbstractMap.SimpleEntry.toString()', 'java.util.AbstractMap.SimpleImmutableEntry.getKey()', 'java.util.AbstractMap.SimpleImmutableEntry.getValue()', 'java.util.AbstractMap.SimpleImmutableEntry.toString()', 'java.util.AbstractMap.keySet()', 'java.util.AbstractMap.values()', 'java.util.AbstractMap.entrySet()', 'java.util.AbstractMap.toString()', 'java.util.AbstractMap.clone()', 'java.util.HashMap.EntryIterator.next()', 'java.util.HashMap.EntrySet.iterator()', 'java.util.HashMap.EntrySet.spliterator()', 'java.util.HashMap.EntrySpliterator.trySplit()', 'java.util.HashMap.KeyIterator.next()', 'java.util.HashMap.KeySet.iterator()', 'java.util.HashMap.KeySet.spliterator()', 'java.util.HashMap.KeySpliterator.trySplit()', 'java.util.HashMap.Node.getKey()', 'java.util.HashMap.Node.getValue()', 'java.util.HashMap.Node.toString()', 'java.util.HashMap.ValueIterator.next()', 'java.util.HashMap.ValueSpliterator.trySplit()', 'java.util.HashMap.Values.iterator()', 'java.util.HashMap.Values.spliterator()', 'java.util.HashMap.keySet()', 'java.util.HashMap.values()', 'java.util.HashMap.entrySet()', 'java.util.HashMap.clone()', 'java.security.PrivilegedExceptionAction.run()', 'sun.misc.URLClassPath.JarLoader.1.run()', 'sun.misc.URLClassPath.JarLoader.1.run()', 'sun.misc.URLClassPath.JarLoader.2.getName()', 'sun.misc.URLClassPath.JarLoader.2.getURL()', 'sun.misc.URLClassPath.JarLoader.2.getCodeSourceURL()', 'sun.misc.URLClassPath.JarLoader.2.getInputStream()', 'sun.misc.URLClassPath.JarLoader.2.getManifest()', 'sun.misc.URLClassPath.JarLoader.2.getCertificates()', 'sun.misc.URLClassPath.JarLoader.2.getCodeSigners()', 'sun.misc.URLClassPath.JarLoader.3.run()', 'sun.misc.URLClassPath.JarLoader.getJarFile()', 'sun.misc.URLClassPath.JarLoader.getIndex()', 'sun.misc.URLClassPath.JarLoader.getClassPath()', 'sun.misc.URLClassPath.Loader.1.getName()', 'sun.misc.URLClassPath.Loader.1.getURL()', 'sun.misc.URLClassPath.Loader.1.getCodeSourceURL()', 'sun.misc.URLClassPath.Loader.1.getInputStream()', 'sun.misc.URLClassPath.Loader.getBaseURL()', 'sun.misc.URLClassPath.Loader.getClassPath()', 'sun.misc.URLClassPath.closeLoaders()', 'sun.misc.URLClassPath.getURLs()', 'java.lang.Package.getName()', 'java.lang.Package.getSpecificationTitle()', 'java.lang.Package.getSpecificationVersion()', 'java.lang.Package.getSpecificationVendor()', 'java.lang.Package.getImplementationTitle()', 'java.lang.Package.getImplementationVersion()', 'java.lang.Package.getImplementationVendor()', 'java.lang.Package.getPackages()', 'java.lang.Package.toString()', 'java.lang.Package.getAnnotations()', 'java.lang.Package.getDeclaredAnnotations()', 'java.lang.Package.getSystemPackages()', 'java.lang.ClassLoader.NativeLibrary.getFromClass()', 'java.lang.ClassLoader.getBootstrapClassPath()', 'java.lang.ClassLoader.getParent()', 'java.lang.ClassLoader.getSystemClassLoader()', 'java.lang.ClassLoader.getPackages()', 'java.lang.StackTraceElement.getFileName()', 'java.lang.StackTraceElement.getClassName()', 'java.lang.StackTraceElement.getMethodName()', 'java.lang.StackTraceElement.toString()', 'java.lang.Thread.currentThread()', 'java.lang.Thread.clone()', 'java.lang.Thread.getName()', 'java.lang.Thread.getThreadGroup()', 'java.lang.Thread.toString()', 'java.lang.Thread.getContextClassLoader()', 'java.lang.Thread.getStackTrace()', 'java.lang.Thread.getAllStackTraces()', 'java.lang.ref.Reference.get()', 'java.lang.ref.SoftReference.get()', 'sun.util.locale.LocaleObjectCache.CacheEntry.getKey()', 'sun.util.locale.BaseLocale.getLanguage()', 'sun.util.locale.BaseLocale.getScript()', "
sun.util.locale.BaseLocale.getRegion()', 'sun.util.locale.BaseLocale.getVariant()'
java.lang.Object,['org.eclipse.egit.ui.UIUtils.IContentProposalFactory.getProposal()']
java.util.function.Function,"['java.util.concurrent.CompletableFuture.thenApply()', 'java.util.function.Function.compose()', 'java.util.function.Function.andThen()', 'java.util.Comparator.thenComparing()', 'java.util.Comparator.comparing()', 'java.util.function.BiFunction.andThen()', 'java.util.Optional.map()', 'java.util.Optional.flatMap()', 'java.util.stream.Stream.map()', 'java.util.stream.Stream.flatMap()', 'java.util.stream.Stream.flatMapToInt()', 'java.util.stream.Stream.flatMapToLong()', 'java.util.stream.Stream.flatMapToDouble()', 'java.util.concurrent.CompletionStage.thenApply()', 'java.util.concurrent.CompletionStage.thenApplyAsync()', 'java.util.concurrent.CompletionStage.thenCompose()', 'java.util.concurrent.CompletionStage.thenComposeAsync()', 'java.util.concurrent.CompletionStage.exceptionally()', 'java.util.concurrent.CompletableFuture.thenApply()', 'java.util.concurrent.CompletableFuture.thenApplyAsync()', 'java.util.concurrent.CompletableFuture.thenCompose()', 'java.util.concurrent.CompletableFuture.thenComposeAsync()', 'java.util.concurrent.CompletableFuture.exceptionally()', 'java.util.concurrent.CompletableFuture.exceptionally()', 'java.util.concurrent.CompletableFuture.thenComposeAsync()', 'java.util.concurrent.CompletableFuture.thenCompose()', 'java.util.concurrent.CompletableFuture.thenApplyAsync()']"
java.util.Comparator,"['org.eclipse.jgit.transport.PackParser.getSortedObjectList()', 'java.util.Comparator.thenComparing()', 'java.util.Comparator.nullsFirst()', 'java.util.Comparator.nullsLast()', 'java.util.function.BinaryOperator.minBy()', 'java.util.function.BinaryOperator.maxBy()', 'java.util.stream.Stream.sorted()', 'java.util.stream.Stream.min()', 'java.util.stream.Stream.max()', 'java.util.Map.Entry.comparingByKey()', 'java.util.Map.Entry.comparingByValue()']"
java.util.function.ToIntFunction,"['java.util.stream.Stream.mapToInt()', 'java.util.Comparator.thenComparingInt()', 'java.util.Comparator.comparingInt()']"
java.util.function.ToLongFunction,"['java.util.stream.Stream.mapToLong()', 'java.util.Comparator.thenComparingLong()', 'java.util.Comparator.comparingLong()']"
java.util.function.ToDoubleFunction,"['java.util.stream.Stream.mapToDouble()', 'java.util.Comparator.thenComparingDouble()', 'java.util.Comparator.comparingDouble()']"
java.lang.Runnable,['org.eclipse.egit.ui.internal.ActionUtils.createGlobalAction()']
java.util.function.IntPredicate,"['java.util.stream.IntStream.filter()', 'java.util.function.IntPredicate.and()', 'java.util.function.IntPredicate.or()']"
java.util.function.IntUnaryOperator,['java.util.stream.IntStream.iterate()']
java.util.function.Predicate,"['java.util.stream.Stream.filter()', 'java.util.function.Predicate.and()', 'java.util.function.Predicate.or()', 'java.util.Optional.filter()']"
java.util.function.LongPredicate,"['java.util.stream.LongStream.filter()', 'java.util.function.LongPredicate.and()', 'java.util.function.LongPredicate.or()']"
java.util.function.LongUnaryOperator,['java.util.stream.LongStream.iterate()']
