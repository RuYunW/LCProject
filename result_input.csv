input,methods
0,"['org.eclipse.egit.ui.IBranchNameProvider.getBranchNameSuggestion()', 'java.util.Iterator.next()', 'java.util.function.Function.identity()', 'java.util.Comparator.reversed()', 'java.util.Comparator.reverseOrder()', 'java.util.Comparator.naturalOrder()', 'java.util.Spliterator.OfDouble.trySplit()', 'java.util.Spliterator.OfInt.trySplit()', 'java.util.Spliterator.OfLong.trySplit()', 'java.util.Spliterator.OfPrimitive.trySplit()', 'java.util.Spliterator.trySplit()', 'java.util.Spliterator.getComparator()', 'java.util.stream.BaseStream.iterator()', 'java.util.stream.BaseStream.spliterator()', 'java.util.stream.BaseStream.sequential()', 'java.util.stream.BaseStream.parallel()', 'java.util.stream.BaseStream.unordered()', 'java.util.function.IntPredicate.negate()', 'java.util.function.IntUnaryOperator.identity()', 'java.util.function.Predicate.negate()', 'java.util.function.LongPredicate.negate()', 'java.util.function.LongUnaryOperator.identity()', 'java.util.function.DoublePredicate.negate()', 'java.util.function.DoubleUnaryOperator.identity()', 'java.util.OptionalDouble.empty()', 'java.util.OptionalDouble.toString()', 'java.util.function.Supplier.get()', 'java.util.DoubleSummaryStatistics.toString()', 'java.util.stream.DoubleStream.Builder.build()', 'java.util.stream.DoubleStream.distinct()', 'java.util.stream.DoubleStream.sorted()', 'java.util.stream.DoubleStream.min()', 'java.util.stream.DoubleStream.max()', 'java.util.stream.DoubleStream.average()', 'java.util.stream.DoubleStream.summaryStatistics()', 'java.util.stream.DoubleStream.findFirst()', 'java.util.stream.DoubleStream.findAny()', 'java.util.stream.DoubleStream.boxed()', 'java.util.stream.DoubleStream.sequential()', 'java.util.stream.DoubleStream.parallel()', 'java.util.stream.DoubleStream.empty()', 'java.util.stream.DoubleStream.parallel()', 'java.util.stream.DoubleStream.sequential()', 'java.util.stream.DoubleStream.spliterator()', 'java.util.stream.DoubleStream.iterator()', 'java.util.OptionalLong.empty()', 'java.util.OptionalLong.toString()', 'java.util.LongSummaryStatistics.toString()', 'java.util.stream.LongStream.Builder.build()', 'java.util.stream.LongStream.distinct()', 'java.util.stream.LongStream.sorted()', 'java.util.stream.LongStream.min()', 'java.util.stream.LongStream.max()', 'java.util.stream.LongStream.average()', 'java.util.stream.LongStream.summaryStatistics()', 'java.util.stream.LongStream.findFirst()', 'java.util.stream.LongStream.findAny()', 'java.util.stream.LongStream.asDoubleStream()', 'java.util.stream.LongStream.boxed()', 'java.util.stream.LongStream.sequential()', 'java.util.stream.LongStream.parallel()', 'java.util.stream.LongStream.empty()', 'java.util.stream.LongStream.parallel()', 'java.util.stream.LongStream.sequential()', 'java.util.stream.LongStream.spliterator()', 'java.util.stream.LongStream.iterator()', 'java.util.Optional.empty()', 'java.util.Optional.get()', 'java.util.Optional.toString()', 'java.lang.Iterable.iterator()', 'java.lang.Iterable.spliterator()', 'java.util.Collection.iterator()', 'java.util.Collection.toArray()', 'java.util.Collection.spliterator()', 'java.util.Collection.stream()', 'java.util.Collection.parallelStream()', 'java.util.Set.iterator()', 'java.util.Set.toArray()', 'java.util.Set.spliterator()', 'java.lang.Enum.name()', 'java.lang.Enum.toString()', 'java.lang.Enum.clone()', 'java.lang.Enum.getDeclaringClass()', 'java.util.stream.Collector.supplier()', 'java.util.stream.Collector.accumulator()', 'java.util.stream.Collector.combiner()', 'java.util.stream.Collector.finisher()', 'java.util.stream.Collector.characteristics()', 'java.util.function.UnaryOperator.identity()', 'java.util.stream.Stream.Builder.build()', 'java.util.stream.Stream.distinct()', 'java.util.stream.Stream.sorted()', 'java.util.stream.Stream.toArray()', 'java.util.stream.Stream.findFirst()', 'java.util.stream.Stream.findAny()', 'java.util.stream.Stream.empty()', 'java.util.OptionalInt.empty()', 'java.util.OptionalInt.toString()', 'java.util.IntSummaryStatistics.toString()', 'java.util.stream.IntStream.Builder.build()', 'java.util.stream.IntStream.distinct()', 'java.util.stream.IntStream.sorted()', 'java.util.stream.IntStream.min()', 'java.util.stream.IntStream.max()', 'java.util.stream.IntStream.average()', 'java.util.stream.IntStream.summaryStatistics()', 'java.util.stream.IntStream.findFirst()', 'java.util.stream.IntStream.findAny()', 'java.util.stream.IntStream.asLongStream()', 'java.util.stream.IntStream.asDoubleStream()', 'java.util.stream.IntStream.boxed()', 'java.util.stream.IntStream.sequential()', 'java.util.stream.IntStream.parallel()', 'java.util.stream.IntStream.empty()', 'java.util.stream.IntStream.parallel()', 'java.util.stream.IntStream.sequential()', 'java.util.stream.IntStream.spliterator()', 'java.util.stream.IntStream.iterator()', 'java.lang.CharSequence.toString()', 'java.lang.CharSequence.chars()', 'java.lang.CharSequence.codePoints()', 'sun.util.locale.Extension.getValue()', 'sun.util.locale.Extension.getID()', 'sun.util.locale.Extension.toString()', 'java.lang.Character.Subset.toString()', 'java.lang.Character.toString()', 'java.util.Map.Entry.getKey()', 'java.util.Map.Entry.getValue()', 'java.util.Map.Entry.comparingByKey()', 'java.util.Map.Entry.comparingByValue()', 'java.util.Map.keySet()', 'java.util.Map.values()', 'java.util.Map.entrySet()', 'sun.util.locale.LocaleExtensions.getKeys()', 'sun.util.locale.LocaleExtensions.getUnicodeLocaleAttributes()', 'sun.util.locale.LocaleExtensions.getUnicodeLocaleKeys()', 'sun.util.locale.LocaleExtensions.toString()', 'sun.util.locale.LocaleExtensions.getID()', 'java.lang.ref.ReferenceQueue.poll()', 'java.lang.ref.ReferenceQueue.remove()', 'java.lang.ThreadGroup.getName()', 'java.lang.ThreadGroup.getParent()', 'java.lang.ThreadGroup.toString()', 'java.net.URI.parseServerAuthority()', 'java.net.URI.normalize()', 'java.net.URI.toURL()', 'java.net.URI.getScheme()', 'java.net.URI.getRawSchemeSpecificPart()', 'java.net.URI.getSchemeSpecificPart()', 'java.net.URI.getRawAuthority()', 'java.net.URI.getAuthority()', 'java.net.URI.getRawUserInfo()', 'java.net.URI.getUserInfo()', 'java.net.URI.getHost()', 'java.net.URI.getRawPath()', 'java.net.URI.getPath()', 'java.net.URI.getRawQuery()', 'java.net.URI.getQuery()', 'java.net.URI.getRawFragment()', 'java.net.URI.getFragment()', 'java.net.URI.toString()', 'java.net.URI.toASCIIString()', 'java.util.Enumeration.nextElement()', 'java.security.PermissionCollection.elements()', 'java.security.PermissionCollection.toString()', 'java.security.Permission.getName()', 'java.security.Permission.getActions()', 'java.security.Permission.newPermissionCollection()', 'java.security.Permission.toString()', 'java.net.URLConnection.getFileNameMap()', 'java.net.URLConnection.getURL()', 'java.net.URLConnection.getContentType()', 'java.net.URLConnection.getContentEncoding()', 'java.net.URLConnection.getHeaderFields()', 'java.net.URLConnection.getContent()', 'java.net.URLConnection.getPermission()', 'java.net.URLConnection.getInputStream()', 'java.net.URLConnection.getOutputStream()', 'java.net.URLConnection.toString()', 'java.net.URLConnection.getRequestProperties()', 'java.net.URLConnection.getContentHandler()', 'java.net.Proxy.address()', 'java.net.Proxy.toString()', 'java.net.InetAddressImpl.getLocalHostName()', 'java.net.InetAddressImpl.anyLocalAddress()', 'java.net.InetAddressImpl.loopbackAddress()', 'java.net.InetAddress.InetAddressHolder.getHostName()', 'java.net.InetAddress.InetAddressHolder.getOriginalHostName()', 'java.net.InetAddress.getHostName()', 'java.net.InetAddress.getCanonicalHostName()', 'java.net.InetAddress.getHostAddress()', 'java.net.InetAddress.toString()', 'java.net.InetAddress.getLoopbackAddress()', 'java.net.InetAddress.getLocalHost()', 'java.net.InetAddress.anyLocalAddress()', 'java.net.URL.getQuery()', 'java.net.URL.getPath()', 'java.net.URL.getUserInfo()', 'java.net.URL.getAuthority()', 'java.net.URL.getProtocol()', 'java.net.URL.getHost()', 'java.net.URL.getFile()', 'java.net.URL.getRef()', 'java.net.URL.toString()', 'java.net.URL.toExternalForm()', 'java.net.URL.toURI()', 'java.net.URL.openConnection()', 'java.net.URL.openStream()', 'java.net.URL.getContent()', 'java.security.Key.getAlgorithm()', 'java.security.Key.getFormat()', 'java.security.cert.Certificate.CertificateRep.readResolve()', 'java.security.cert.Certificate.getType()', 'java.security.cert.Certificate.toString()', 'java.security.cert.Certificate.getPublicKey()', 'java.security.cert.Certificate.writeReplace()', 'java.util.ListIterator.next()', 'java.util.ListIterator.previous()', 'java.util.List.iterator()', 'java.util.List.toArray()', 'java.util.List.listIterator()', 'java.util.List.spliterator()', 'java.security.cert.CertPath.CertPathRep.readResolve()', 'java.security.cert.CertPath.getType()', 'java.security.cert.CertPath.getEncodings()', 'java.security.cert.CertPath.toString()', 'java.security.cert.CertPath.getCertificates()', 'java.security.cert.CertPath.writeReplace()', 'java.time.temporal.ValueRange.toString()', 'java.time.temporal.TemporalAmount.getUnits()', 'java.io.DataInput.readLine()', 'java.io.DataInput.readUTF()', 'java.time.Duration.getUnits()', 'java.time.Duration.negated()', 'java.time.Duration.abs()', 'java.time.Duration.toString()', 'java.time.temporal.TemporalUnit.getDuration()', 'java.time.temporal.TemporalUnit.toString()', 'java.time.format.ResolverStyle.values()', 'java.time.temporal.TemporalField.getBaseUnit()', 'java.time.temporal.TemporalField.getRangeUnit()', 'java.time.temporal.TemporalField.range()', 'java.time.temporal.TemporalField.toString()', 'java.time.format.TextStyle.values()', 'java.time.format.TextStyle.asStandalone()', 'java.time.format.TextStyle.asNormal()', 'java.time.chrono.ChronoPeriod.getUnits()', 'java.time.chrono.ChronoPeriod.getChronology()', 'java.time.chrono.ChronoPeriod.negated()', 'java.time.chrono.ChronoPeriod.normalized()', 'java.time.chrono.ChronoPeriod.toString()', 'java.time.format.FormatStyle.values()', 'java.time.format.DecimalStyle.getAvailableLocales()', 'java.time.format.DecimalStyle.ofDefaultLocale()', 'java.time.format.DecimalStyle.toString()', 'java.text.ParsePosition.toString()', 'java.lang.AbstractStringBuilder.reverse()', 'java.lang.AbstractStringBuilder.toString()', 'java.lang.StringBuffer.reverse()', 'java.lang.StringBuffer.toString()', 'java.lang.StringBuffer.reverse()', 'java.text.FieldPosition.toString()', 'java.text.CharacterIterator.clone()', 'java.text.AttributedCharacterIterator.Attribute.toString()', 'java.text.AttributedCharacterIterator.Attribute.getName()', 'java.text.AttributedCharacterIterator.Attribute.readResolve()', 'java.text.AttributedCharacterIterator.getAttributes()', 'java.text.AttributedCharacterIterator.getAllAttributeKeys()', 'java.text.Format.clone()', 'java.time.format.DateTimeFormatter.parsedExcessDays()', 'java.time.format.DateTimeFormatter.parsedLeapSecond()', 'java.time.format.DateTimeFormatter.getLocale()', 'java.time.format.DateTimeFormatter.getDecimalStyle()', 'java.time.format.DateTimeFormatter.getChronology()', 'java.time.format.DateTimeFormatter.getZone()', 'java.time.format.DateTimeFormatter.getResolverStyle()', 'java.time.format.DateTimeFormatter.getResolverFields()', 'java.time.format.DateTimeFormatter.toFormat()', 'java.time.format.DateTimeFormatter.toString()', 'java.time.Month.values()', 'java.time.Month.firstMonthOfQuarter()', 'java.time.chrono.AbstractChronology.getAvailableChronologies()', 'java.time.chrono.AbstractChronology.toString()', 'java.time.chrono.AbstractChronology.writeReplace()', 'java.time.chrono.ChronoZonedDateTime.timeLineOrder()', 'java.time.chrono.ChronoZonedDateTime.toLocalDate()', 'java.time.chrono.ChronoZonedDateTime.toLocalTime()', 'java.time.chrono.ChronoZonedDateTime.toLocalDateTime()', 'java.time.chrono.ChronoZonedDateTime.getChronology()', 'java.time.chrono.ChronoZonedDateTime.getOffset()', 'java.time.chrono.ChronoZonedDateTime.getZone()', 'java.time.chrono.ChronoZonedDateTime.withEarlierOffsetAtOverlap()', 'java.time.chrono.ChronoZonedDateTime.withLaterOffsetAtOverlap()', 'java.time.chrono.ChronoZonedDateTime.toInstant()', 'java.time.chrono.ChronoZonedDateTime.toString()', 'java.time.DayOfWeek.values()', 'java.io.ObjectInput.readObject()', 'java.time.OffsetTime.now()', 'java.time.OffsetTime.getOffset()', 'java.time.OffsetTime.toLocalTime()', 'java.time.OffsetTime.toString()', 'java.time.OffsetDateTime.timeLineOrder()', 'java.time.OffsetDateTime.now()', 'java.time.OffsetDateTime.getOffset()', 'java.time.OffsetDateTime.toLocalDateTime()', 'java.time.OffsetDateTime.toLocalDate()', 'java.time.OffsetDateTime.getMonth()', 'java.time.OffsetDateTime.getDayOfWeek()', 'java.time.OffsetDateTime.toLocalTime()', 'java.time.OffsetDateTime.toOffsetTime()', 'java.time.OffsetDateTime.toZonedDateTime()', 'java.time.OffsetDateTime.toInstant()', 'java.time.OffsetDateTime.toString()', 'java.time.ZonedDateTime.now()', 'java.time.ZonedDateTime.getOffset()', 'java.time.ZonedDateTime.withEarlierOffsetAtOverlap()', 'java.time.ZonedDateTime.withLaterOffsetAtOverlap()', 'java.time.ZonedDateTime.getZone()', 'java.time.ZonedDateTime.withFixedOffsetZone()', 'java.time.ZonedDateTime.toLocalDateTime()', 'java.time.ZonedDateTime.toLocalDate()', 'java.time.ZonedDateTime.getMonth()', 'java.time.ZonedDateTime.getDayOfWeek()', 'java.time.ZonedDateTime.toLocalTime()', 'java.time.ZonedDateTime.toOffsetDateTime()', 'java.time.ZonedDateTime.toString()', 'java.time.ZonedDateTime.withLaterOffsetAtOverlap()', 'java.time.ZonedDateTime.withEarlierOffsetAtOverlap()', 'java.time.ZonedDateTime.toLocalDateTime()', 'java.time.ZonedDateTime.toLocalDate()', 'java.time.chrono.IsoEra.values()', 'java.time.temporal.ChronoField.values()', 'java.time.temporal.ChronoField.getBaseUnit()', 'java.time.temporal.ChronoField.getRangeUnit()', 'java.time.temporal.ChronoField.range()', 'java.time.temporal.ChronoField.toString()', 'java.time.Period.getUnits()', 'java.time.Period.getChronology()', 'java.time.Period.negated()', 'java.time.Period.normalized()', 'java.time.Period.toString()', 'java.time.Period.normalized()', 'java.time.Period.negated()', 'java.time.Period.getChronology()', 'java.time.chrono.IsoChronology.getId()', 'java.time.chrono.IsoChronology.getCalendarType()', 'java.time.chrono.IsoChronology.dateNow()', 'java.time.chrono.IsoChronology.eras()', 'java.time.chrono.IsoChronology.writeReplace()', 'java.time.chrono.IsoChronology.dateNow()', 'java.time.LocalDate.now()', 'java.time.LocalDate.getChronology()', 'java.time.LocalDate.getEra()', 'java.time.LocalDate.getMonth()', 'java.time.LocalDate.getDayOfWeek()', 'java.time.LocalDate.atStartOfDay()', 'java.time.LocalDate.toString()', 'java.time.LocalDate.getChronology()', 'java.time.LocalTime.now()', 'java.time.LocalTime.toString()', 'java.time.chrono.ChronoLocalDate.timeLineOrder()', 'java.time.chrono.ChronoLocalDate.getChronology()', 'java.time.chrono.ChronoLocalDate.getEra()', 'java.time.chrono.ChronoLocalDate.toString()', 'java.time.chrono.Chronology.getAvailableChronologies()', 'java.time.chrono.Chronology.getId()', 'java.time.chrono.Chronology.getCalendarType()', 'java.time.chrono.Chronology.dateNow()', 'java.time.chrono.Chronology.eras()', 'java.time.chrono.Chronology.toString()', 'java.time.chrono.ChronoLocalDateTime.timeLineOrder()', 'java.time.chrono.ChronoLocalDateTime.getChronology()', 'java.time.chrono.ChronoLocalDateTime.toLocalDate()', 'java.time.chrono.ChronoLocalDateTime.toLocalTime()', 'java.time.chrono.ChronoLocalDateTime.toString()', 'java.time.LocalDateTime.now()', 'java.time.LocalDateTime.toLocalDate()', 'java.time.LocalDateTime.getMonth()', 'java.time.LocalDateTime.getDayOfWeek()', 'java.time.LocalDateTime.toLocalTime()', 'java.time.LocalDateTime.toString()', 'java.time.LocalDateTime.toLocalDate()', 'java.time.zone.ZoneOffsetTransition.getInstant()', 'java.time.zone.ZoneOffsetTransition.getDateTimeBefore()', 'java.time.zone.ZoneOffsetTransition.getDateTimeAfter()', 'java.time.zone.ZoneOffsetTransition.getOffsetBefore()', 'java.time.zone.ZoneOffsetTransition.getOffsetAfter()', 'java.time.zone.ZoneOffsetTransition.getDuration()', 'java.time.zone.ZoneOffsetTransition.getValidOffsets()', 'java.time.zone.ZoneOffsetTransition.toString()', 'java.time.zone.ZoneRules.getTransitions()', 'java.time.zone.ZoneRules.getTransitionRules()', 'java.time.zone.ZoneRules.toString()', 'java.time.ZoneOffset.getId()', 'java.time.ZoneOffset.getRules()', 'java.time.ZoneOffset.toString()', 'java.time.ZoneId.systemDefault()', 'java.time.ZoneId.getAvailableZoneIds()', 'java.time.ZoneId.getId()', 'java.time.ZoneId.getRules()', 'java.time.ZoneId.normalized()', 'java.time.ZoneId.toString()', 'java.time.Clock.FixedClock.getZone()', 'java.time.Clock.FixedClock.instant()', 'java.time.Clock.FixedClock.toString()', 'java.time.Clock.OffsetClock.getZone()', 'java.time.Clock.OffsetClock.instant()', 'java.time.Clock.OffsetClock.toString()', 'java.time.Clock.SystemClock.getZone()', 'java.time.Clock.SystemClock.instant()', 'java.time.Clock.SystemClock.toString()', 'java.time.Clock.TickClock.getZone()', 'java.time.Clock.TickClock.instant()', 'java.time.Clock.TickClock.toString()', 'java.time.Clock.systemUTC()', 'java.time.Clock.systemDefaultZone()', 'java.time.Clock.getZone()', 'java.time.Clock.instant()', 'java.time.Instant.now()', 'java.time.Instant.toString()', 'java.util.Date.clone()', 'java.util.Date.toString()', 'java.util.Date.toLocaleString()', 'java.util.Date.toGMTString()', 'java.util.Date.toInstant()', 'java.security.Timestamp.getTimestamp()', 'java.security.Timestamp.getSignerCertPath()', 'java.security.Timestamp.toString()', 'java.security.CodeSigner.getSignerCertPath()', 'java.security.CodeSigner.getTimestamp()', 'java.security.CodeSigner.toString()', 'java.security.CodeSource.getLocation()', 'java.security.CodeSource.getCertificates()', 'java.security.CodeSource.getCodeSigners()', 'java.security.CodeSource.toString()', 'java.security.Principal.toString()', 'java.security.Principal.getName()', 'java.security.PrivilegedAction.run()', 'java.util.Random.RandomDoublesSpliterator.trySplit()', 'java.util.Random.RandomIntsSpliterator.trySplit()', 'java.util.Random.RandomLongsSpliterator.trySplit()', 'java.util.Random.ints()', 'java.util.Random.longs()', 'java.util.Random.doubles()', 'java.math.BigInteger.nextProbablePrime()', 'java.math.BigInteger.abs()', 'java.math.BigInteger.negate()', 'java.math.BigInteger.not()', 'java.math.BigInteger.toString()', 'java.security.AccessControlContext.getDebug()', 'java.security.AccessControlContext.getContext()', 'java.security.AccessControlContext.getAssignedCombiner()', 'java.security.AccessControlContext.getDomainCombiner()', 'java.security.AccessControlContext.getCombiner()', 'java.security.AccessControlContext.optimize()', 'java.security.ProtectionDomain.getCodeSource()', 'java.security.ProtectionDomain.getClassLoader()', 'java.security.ProtectionDomain.getPrincipals()', 'java.security.ProtectionDomain.getPermissions()', 'java.security.ProtectionDomain.toString()', 'java.nio.Buffer.mark()', 'java.nio.Buffer.reset()', 'java.nio.Buffer.clear()', 'java.nio.Buffer.flip()', 'java.nio.Buffer.rewind()', 'java.nio.Buffer.array()', 'java.nio.ByteOrder.nativeOrder()', 'java.nio.ByteOrder.toString()', 'java.nio.CharBuffer.slice()', 'java.nio.CharBuffer.duplicate()', 'java.nio.CharBuffer.asReadOnlyBuffer()', 'java.nio.CharBuffer.compact()', 'java.nio.CharBuffer.toString()', 'java.nio.CharBuffer.order()', 'java.nio.CharBuffer.chars()', 'java.nio.CharBuffer.array()', 'java.nio.ShortBuffer.slice()', 'java.nio.ShortBuffer.duplicate()', 'java.nio.ShortBuffer.asReadOnlyBuffer()', 'java.nio.ShortBuffer.compact()', 'java.nio.ShortBuffer.toString()', 'java.nio.ShortBuffer.order()', 'java.nio.ShortBuffer.array()', 'java.nio.IntBuffer.slice()', 'java.nio.IntBuffer.duplicate()', 'java.nio.IntBuffer.asReadOnlyBuffer()', 'java.nio.IntBuffer.compact()', 'java.nio.IntBuffer.toString()', 'java.nio.IntBuffer.order()', 'java.nio.IntBuffer.array()', 'java.nio.LongBuffer.slice()', 'java.nio.LongBuffer.duplicate()', 'java.nio.LongBuffer.asReadOnlyBuffer()', 'java.nio.LongBuffer.compact()', 'java.nio.LongBuffer.toString()', 'java.nio.LongBuffer.order()', 'java.nio.LongBuffer.array()', 'java.nio.FloatBuffer.slice()', 'java.nio.FloatBuffer.duplicate()', 'java.nio.FloatBuffer.asReadOnlyBuffer()', 'java.nio.FloatBuffer.compact()', 'java.nio.FloatBuffer.toString()', 'java.nio.FloatBuffer.order()', 'java.nio.FloatBuffer.array()', 'java.nio.DoubleBuffer.slice()', 'java.nio.DoubleBuffer.duplicate()', 'java.nio.DoubleBuffer.asReadOnlyBuffer()', 'java.nio.DoubleBuffer.compact()', 'java.nio.DoubleBuffer.toString()', 'java.nio.DoubleBuffer.order()', 'java.nio.DoubleBuffer.array()', 'java.nio.ByteBuffer.slice()', 'java.nio.ByteBuffer.duplicate()', 'java.nio.ByteBuffer.asReadOnlyBuffer()', 'java.nio.ByteBuffer.compact()', 'java.nio.ByteBuffer.toString()', 'java.nio.ByteBuffer.order()', 'java.nio.ByteBuffer.asCharBuffer()', 'java.nio.ByteBuffer.asShortBuffer()', 'java.nio.ByteBuffer.asIntBuffer()', 'java.nio.ByteBuffer.asLongBuffer()', 'java.nio.ByteBuffer.asFloatBuffer()', 'java.nio.ByteBuffer.asDoubleBuffer()', 'java.nio.ByteBuffer.array()', 'java.util.jar.Attributes.Name.toString()', 'java.util.jar.Attributes.keySet()', 'java.util.jar.Attributes.values()', 'java.util.jar.Attributes.entrySet()', 'java.util.jar.Attributes.clone()', 'java.util.concurrent.TimeUnit.values()', 'java.nio.file.attribute.FileTime.toInstant()', 'java.nio.file.attribute.FileTime.toString()', 'java.util.zip.ZipEntry.getName()', 'java.util.zip.ZipEntry.getLastModifiedTime()', 'java.util.zip.ZipEntry.getLastAccessTime()', 'java.util.zip.ZipEntry.getCreationTime()', 'java.util.zip.ZipEntry.getComment()', 'java.util.zip.ZipEntry.toString()', 'java.util.zip.ZipEntry.clone()', 'java.nio.file.WatchKey.pollEvents()', 'java.nio.file.WatchKey.watchable()', 'java.nio.file.WatchService.poll()', 'java.nio.file.WatchService.take()', 'java.nio.file.attribute.FileAttribute.name()', 'java.nio.file.attribute.FileAttribute.value()', 'java.nio.MappedByteBuffer.load()', 'java.nio.MappedByteBuffer.force()', 'java.util.concurrent.Future.get()', 'java.util.concurrent.Callable.call()', 'java.util.concurrent.ExecutorService.shutdownNow()', 'java.nio.channels.AsynchronousFileChannel.lock()', 'java.nio.channels.AsynchronousFileChannel.tryLock()', 'java.nio.channels.FileLock.channel()', 'java.nio.channels.FileLock.acquiredBy()', 'java.nio.channels.FileLock.toString()', 'java.nio.channels.FileChannel.MapMode.toString()', 'java.nio.channels.FileChannel.lock()', 'java.nio.channels.FileChannel.tryLock()', 'java.nio.file.DirectoryStream.iterator()', 'java.nio.file.attribute.AttributeView.name()', 'java.nio.file.FileStore.name()', 'java.nio.file.FileStore.type()', 'java.nio.file.LinkOption.values()', 'java.nio.file.attribute.BasicFileAttributes.lastModifiedTime()', 'java.nio.file.attribute.BasicFileAttributes.lastAccessTime()', 'java.nio.file.attribute.BasicFileAttributes.creationTime()', 'java.nio.file.attribute.BasicFileAttributes.fileKey()', 'java.nio.file.spi.FileSystemProvider.installedProviders()', 'java.nio.file.spi.FileSystemProvider.getScheme()', 'java.nio.file.FileSystem.provider()', 'java.nio.file.FileSystem.getSeparator()', 'java.nio.file.FileSystem.getRootDirectories()', 'java.nio.file.FileSystem.getFileStores()', 'java.nio.file.FileSystem.supportedFileAttributeViews()', 'java.nio.file.FileSystem.getUserPrincipalLookupService()', 'java.nio.file.FileSystem.newWatchService()', 'java.nio.file.Path.getFileSystem()', 'java.nio.file.Path.getRoot()', 'java.nio.file.Path.getFileName()', 'java.nio.file.Path.getParent()', 'java.nio.file.Path.normalize()', 'java.nio.file.Path.toUri()', 'java.nio.file.Path.toAbsolutePath()', 'java.nio.file.Path.toFile()', 'java.nio.file.Path.iterator()', 'java.nio.file.Path.toString()', 'java.io.File.TempDirectory.location()', 'java.io.File.getName()', 'java.io.File.getParent()', 'java.io.File.getParentFile()', 'java.io.File.getPath()', 'java.io.File.getAbsolutePath()', 'java.io.File.getAbsoluteFile()', 'java.io.File.getCanonicalPath()', 'java.io.File.getCanonicalFile()', 'java.io.File.toURL()', 'java.io.File.toURI()', 'java.io.File.list()', 'java.io.File.listFiles()', 'java.io.File.listRoots()', 'java.io.File.toString()', 'java.io.File.toPath()', 'java.util.SortedMap.comparator()', 'java.util.SortedMap.firstKey()', 'java.util.SortedMap.lastKey()', 'java.util.SortedMap.keySet()', 'java.util.SortedMap.values()', 'java.util.SortedMap.entrySet()', 'java.nio.charset.CodingErrorAction.toString()', 'java.nio.charset.CoderResult.toString()', 'java.nio.charset.CharsetDecoder.charset()', 'java.nio.charset.CharsetDecoder.replacement()', 'java.nio.charset.CharsetDecoder.malformedInputAction()', 'java.nio.charset.CharsetDecoder.unmappableCharacterAction()', 'java.nio.charset.CharsetDecoder.reset()', 'java.nio.charset.CharsetDecoder.detectedCharset()', 'java.nio.charset.CharsetEncoder.charset()', 'java.nio.charset.CharsetEncoder.malformedInputAction()', 'java.nio.charset.CharsetEncoder.unmappableCharacterAction()', 'java.nio.charset.CharsetEncoder.reset()', 'java.nio.charset.spi.CharsetProvider.charsets()', 'java.nio.charset.Charset.ExtendedProviderHolder.1.run()', 'java.nio.charset.Charset.ExtendedProviderHolder.1.run()', 'java.nio.charset.Charset.availableCharsets()', 'java.nio.charset.Charset.defaultCharset()', 'java.nio.charset.Charset.name()', 'java.nio.charset.Charset.aliases()', 'java.nio.charset.Charset.displayName()', 'java.nio.charset.Charset.newDecoder()', 'java.nio.charset.Charset.newEncoder()', 'java.nio.charset.Charset.toString()', 'java.util.zip.ZipFile.ZipEntryIterator.nextElement()', 'java.util.zip.ZipFile.ZipEntryIterator.next()', 'java.util.zip.ZipFile.ZipEntryIterator.nextElement()', 'java.util.zip.ZipFile.ZipEntryIterator.next()', 'java.util.zip.ZipFile.getComment()', 'java.util.zip.ZipFile.getName()', 'java.util.zip.ZipFile.entries()', 'java.util.zip.ZipFile.stream()', 'java.util.jar.JarEntry.getAttributes()', 'java.util.jar.JarEntry.getCertificates()', 'java.util.jar.JarEntry.getCodeSigners()', 'java.util.jar.JarFile.JarEntryIterator.next()', 'java.util.jar.JarFile.JarEntryIterator.nextElement()', 'java.util.jar.JarFile.JarEntryIterator.nextElement()', 'java.util.jar.JarFile.JarEntryIterator.next()', 'java.util.jar.JarFile.JarFileEntry.getAttributes()', 'java.util.jar.JarFile.JarFileEntry.getCertificates()', 'java.util.jar.JarFile.JarFileEntry.getCodeSigners()', 'java.util.jar.JarFile.getManifest()', 'java.util.jar.JarFile.entries()', 'java.util.jar.JarFile.stream()', 'java.util.jar.JarFile.entries2()', 'java.util.jar.JarFile.getManifestDigests()', 'java.util.jar.JarVerifier.getManifestDigests()', 'java.util.jar.Manifest.getMainAttributes()', 'java.util.jar.Manifest.getEntries()', 'java.util.jar.Manifest.clone()', 'sun.misc.Resource.getName()', 'sun.misc.Resource.getURL()', 'sun.misc.Resource.getCodeSourceURL()', 'sun.misc.Resource.getInputStream()', 'sun.misc.Resource.getByteBuffer()', 'sun.misc.Resource.getManifest()', 'sun.misc.Resource.getCertificates()', 'sun.misc.Resource.getCodeSigners()', 'sun.misc.URLClassPath.FileLoader.1.getName()', 'sun.misc.URLClassPath.FileLoader.1.getURL()', 'sun.misc.URLClassPath.FileLoader.1.getCodeSourceURL()', 'sun.misc.URLClassPath.FileLoader.1.getInputStream()', 'java.util.AbstractCollection.iterator()', 'java.util.AbstractCollection.toArray()', 'java.util.AbstractCollection.toString()', 'java.util.AbstractList.Itr.next()', 'java.util.AbstractList.ListItr.previous()', 'java.util.AbstractList.iterator()', 'java.util.AbstractList.listIterator()', 'java.util.AbstractSequentialList.iterator()', 'java.util.Queue.remove()', 'java.util.Queue.poll()', 'java.util.Queue.element()', 'java.util.Queue.peek()', 'java.util.Deque.removeFirst()', 'java.util.Deque.removeLast()', 'java.util.Deque.pollFirst()', 'java.util.Deque.pollLast()', 'java.util.Deque.getFirst()', 'java.util.Deque.getLast()', 'java.util.Deque.peekFirst()', 'java.util.Deque.peekLast()', 'java.util.Deque.remove()', 'java.util.Deque.poll()', 'java.util.Deque.element()', 'java.util.Deque.peek()', 'java.util.Deque.pop()', 'java.util.Deque.iterator()', 'java.util.Deque.descendingIterator()', 'java.util.LinkedList.DescendingIterator.next()', 'java.util.LinkedList.LLSpliterator.trySplit()', 'java.util.LinkedList.ListItr.next()', 'java.util.LinkedList.ListItr.previous()', 'java.util.LinkedList.getFirst()', 'java.util.LinkedList.getLast()', 'java.util.LinkedList.removeFirst()', 'java.util.LinkedList.removeLast()', 'java.util.LinkedList.peek()', 'java.util.LinkedList.element()', 'java.util.LinkedList.poll()', 'java.util.LinkedList.remove()', 'java.util.LinkedList.peekFirst()', 'java.util.LinkedList.peekLast()', 'java.util.LinkedList.pollFirst()', 'java.util.LinkedList.pollLast()', 'java.util.LinkedList.pop()', 'java.util.LinkedList.descendingIterator()', 'java.util.LinkedList.clone()', 'java.util.LinkedList.toArray()', 'java.util.LinkedList.spliterator()', 'sun.misc.JarIndex.getJarFiles()', 'java.util.AbstractMap.SimpleEntry.getKey()', 'java.util.AbstractMap.SimpleEntry.getValue()', 'java.util.AbstractMap.SimpleEntry.toString()', 'java.util.AbstractMap.SimpleImmutableEntry.getKey()', 'java.util.AbstractMap.SimpleImmutableEntry.getValue()', 'java.util.AbstractMap.SimpleImmutableEntry.toString()', 'java.util.AbstractMap.keySet()', 'java.util.AbstractMap.values()', 'java.util.AbstractMap.entrySet()', 'java.util.AbstractMap.toString()', 'java.util.AbstractMap.clone()', 'java.util.HashMap.EntryIterator.next()', 'java.util.HashMap.EntrySet.iterator()', 'java.util.HashMap.EntrySet.spliterator()', 'java.util.HashMap.EntrySpliterator.trySplit()', 'java.util.HashMap.KeyIterator.next()', 'java.util.HashMap.KeySet.iterator()', 'java.util.HashMap.KeySet.spliterator()', 'java.util.HashMap.KeySpliterator.trySplit()', 'java.util.HashMap.Node.getKey()', 'java.util.HashMap.Node.getValue()', 'java.util.HashMap.Node.toString()', 'java.util.HashMap.ValueIterator.next()', 'java.util.HashMap.ValueSpliterator.trySplit()', 'java.util.HashMap.Values.iterator()', 'java.util.HashMap.Values.spliterator()', 'java.util.HashMap.keySet()', 'java.util.HashMap.values()', 'java.util.HashMap.entrySet()', 'java.util.HashMap.clone()', 'java.security.PrivilegedExceptionAction.run()', 'sun.misc.URLClassPath.JarLoader.1.run()', 'sun.misc.URLClassPath.JarLoader.1.run()', 'sun.misc.URLClassPath.JarLoader.2.getName()', 'sun.misc.URLClassPath.JarLoader.2.getURL()', 'sun.misc.URLClassPath.JarLoader.2.getCodeSourceURL()', 'sun.misc.URLClassPath.JarLoader.2.getInputStream()', 'sun.misc.URLClassPath.JarLoader.2.getManifest()', 'sun.misc.URLClassPath.JarLoader.2.getCertificates()', 'sun.misc.URLClassPath.JarLoader.2.getCodeSigners()', 'sun.misc.URLClassPath.JarLoader.3.run()', 'sun.misc.URLClassPath.JarLoader.getJarFile()', 'sun.misc.URLClassPath.JarLoader.getIndex()', 'sun.misc.URLClassPath.JarLoader.getClassPath()', 'sun.misc.URLClassPath.Loader.1.getName()', 'sun.misc.URLClassPath.Loader.1.getURL()', 'sun.misc.URLClassPath.Loader.1.getCodeSourceURL()', 'sun.misc.URLClassPath.Loader.1.getInputStream()', 'sun.misc.URLClassPath.Loader.getBaseURL()', 'sun.misc.URLClassPath.Loader.getClassPath()', 'sun.misc.URLClassPath.closeLoaders()', 'sun.misc.URLClassPath.getURLs()', 'java.lang.Package.getName()', 'java.lang.Package.getSpecificationTitle()', 'java.lang.Package.getSpecificationVersion()', 'java.lang.Package.getSpecificationVendor()', 'java.lang.Package.getImplementationTitle()', 'java.lang.Package.getImplementationVersion()', 'java.lang.Package.getImplementationVendor()', 'java.lang.Package.getPackages()', 'java.lang.Package.toString()', 'java.lang.Package.getAnnotations()', 'java.lang.Package.getDeclaredAnnotations()', 'java.lang.Package.getSystemPackages()', 'java.lang.ClassLoader.NativeLibrary.getFromClass()', 'java.lang.ClassLoader.getBootstrapClassPath()', 'java.lang.ClassLoader.getParent()', 'java.lang.ClassLoader.getSystemClassLoader()', 'java.lang.ClassLoader.getPackages()', 'java.lang.StackTraceElement.getFileName()', 'java.lang.StackTraceElement.getClassName()', 'java.lang.StackTraceElement.getMethodName()', 'java.lang.StackTraceElement.toString()', 'java.lang.Thread.currentThread()', 'java.lang.Thread.clone()', 'java.lang.Thread.getName()', 'java.lang.Thread.getThreadGroup()', 'java.lang.Thread.toString()', 'java.lang.Thread.getContextClassLoader()', 'java.lang.Thread.getStackTrace()', 'java.lang.Thread.getAllStackTraces()', 'java.lang.ref.Reference.get()', 'java.lang.ref.SoftReference.get()', 'sun.util.locale.LocaleObjectCache.CacheEntry.getKey()', 'sun.util.locale.BaseLocale.getLanguage()', 'sun.util.locale.BaseLocale.getScript()', 'sun.util.locale.BaseLocale.getRegion()', 'sun.util.locale.BaseLocale.getVariant()', 'sun.util.locale.BaseLocale.toString()', 'java.util.Locale.Builder.build()', 'java.util.Locale.LanguageRange.getRange()', 'java.util.spi.LocaleServiceProvider.getAvailableLocales()', 'java.util.Locale.getDefault()', 'java.util.Locale.getAvailableLocales()', 'java.util.Locale.getISOCountries()', 'java.util.Locale.getISOLanguages()', 'java.util.Locale.getLanguage()', 'java.util.Locale.getScript()', 'java.util.Locale.getCountry()', 'java.util.Locale.getVariant()', 'java.util.Locale.stripExtensions()', 'java.util.Locale.getExtensionKeys()', 'java.util.Locale.getUnicodeLocaleAttributes()', 'java.util.Locale.getUnicodeLocaleKeys()', 'java.util.Locale.getBaseLocale()', 'java.util.Locale.getLocaleExtensions()', 'java.util.Locale.toString()', 'java.util.Locale.toLanguageTag()', 'java.util.Locale.getISO3Language()', 'java.util.Locale.getISO3Country()', 'java.util.Locale.getDisplayLanguage()', 'java.util.Locale.getDisplayScript()', 'java.util.Locale.getDisplayCountry()', 'java.util.Locale.getDisplayVariant()', 'java.util.Locale.getDisplayName()', 'java.util.Locale.clone()', 'java.lang.StringBuilder.reverse()', 'java.lang.StringBuilder.toString()', 'java.lang.StringBuilder.reverse()', 'java.lang.String.toLowerCase()', 'java.lang.String.toUpperCase()', 'java.lang.String.trim()', 'java.lang.String.toString()', 'java.lang.String.intern()', 'java.lang.annotation.Annotation.toString()', 'java.lang.annotation.Annotation.annotationType()', 'java.lang.reflect.AnnotatedElement.getAnnotations()', 'java.lang.reflect.AnnotatedElement.getDeclaredAnnotations()', 'java.lang.reflect.Type.getTypeName()', 'java.lang.reflect.AnnotatedType.getType()', 'java.lang.reflect.TypeVariable.getBounds()', 'java.lang.reflect.TypeVariable.getGenericDeclaration()', 'java.lang.reflect.TypeVariable.getName()', 'java.lang.reflect.TypeVariable.getAnnotatedBounds()', 'java.lang.reflect.GenericDeclaration.getTypeParameters()', 'java.lang.reflect.AccessibleObject.getAnnotations()', 'java.lang.reflect.AccessibleObject.getDeclaredAnnotations()', 'java.lang.reflect.Member.getDeclaringClass()', 'java.lang.reflect.Member.getName()', 'sun.reflect.generics.visitor.TypeTreeVisitor.getResult()', 'java.lang.reflect.ParameterizedType.getActualTypeArguments()', 'java.lang.reflect.ParameterizedType.getRawType()', 'java.lang.reflect.ParameterizedType.getOwnerType()', 'java.lang.reflect.WildcardType.getUpperBounds()', 'java.lang.reflect.WildcardType.getLowerBounds()', 'sun.reflect.generics.factory.GenericsFactory.makeByte()', 'sun.reflect.generics.factory.GenericsFactory.makeBool()', 'sun.reflect.generics.factory.GenericsFactory.makeShort()', 'sun.reflect.generics.factory.GenericsFactory.makeChar()', 'sun.reflect.generics.factory.GenericsFactory.makeInt()', 'sun.reflect.generics.factory.GenericsFactory.makeLong()', 'sun.reflect.generics.factory.GenericsFactory.makeFloat()', 'sun.reflect.generics.factory.GenericsFactory.makeDouble()', 'sun.reflect.generics.factory.GenericsFactory.makeVoid()', 'sun.reflect.generics.visitor.Reifier.getResult()', 'sun.reflect.generics.visitor.Reifier.getResult()', 'sun.reflect.generics.repository.AbstractRepository.getTree()', 'sun.reflect.generics.repository.AbstractRepository.getReifier()', 'sun.reflect.generics.repository.GenericDeclRepository.getTypeParameters()', 'sun.reflect.generics.tree.FormalTypeParameter.getBounds()', 'sun.reflect.generics.tree.FormalTypeParameter.getName()', 'sun.reflect.generics.tree.Signature.getFormalTypeParameters()', 'sun.reflect.generics.tree.MethodTypeSignature.getFormalTypeParameters()', 'sun.reflect.generics.tree.MethodTypeSignature.getParameterTypes()', 'sun.reflect.generics.tree.MethodTypeSignature.getReturnType()', 'sun.reflect.generics.tree.MethodTypeSignature.getExceptionTypes()', 'sun.reflect.generics.repository.ConstructorRepository.getParameterTypes()', 'sun.reflect.generics.repository.ConstructorRepository.getExceptionTypes()', 'java.lang.reflect.Parameter.toString()', 'java.lang.reflect.Parameter.getDeclaringExecutable()', 'java.lang.reflect.Parameter.getName()', 'java.lang.reflect.Parameter.getRealName()', 'java.lang.reflect.Parameter.getParameterizedType()', 'java.lang.reflect.Parameter.getType()', 'java.lang.reflect.Parameter.getAnnotatedType()', 'java.lang.reflect.Parameter.getDeclaredAnnotations()', 'java.lang.reflect.Parameter.getAnnotations()', 'java.lang.reflect.Executable.getRoot()', 'java.lang.reflect.Executable.getGenericInfo()', 'java.lang.reflect.Executable.getDeclaringClass()', 'java.lang.reflect.Executable.getName()', 'java.lang.reflect.Executable.getTypeParameters()', 'java.lang.reflect.Executable.getParameterTypes()', 'java.lang.reflect.Executable.getGenericParameterTypes()', 'java.lang.reflect.Executable.getAllGenericParameterTypes()', 'java.lang.reflect.Executable.getParameters()', 'java.lang.reflect.Executable.getExceptionTypes()', 'java.lang.reflect.Executable.getGenericExceptionTypes()', 'java.lang.reflect.Executable.toGenericString()', 'java.lang.reflect.Executable.getParameterAnnotations()', 'java.lang.reflect.Executable.getDeclaredAnnotations()', 'java.lang.reflect.Executable.getAnnotatedReturnType()', 'java.lang.reflect.Executable.getAnnotatedReceiverType()', 'java.lang.reflect.Executable.getAnnotatedParameterTypes()', 'java.lang.reflect.Executable.getAnnotatedExceptionTypes()', 'sun.reflect.generics.repository.MethodRepository.getReturnType()', 'java.lang.reflect.Method.getGenericInfo()', 'java.lang.reflect.Method.copy()', 'java.lang.reflect.Method.getRoot()', 'java.lang.reflect.Method.getDeclaringClass()', 'java.lang.reflect.Method.getName()', 'java.lang.reflect.Method.getTypeParameters()', 'java.lang.reflect.Method.getReturnType()', 'java.lang.reflect.Method.getGenericReturnType()', 'java.lang.reflect.Method.getParameterTypes()', 'java.lang.reflect.Method.getGenericParameterTypes()', 'java.lang.reflect.Method.getExceptionTypes()', 'java.lang.reflect.Method.getGenericExceptionTypes()', 'java.lang.reflect.Method.toString()', 'java.lang.reflect.Method.toGenericString()', 'java.lang.reflect.Method.getMethodAccessor()', 'java.lang.reflect.Method.getDefaultValue()', 'java.lang.reflect.Method.getDeclaredAnnotations()', 'java.lang.reflect.Method.getParameterAnnotations()', 'java.lang.reflect.Method.getAnnotatedReturnType()', 'java.lang.reflect.Method.getGenericInfo()', 'java.lang.reflect.Constructor.getGenericInfo()', 'java.lang.reflect.Constructor.getRoot()', 'java.lang.reflect.Constructor.copy()', 'java.lang.reflect.Constructor.getDeclaringClass()', 'java.lang.reflect.Constructor.getName()', 'java.lang.reflect.Constructor.getTypeParameters()', 'java.lang.reflect.Constructor.getParameterTypes()', 'java.lang.reflect.Constructor.getGenericParameterTypes()', 'java.lang.reflect.Constructor.getExceptionTypes()', 'java.lang.reflect.Constructor.getGenericExceptionTypes()', 'java.lang.reflect.Constructor.toString()', 'java.lang.reflect.Constructor.toGenericString()', 'java.lang.reflect.Constructor.getConstructorAccessor()', 'java.lang.reflect.Constructor.getSignature()', 'java.lang.reflect.Constructor.getDeclaredAnnotations()', 'java.lang.reflect.Constructor.getParameterAnnotations()', 'java.lang.reflect.Constructor.getAnnotatedReturnType()', 'java.lang.reflect.Constructor.getAnnotatedReceiverType()', 'java.lang.reflect.Field.copy()', 'java.lang.reflect.Field.getDeclaringClass()', 'java.lang.reflect.Field.getName()', 'java.lang.reflect.Field.getType()', 'java.lang.reflect.Field.getGenericType()', 'java.lang.reflect.Field.toString()', 'java.lang.reflect.Field.toGenericString()', 'java.lang.reflect.Field.getDeclaredAnnotations()', 'java.lang.reflect.Field.getAnnotatedType()', 'java.lang.annotation.RetentionPolicy.values()', 'sun.reflect.annotation.AnnotationType.memberTypes()', 'sun.reflect.annotation.AnnotationType.members()', 'sun.reflect.annotation.AnnotationType.memberDefaults()', 'sun.reflect.annotation.AnnotationType.retention()', 'sun.reflect.annotation.AnnotationType.toString()', 'java.lang.Class.EnclosingMethodInfo.getEnclosingClass()', 'java.lang.Class.EnclosingMethodInfo.getName()', 'java.lang.Class.EnclosingMethodInfo.getDescriptor()', 'java.lang.Class.MethodArray.getFirst()', 'java.lang.Class.MethodArray.getArray()', 'java.lang.Class.toString()', 'java.lang.Class.toGenericString()', 'java.lang.Class.newInstance()', 'java.lang.Class.getName()', 'java.lang.Class.getClassLoader()', 'java.lang.Class.getClassLoader0()', 'java.lang.Class.getTypeParameters()', 'java.lang.Class.getSuperclass()', 'java.lang.Class.getGenericSuperclass()', 'java.lang.Class.getPackage()', 'java.lang.Class.getInterfaces()', 'java.lang.Class.getGenericInterfaces()', 'java.lang.Class.getComponentType()', 'java.lang.Class.getSigners()', 'java.lang.Class.getEnclosingMethod()', 'java.lang.Class.getEnclosingConstructor()', 'java.lang.Class.getDeclaringClass()', 'java.lang.Class.getEnclosingClass()', 'java.lang.Class.getSimpleName()', 'java.lang.Class.getTypeName()', 'java.lang.Class.getCanonicalName()', 'java.lang.Class.getClasses()', 'java.lang.Class.getFields()', 'java.lang.Class.getMethods()', 'java.lang.Class.getConstructors()', 'java.lang.Class.getDeclaredClasses()', 'java.lang.Class.getDeclaredFields()', 'java.lang.Class.getDeclaredMethods()', 'java.lang.Class.getDeclaredConstructors()', 'java.lang.Class.getProtectionDomain()', 'java.lang.Class.getConstantPool()', 'java.lang.Class.getEnumConstants()', 'java.lang.Class.getEnumConstantsShared()', 'java.lang.Class.enumConstantDirectory()', 'java.lang.Class.getAnnotations()', 'java.lang.Class.getDeclaredAnnotations()', 'java.lang.Class.getAnnotationType()', 'java.lang.Class.getDeclaredAnnotationMap()', 'java.lang.Class.getAnnotatedSuperclass()', 'java.lang.Class.getAnnotatedInterfaces()', 'java.lang.Object.getClass()', 'java.lang.Object.clone()', 'java.lang.Object.toString()', 'org.eclipse.core.commands.common.EventManager.getListeners()', 'org.eclipse.core.commands.common.IIdentifiable.getId()', 'org.eclipse.core.commands.common.HandleObject.getId()', 'org.eclipse.core.commands.common.HandleObject.toString()', 'org.eclipse.core.commands.common.NamedHandleObject.getDescription()', 'org.eclipse.core.commands.common.NamedHandleObject.getName()', 'org.eclipse.core.commands.State.getId()', 'org.eclipse.core.commands.State.getValue()', 'org.eclipse.core.commands.IObjectWithState.getStateIds()', 'org.eclipse.core.commands.NamedHandleObjectWithState.getDescription()', 'org.eclipse.core.commands.NamedHandleObjectWithState.getName()', 'org.eclipse.core.commands.NamedHandleObjectWithState.getStateIds()', 'org.eclipse.core.commands.Category.toString()', 'org.eclipse.core.commands.IParameterValues.getParameterValues()', 'org.eclipse.core.commands.IParameter.getId()', 'org.eclipse.core.commands.IParameter.getName()', 'org.eclipse.core.commands.IParameter.getValues()', 'org.eclipse.core.commands.ParameterType.getValueConverter()', 'org.eclipse.core.commands.ParameterType.toString()', 'org.eclipse.core.commands.Command.getCategory()', 'org.eclipse.core.commands.Command.getHandler()', 'org.eclipse.core.commands.Command.getHelpContextId()', 'org.eclipse.core.commands.Command.getParameters()', 'org.eclipse.core.commands.Command.getReturnType()', 'org.eclipse.core.commands.Command.toString()', 'org.eclipse.core.commands.ExecutionEvent.getApplicationContext()', 'org.eclipse.core.commands.ExecutionEvent.getCommand()', 'org.eclipse.core.commands.ExecutionEvent.getParameters()', 'org.eclipse.core.commands.ExecutionEvent.getTrigger()', 'org.eclipse.core.commands.ExecutionEvent.toString()', 'org.eclipse.core.resources.IMarker.getAttributes()', 'org.eclipse.core.resources.IMarker.getResource()', 'org.eclipse.core.resources.IMarker.getType()', 'org.eclipse.core.runtime.QualifiedName.getLocalName()', 'org.eclipse.core.runtime.QualifiedName.getQualifier()', 'org.eclipse.core.runtime.QualifiedName.toString()', 'org.eclipse.core.runtime.IPath.addTrailingSeparator()', 'org.eclipse.core.runtime.IPath.clone()', 'org.eclipse.core.runtime.IPath.getDevice()', 'org.eclipse.core.runtime.IPath.getFileExtension()', 'org.eclipse.core.runtime.IPath.lastSegment()', 'org.eclipse.core.runtime.IPath.makeAbsolute()', 'org.eclipse.core.runtime.IPath.makeRelative()', 'org.eclipse.core.runtime.IPath.removeFileExtension()', 'org.eclipse.core.runtime.IPath.removeTrailingSeparator()', 'org.eclipse.core.runtime.IPath.segments()', 'org.eclipse.core.runtime.IPath.toFile()', 'org.eclipse.core.runtime.IPath.toOSString()', 'org.eclipse.core.runtime.IPath.toPortableString()', 'org.eclipse.core.runtime.IPath.toString()', 'org.eclipse.core.resources.IResourceProxy.getName()', 'org.eclipse.core.resources.IResourceProxy.requestFullPath()', 'org.eclipse.core.resources.IResourceProxy.requestResource()', 'java.lang.Throwable.PrintStreamOrWriter.lock()', 'java.lang.Throwable.WrappedPrintStream.lock()', 'java.lang.Throwable.WrappedPrintWriter.lock()', 'java.lang.Throwable.getMessage()', 'java.lang.Throwable.getLocalizedMessage()', 'java.lang.Throwable.getCause()', 'java.lang.Throwable.toString()', 'java.lang.Throwable.fillInStackTrace()', 'java.lang.Throwable.getStackTrace()', 'java.lang.Throwable.getSuppressed()', 'org.eclipse.core.runtime.IStatus.getChildren()', 'org.eclipse.core.runtime.IStatus.getException()', 'org.eclipse.core.runtime.IStatus.getMessage()', 'org.eclipse.core.runtime.IStatus.getPlugin()', 'org.eclipse.core.resources.IPathVariableManager.getPathVariableNames()', 'org.eclipse.core.resources.ResourceAttributes.toString()', 'org.eclipse.core.resources.ISavedState.getFiles()', 'org.eclipse.core.runtime.IContributor.getName()', 'org.eclipse.core.runtime.IConfigurationElement.getAttributeNames()', 'org.eclipse.core.runtime.IConfigurationElement.getChildren()', 'org.eclipse.core.runtime.IConfigurationElement.getDeclaringExtension()', 'org.eclipse.core.runtime.IConfigurationElement.getName()', 'org.eclipse.core.runtime.IConfigurationElement.getParent()', 'org.eclipse.core.runtime.IConfigurationElement.getValue()', 'org.eclipse.core.runtime.IConfigurationElement.getValueAsIs()', 'org.eclipse.core.runtime.IConfigurationElement.getNamespace()', 'org.eclipse.core.runtime.IConfigurationElement.getNamespaceIdentifier()', 'org.eclipse.core.runtime.IConfigurationElement.getContributor()', 'org.eclipse.core.runtime.IExtension.getConfigurationElements()', 'org.eclipse.core.runtime.IExtension.getNamespace()', 'org.eclipse.core.runtime.IExtension.getNamespaceIdentifier()', 'org.eclipse.core.runtime.IExtension.getContributor()', 'org.eclipse.core.runtime.IExtension.getExtensionPointUniqueIdentifier()', 'org.eclipse.core.runtime.IExtension.getLabel()', 'org.eclipse.core.runtime.IExtension.getSimpleIdentifier()', 'org.eclipse.core.runtime.IExtension.getUniqueIdentifier()', 'org.eclipse.core.runtime.IExtensionPoint.getConfigurationElements()', 'org.eclipse.core.runtime.IExtensionPoint.getNamespace()', 'org.eclipse.core.runtime.IExtensionPoint.getNamespaceIdentifier()', 'org.eclipse.core.runtime.IExtensionPoint.getContributor()', 'org.eclipse.core.runtime.IExtensionPoint.getExtensions()', 'org.eclipse.core.runtime.IExtensionPoint.getLabel()', 'org.eclipse.core.runtime.IExtensionPoint.getSchemaReference()', 'org.eclipse.core.runtime.IExtensionPoint.getSimpleIdentifier()', 'org.eclipse.core.runtime.IExtensionPoint.getUniqueIdentifier()', 'org.eclipse.core.runtime.PluginVersionIdentifier.getQualifierComponent()', 'org.eclipse.core.runtime.PluginVersionIdentifier.toString()', 'org.eclipse.core.runtime.IPluginPrerequisite.getResolvedVersionIdentifier()', 'org.eclipse.core.runtime.IPluginPrerequisite.getUniqueIdentifier()', 'org.eclipse.core.runtime.IPluginPrerequisite.getVersionIdentifier()', 'java.util.ResourceBundle.CacheKey.getName()', 'java.util.ResourceBundle.CacheKey.getLocale()', 'java.util.ResourceBundle.CacheKey.getLoader()', 'java.util.ResourceBundle.CacheKey.clone()', 'java.util.ResourceBundle.CacheKey.getFormat()', 'java.util.ResourceBundle.CacheKey.toString()', 'java.util.ResourceBundle.Control.1.run()', 'java.util.ResourceBundle.Control.1.run()', 'java.util.ResourceBundle.RBClassLoader.1.run()', 'java.util.ResourceBundle.getBaseBundleName()', 'java.util.ResourceBundle.getLocale()', 'java.util.ResourceBundle.getKeys()', 'java.util.ResourceBundle.keySet()', 'java.util.ResourceBundle.handleKeySet()', 'org.eclipse.core.runtime.ILibrary.getContentFilters()', 'org.eclipse.core.runtime.ILibrary.getPath()', 'org.eclipse.core.runtime.ILibrary.getType()', 'org.eclipse.core.runtime.ILibrary.getPackagePrefixes()', 'org.eclipse.core.runtime.IPluginDescriptor.getExtensionPoints()', 'org.eclipse.core.runtime.IPluginDescriptor.getExtensions()', 'org.eclipse.core.runtime.IPluginDescriptor.getInstallURL()', 'org.eclipse.core.runtime.IPluginDescriptor.getLabel()', 'org.eclipse.core.runtime.IPluginDescriptor.getPlugin()', 'org.eclipse.core.runtime.IPluginDescriptor.getPluginClassLoader()', 'org.eclipse.core.runtime.IPluginDescriptor.getPluginPrerequisites()', 'org.eclipse.core.runtime.IPluginDescriptor.getProviderName()', 'org.eclipse.core.runtime.IPluginDescriptor.getResourceBundle()', 'org.eclipse.core.runtime.IPluginDescriptor.getRuntimeLibraries()', 'org.eclipse.core.runtime.IPluginDescriptor.getUniqueIdentifier()', 'org.eclipse.core.runtime.IPluginDescriptor.getVersionIdentifier()', 'java.util.Dictionary.keys()', 'java.util.Dictionary.elements()', 'org.osgi.framework.ServiceReference.getPropertyKeys()', 'org.osgi.framework.ServiceReference.getBundle()', 'org.osgi.framework.ServiceReference.getUsingBundles()', 'org.osgi.framework.ServiceReference.getProperties()', 'org.osgi.framework.BundleReference.getBundle()', 'org.osgi.framework.ServiceRegistration.getReference()', 'org.osgi.framework.ServiceObjects.getService()', 'org.osgi.framework.ServiceObjects.getServiceReference()', 'org.osgi.framework.Filter.toString()', 'org.osgi.framework.BundleContext.getBundle()', 'org.osgi.framework.BundleContext.getBundles()', 'org.osgi.framework.Version.getQualifier()', 'org.osgi.framework.Version.toString()', 'org.osgi.framework.Version.toString0()', 'org.osgi.framework.Bundle.getHeaders()', 'org.osgi.framework.Bundle.getLocation()', 'org.osgi.framework.Bundle.getRegisteredServices()', 'org.osgi.framework.Bundle.getServicesInUse()', 'org.osgi.framework.Bundle.getSymbolicName()', 'org.osgi.framework.Bundle.getBundleContext()', 'org.osgi.framework.Bundle.getVersion()', 'org.eclipse.core.runtime.ILog.getBundle()', 'java.util.EventObject.getSource()', 'java.util.EventObject.toString()', 'org.eclipse.core.runtime.Preferences.PropertyChangeEvent.getProperty()', 'org.eclipse.core.runtime.Preferences.PropertyChangeEvent.getNewValue()', 'org.eclipse.core.runtime.Preferences.PropertyChangeEvent.getOldValue()', 'org.eclipse.core.runtime.Preferences.propertyNames()', 'org.eclipse.core.runtime.Preferences.defaultPropertyNames()', 'org.eclipse.core.runtime.Plugin.getDescriptor()', 'org.eclipse.core.runtime.Plugin.getLog()', 'org.eclipse.core.runtime.Plugin.getStateLocation()', 'org.eclipse.core.runtime.Plugin.getPluginPreferences()', 'org.eclipse.core.runtime.Plugin.toString()', 'org.eclipse.core.runtime.Plugin.getBundle()', 'org.eclipse.core.resources.IFilterMatcherDescriptor.getArgumentType()', 'org.eclipse.core.resources.IFilterMatcherDescriptor.getDescription()', 'org.eclipse.core.resources.IFilterMatcherDescriptor.getId()', 'org.eclipse.core.resources.IFilterMatcherDescriptor.getName()', 'org.eclipse.core.resources.IProjectNatureDescriptor.getNatureId()', 'org.eclipse.core.resources.IProjectNatureDescriptor.getLabel()', 'org.eclipse.core.resources.IProjectNatureDescriptor.getRequiredNatureIds()', 'org.eclipse.core.resources.IProjectNatureDescriptor.getNatureSetIds()', 'org.eclipse.core.resources.IWorkspaceDescription.getBuildOrder()', 'org.eclipse.core.resources.IStorage.getContents()', 'org.eclipse.core.resources.IStorage.getFullPath()', 'org.eclipse.core.resources.IStorage.getName()', 'org.eclipse.core.resources.IEncodedStorage.getCharset()', 'org.eclipse.core.runtime.content.IContentTypeSettings.getDefaultCharset()', 'org.eclipse.core.runtime.content.IContentTypeSettings.getId()', 'org.osgi.service.prefs.Preferences.keys()', 'org.osgi.service.prefs.Preferences.childrenNames()', 'org.osgi.service.prefs.Preferences.parent()', 'org.osgi.service.prefs.Preferences.name()', 'org.osgi.service.prefs.Preferences.absolutePath()', 'org.eclipse.core.runtime.preferences.IEclipsePreferences.NodeChangeEvent.getParent()', 'org.eclipse.core.runtime.preferences.IEclipsePreferences.NodeChangeEvent.getChild()', 'org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent.getNode()', 'org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent.getKey()', 'org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent.getNewValue()', 'org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent.getOldValue()', 'org.eclipse.core.runtime.preferences.IScopeContext.getName()', 'org.eclipse.core.runtime.preferences.IScopeContext.getLocation()', 'org.eclipse.core.runtime.content.IContentType.getBaseType()', 'org.eclipse.core.runtime.content.IContentType.getDefaultDescription()', 'org.eclipse.core.runtime.content.IContentType.getDefaultCharset()', 'org.eclipse.core.runtime.content.IContentType.getId()', 'org.eclipse.core.runtime.content.IContentType.getName()', 'org.eclipse.core.runtime.content.IContentDescription.getCharset()', 'org.eclipse.core.runtime.content.IContentDescription.getContentType()', 'org.eclipse.core.resources.IFileState.getContents()', 'org.eclipse.core.resources.IFileState.getFullPath()', 'org.eclipse.core.resources.IFileState.getName()', 'org.eclipse.core.resources.IFile.getCharset()', 'org.eclipse.core.resources.IFile.getContentDescription()', 'org.eclipse.core.resources.IFile.getContents()', 'org.eclipse.core.resources.IFile.getFullPath()', 'org.eclipse.core.resources.IFile.getName()', 'org.eclipse.core.resources.IWorkspaceRoot.getProjects()', 'org.eclipse.core.resources.IResourceRuleFactory.buildRule()', 'org.eclipse.core.resources.ISynchronizer.getPartners()', 'org.eclipse.core.resources.IBuildConfiguration.getProject()', 'org.eclipse.core.resources.IBuildConfiguration.getName()', 'org.eclipse.core.resources.ICommand.getArguments()', 'org.eclipse.core.resources.ICommand.getBuilderName()', 'org.eclipse.core.resources.IProjectDescription.getBuildSpec()', 'org.eclipse.core.resources.IProjectDescription.getComment()', 'org.eclipse.core.resources.IProjectDescription.getDynamicReferences()', 'org.eclipse.core.resources.IProjectDescription.getLocation()', 'org.eclipse.core.resources.IProjectDescription.getLocationURI()', 'org.eclipse.core.resources.IProjectDescription.getName()', 'org.eclipse.core.resources.IProjectDescription.getNatureIds()', 'org.eclipse.core.resources.IProjectDescription.getReferencedProjects()', 'org.eclipse.core.resources.IProjectDescription.newCommand()', 'org.eclipse.core.resources.IWorkspace.getFilterMatcherDescriptors()', 'org.eclipse.core.resources.IWorkspace.getNatureDescriptors()', 'org.eclipse.core.resources.IWorkspace.getDanglingReferences()', 'org.eclipse.core.resources.IWorkspace.getDescription()', 'org.eclipse.core.resources.IWorkspace.getRoot()', 'org.eclipse.core.resources.IWorkspace.getRuleFactory()', 'org.eclipse.core.resources.IWorkspace.getSynchronizer()', 'org.eclipse.core.resources.IWorkspace.getPathVariableManager()', 'org.eclipse.core.resources.IResource.createProxy()', 'org.eclipse.core.resources.IResource.getFileExtension()', 'org.eclipse.core.resources.IResource.getFullPath()', 'org.eclipse.core.resources.IResource.getLocation()', 'org.eclipse.core.resources.IResource.getLocationURI()', 'org.eclipse.core.resources.IResource.getName()', 'org.eclipse.core.resources.IResource.getPathVariableManager()', 'org.eclipse.core.resources.IResource.getParent()', 'org.eclipse.core.resources.IResource.getPersistentProperties()', 'org.eclipse.core.resources.IResource.getProject()', 'org.eclipse.core.resources.IResource.getProjectRelativePath()', 'org.eclipse.core.resources.IResource.getRawLocation()', 'org.eclipse.core.resources.IResource.getRawLocationURI()', 'org.eclipse.core.resources.IResource.getResourceAttributes()', 'org.eclipse.core.resources.IResource.getSessionProperties()', 'org.eclipse.core.resources.IResource.getWorkspace()', 'org.eclipse.core.resources.FileInfoMatcherDescription.getArguments()', 'org.eclipse.core.resources.FileInfoMatcherDescription.getId()', 'org.eclipse.core.resources.IResourceFilterDescription.getFileInfoMatcherDescription()', 'org.eclipse.core.resources.IResourceFilterDescription.getResource()', 'org.eclipse.core.resources.IContainer.getDefaultCharset()', 'org.eclipse.core.resources.IContainer.members()', 'org.eclipse.core.resources.IContainer.getFilters()', 'org.eclipse.core.resources.IProjectNature.getProject()', 'org.eclipse.core.resources.IProject.getActiveBuildConfig()', 'org.eclipse.core.resources.IProject.getBuildConfigs()', 'org.eclipse.core.resources.IProject.getContentTypeMatcher()', 'org.eclipse.core.resources.IProject.getDescription()', 'org.eclipse.core.resources.IProject.getReferencedProjects()', 'org.eclipse.core.resources.IProject.getReferencingProjects()', 'org.eclipse.jgit.events.ListenerHandle.toString()', 'org.eclipse.jgit.lib.AbbreviatedObjectId.toObjectId()', 'org.eclipse.jgit.lib.AbbreviatedObjectId.name()', 'org.eclipse.jgit.lib.AbbreviatedObjectId.toString()', 'org.eclipse.jgit.lib.AnyObjectId.toString()', 'org.eclipse.jgit.lib.AnyObjectId.name()', 'org.eclipse.jgit.lib.AnyObjectId.getName()', 'org.eclipse.jgit.lib.AnyObjectId.copy()', 'org.eclipse.jgit.lib.AnyObjectId.toObjectId()', 'org.eclipse.jgit.lib.ObjectId.zeroId()', 'org.eclipse.jgit.lib.ObjectId.toObjectId()', 'org.eclipse.jgit.util.sha1.SHA1.State.toObjectId()', 'org.eclipse.jgit.util.sha1.SHA1.newInstance()', 'org.eclipse.jgit.util.sha1.SHA1.toObjectId()', 'org.eclipse.jgit.util.sha1.SHA1.reset()', 'org.eclipse.jgit.lib.TreeFormatter.toString()', 'java.util.TimeZone.getID()', 'java.util.TimeZone.getDisplayName()', 'java.util.TimeZone.toZoneId()', 'java.util.TimeZone.getAvailableIDs()', 'java.util.TimeZone.getDefault()', 'java.util.TimeZone.getDefaultRef()', 'java.util.TimeZone.clone()', 'java.sql.Timestamp.toString()', 'java.sql.Timestamp.toLocalDateTime()', 'java.sql.Timestamp.toInstant()', 'org.eclipse.jgit.util.time.ProposedTimestamp.instant()', 'org.eclipse.jgit.util.time.ProposedTimestamp.timestamp()', 'org.eclipse.jgit.util.time.ProposedTimestamp.date()', 'org.eclipse.jgit.util.time.ProposedTimestamp.toString()', 'org.eclipse.jgit.lib.PersonIdent.getName()', 'org.eclipse.jgit.lib.PersonIdent.getEmailAddress()', 'org.eclipse.jgit.lib.PersonIdent.getWhen()', 'org.eclipse.jgit.lib.PersonIdent.getTimeZone()', 'org.eclipse.jgit.lib.PersonIdent.toExternalString()', 'org.eclipse.jgit.lib.PersonIdent.toString()', 'org.eclipse.jgit.lib.CommitBuilder.getTreeId()', 'org.eclipse.jgit.lib.CommitBuilder.getAuthor()', 'org.eclipse.jgit.lib.CommitBuilder.getCommitter()', 'org.eclipse.jgit.lib.CommitBuilder.getParentIds()', 'org.eclipse.jgit.lib.CommitBuilder.getMessage()', 'org.eclipse.jgit.lib.CommitBuilder.getEncoding()', 'org.eclipse.jgit.lib.CommitBuilder.toString()', 'org.eclipse.jgit.lib.TagBuilder.getObjectId()', 'org.eclipse.jgit.lib.TagBuilder.getTag()', 'org.eclipse.jgit.lib.TagBuilder.getTagger()', 'org.eclipse.jgit.lib.TagBuilder.getMessage()', 'org.eclipse.jgit.lib.TagBuilder.toString()', 'org.eclipse.jgit.lib.ObjectIdSubclassMap.iterator()', 'org.eclipse.jgit.transport.ReceivedPackStatistics.Builder.build()', 'java.lang.Boolean.toString()', 'java.lang.Process.getOutputStream()', 'java.lang.Process.getInputStream()', 'java.lang.Process.getErrorStream()', 'java.lang.Process.destroyForcibly()', 'java.lang.ProcessBuilder.Redirect.1.toString()', 'java.lang.ProcessBuilder.Redirect.2.toString()', 'java.lang.ProcessBuilder.Redirect.3.file()', 'java.lang.ProcessBuilder.Redirect.3.toString()', 'java.lang.ProcessBuilder.Redirect.4.file()', 'java.lang.ProcessBuilder.Redirect.4.toString()', 'java.lang.ProcessBuilder.Redirect.5.file()', 'java.lang.ProcessBuilder.Redirect.5.toString()', 'java.lang.ProcessBuilder.Redirect.file()', 'java.lang.ProcessBuilder.command()', 'java.lang.ProcessBuilder.environment()', 'java.lang.ProcessBuilder.directory()', 'java.lang.ProcessBuilder.inheritIO()', 'java.lang.ProcessBuilder.start()', 'org.eclipse.jgit.util.FS.Attributes.getName()', 'org.eclipse.jgit.util.FS.Attributes.getFile()', 'org.eclipse.jgit.util.TemporaryBuffer.Heap.overflow()', 'java.io.FileInputStream.getFD()', 'java.io.FileInputStream.getChannel()', 'org.eclipse.jgit.util.TemporaryBuffer.LocalFile.overflow()', 'org.eclipse.jgit.util.TemporaryBuffer.LocalFile.openInputStream()', 'org.eclipse.jgit.util.TemporaryBuffer.LocalFile.openInputStreamWithAutoDestroy()', 'org.eclipse.jgit.util.TemporaryBuffer.openInputStream()', 'org.eclipse.jgit.util.TemporaryBuffer.openInputStreamWithAutoDestroy()', 'org.eclipse.jgit.util.TemporaryBuffer.overflow()', 'org.eclipse.jgit.util.FS.ExecutionResult.getStdout()', 'org.eclipse.jgit.util.FS.ExecutionResult.getStderr()', 'org.eclipse.jgit.util.FS.LockToken.toString()', 'org.eclipse.jgit.util.FS.detect()', 'org.eclipse.jgit.util.FS.newInstance()', 'org.eclipse.jgit.util.FS.userHome()', 'org.eclipse.jgit.util.FS.userHomeImpl()', 'org.eclipse.jgit.util.FS.discoverGitExe()', 'org.eclipse.jgit.util.FS.discoverGitSystemConfig()', 'org.eclipse.jgit.util.FS.getGitSystemConfig()', 'org.eclipse.jgit.transport.PackParser.getNewObjectIds()', 'org.eclipse.jgit.transport.PackParser.getBaseObjectIds()', 'org.eclipse.jgit.transport.PackParser.getLockMessage()', 'org.eclipse.jgit.transport.PackParser.getReceivedPackStatistics()', 'org.eclipse.jgit.lib.ObjectLoader.Filter.delegate()', 'org.eclipse.jgit.lib.ObjectLoader.Filter.openStream()', 'org.eclipse.jgit.lib.ObjectLoader.SmallObject.openStream()', 'org.eclipse.jgit.lib.ObjectLoader.openStream()', 'org.eclipse.jgit.lib.AsyncObjectLoaderQueue.getCurrent()', 'org.eclipse.jgit.lib.AsyncObjectLoaderQueue.getObjectId()', 'org.eclipse.jgit.lib.AsyncObjectLoaderQueue.open()', 'org.eclipse.jgit.lib.AsyncObjectSizeQueue.getCurrent()', 'org.eclipse.jgit.lib.AsyncObjectSizeQueue.getObjectId()', 'org.eclipse.jgit.lib.BitmapIndex.Bitmap.iterator()', 'org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.getBitmapIndex()', 'org.eclipse.jgit.lib.ObjectReader.Filter.delegate()', 'org.eclipse.jgit.lib.ObjectReader.Filter.newReader()', 'org.eclipse.jgit.lib.ObjectReader.Filter.getShallowCommits()', 'org.eclipse.jgit.lib.ObjectReader.Filter.getBitmapIndex()', 'org.eclipse.jgit.lib.ObjectReader.Filter.getCreatedFromInserter()', 'org.eclipse.jgit.lib.ObjectReader.newReader()', 'org.eclipse.jgit.lib.ObjectReader.getShallowCommits()', 'org.eclipse.jgit.lib.ObjectReader.getBitmapIndex()', 'org.eclipse.jgit.lib.ObjectReader.getCreatedFromInserter()', 'org.eclipse.jgit.lib.ObjectInserter.Filter.1.delegate()', 'org.eclipse.jgit.lib.ObjectInserter.Filter.1.getCreatedFromInserter()', 'org.eclipse.jgit.lib.ObjectInserter.Filter.delegate()', 'org.eclipse.jgit.lib.ObjectInserter.Filter.newReader()', 'org.eclipse.jgit.lib.ObjectInserter.Formatter.newReader()', 'org.eclipse.jgit.lib.ObjectInserter.digest()', 'org.eclipse.jgit.lib.ObjectInserter.newReader()', 'org.eclipse.jgit.lib.ObjectDatabase.newInserter()', 'org.eclipse.jgit.lib.ObjectDatabase.newReader()', 'org.eclipse.jgit.lib.ObjectDatabase.newCachedDatabase()', 'org.eclipse.jgit.lib.Ref.getName()', 'org.eclipse.jgit.lib.Ref.getLeaf()', 'org.eclipse.jgit.lib.Ref.getTarget()', 'org.eclipse.jgit.lib.Ref.getObjectId()', 'org.eclipse.jgit.lib.Ref.getPeeledObjectId()', 'org.eclipse.jgit.transport.PushCertificateIdent.getRaw()', 'org.eclipse.jgit.transport.PushCertificateIdent.getUserId()', 'org.eclipse.jgit.transport.PushCertificateIdent.getName()', 'org.eclipse.jgit.transport.PushCertificateIdent.getEmailAddress()', 'org.eclipse.jgit.transport.PushCertificateIdent.getWhen()', 'org.eclipse.jgit.transport.PushCertificateIdent.getTimeZone()', 'org.eclipse.jgit.transport.PushCertificateIdent.toString()', 'org.eclipse.jgit.transport.PushCertificate.getVersion()', 'org.eclipse.jgit.transport.PushCertificate.getPusher()', 'org.eclipse.jgit.transport.PushCertificate.getPusherIdent()', 'org.eclipse.jgit.transport.PushCertificate.getPushee()', 'org.eclipse.jgit.transport.PushCertificate.getNonce()', 'org.eclipse.jgit.transport.PushCertificate.getCommands()', 'org.eclipse.jgit.transport.PushCertificate.getSignature()', 'org.eclipse.jgit.transport.PushCertificate.toText()', 'org.eclipse.jgit.transport.PushCertificate.toTextWithSignature()', 'org.eclipse.jgit.transport.PushCertificate.toString()', 'org.eclipse.jgit.lib.RefUpdate.getRefDatabase()', 'org.eclipse.jgit.lib.RefUpdate.getRepository()', 'org.eclipse.jgit.lib.RefUpdate.getName()', 'org.eclipse.jgit.lib.RefUpdate.getRef()', 'org.eclipse.jgit.lib.RefUpdate.getNewObjectId()', 'org.eclipse.jgit.lib.RefUpdate.getExpectedOldObjectId()', 'org.eclipse.jgit.lib.RefUpdate.getRefLogIdent()', 'org.eclipse.jgit.lib.RefUpdate.getRefLogMessage()', 'org.eclipse.jgit.lib.RefUpdate.getOldObjectId()', 'org.eclipse.jgit.lib.RefUpdate.getPushCertificate()', 'org.eclipse.jgit.lib.RefRename.getRefLogIdent()', 'org.eclipse.jgit.lib.RefRename.getRefLogMessage()', 'org.eclipse.jgit.transport.ReceiveCommand.getOldId()', 'org.eclipse.jgit.transport.ReceiveCommand.getOldSymref()', 'org.eclipse.jgit.transport.ReceiveCommand.getNewId()', 'org.eclipse.jgit.transport.ReceiveCommand.getNewSymref()', 'org.eclipse.jgit.transport.ReceiveCommand.getRefName()', 'org.eclipse.jgit.transport.ReceiveCommand.getRef()', 'org.eclipse.jgit.transport.ReceiveCommand.getMessage()', 'org.eclipse.jgit.transport.ReceiveCommand.getRefLogMessage()', 'org.eclipse.jgit.transport.ReceiveCommand.toString()', 'org.eclipse.jgit.lib.BatchRefUpdate.getRefLogIdent()', 'org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage()', 'org.eclipse.jgit.lib.BatchRefUpdate.disableRefLog()', 'org.eclipse.jgit.lib.BatchRefUpdate.getPushCertificate()', 'org.eclipse.jgit.lib.BatchRefUpdate.getCommands()', 'org.eclipse.jgit.lib.BatchRefUpdate.getPushOptions()', 'org.eclipse.jgit.lib.BatchRefUpdate.getProposedTimestamps()', 'org.eclipse.jgit.lib.BatchRefUpdate.toString()', 'org.eclipse.jgit.lib.RefDatabase.newBatchUpdate()', 'org.eclipse.jgit.lib.RefDatabase.getRefs()', 'org.eclipse.jgit.lib.RefDatabase.getAdditionalRefs()', 'org.eclipse.jgit.lib.Config.ConfigEnum.toConfigValue()', 'org.eclipse.jgit.lib.Config.getSections()', 'org.eclipse.jgit.lib.Config.toText()', 'org.eclipse.jgit.attributes.AttributesNode.getRules()', 'org.eclipse.jgit.attributes.AttributesNodeProvider.getInfoAttributesNode()', 'org.eclipse.jgit.attributes.AttributesNodeProvider.getGlobalAttributesNode()', 'org.eclipse.jgit.revwalk.RevObject.getId()', 'org.eclipse.jgit.revwalk.RevObject.toString()', 'java.util.EnumSet.clone()', 'java.util.EnumSet.writeReplace()', 'java.util.EnumSet.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.AllFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.AllFilter.toString()', 'org.eclipse.jgit.revwalk.filter.RevFilter.AllFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.MergeBaseFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.MergeBaseFilter.toString()', 'org.eclipse.jgit.revwalk.filter.RevFilter.MergeBaseFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.NoMergesFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.NoMergesFilter.toString()', 'org.eclipse.jgit.revwalk.filter.RevFilter.NoMergesFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.NoneFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.NoneFilter.toString()', 'org.eclipse.jgit.revwalk.filter.RevFilter.NoneFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.OnlyMergesFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.OnlyMergesFilter.toString()', 'org.eclipse.jgit.revwalk.filter.RevFilter.OnlyMergesFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.negate()', 'org.eclipse.jgit.revwalk.filter.RevFilter.clone()', 'org.eclipse.jgit.revwalk.filter.RevFilter.toString()', 'org.eclipse.jgit.revwalk.filter.RevFilter.clone()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.AllFilter.clone()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.AllFilter.toString()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.AllFilter.clone()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.AnyDiffFilter.clone()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.AnyDiffFilter.toString()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.AnyDiffFilter.clone()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.negate()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.clone()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.toString()', 'org.eclipse.jgit.treewalk.filter.TreeFilter.clone()', 'org.eclipse.jgit.revwalk.RevTag.getTaggerIdent()', 'org.eclipse.jgit.revwalk.RevTag.getFullMessage()', 'org.eclipse.jgit.revwalk.RevTag.getShortMessage()', 'org.eclipse.jgit.revwalk.RevTag.getObject()', 'org.eclipse.jgit.revwalk.RevTag.getTagName()', 'org.eclipse.jgit.revwalk.AsyncRevObjectQueue.next()', 'org.eclipse.jgit.revwalk.RevFlag.StaticRevFlag.getRevWalk()', 'org.eclipse.jgit.revwalk.RevFlag.getRevWalk()', 'org.eclipse.jgit.revwalk.RevFlag.toString()', 'org.eclipse.jgit.revwalk.ObjectWalk.getObjectFilter()', 'org.eclipse.jgit.revwalk.ObjectWalk.next()', 'org.eclipse.jgit.revwalk.ObjectWalk.nextObject()', 'org.eclipse.jgit.revwalk.ObjectWalk.getPathString()', 'org.eclipse.jgit.revwalk.RevWalk.getObjectReader()', 'org.eclipse.jgit.revwalk.RevWalk.next()', 'org.eclipse.jgit.revwalk.RevWalk.getRevSort()', 'org.eclipse.jgit.revwalk.RevWalk.getRevFilter()', 'org.eclipse.jgit.revwalk.RevWalk.getTreeFilter()', 'org.eclipse.jgit.revwalk.RevWalk.iterator()', 'org.eclipse.jgit.revwalk.RevWalk.toObjectWalkWithSameObjects()', 'org.eclipse.jgit.revwalk.FooterKey.getName()', 'org.eclipse.jgit.revwalk.FooterKey.toString()', 'org.eclipse.jgit.revwalk.RevCommit.getTree()', 'org.eclipse.jgit.revwalk.RevCommit.getParents()', 'org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent()', 'org.eclipse.jgit.revwalk.RevCommit.getCommitterIdent()', 'org.eclipse.jgit.revwalk.RevCommit.getFullMessage()', 'org.eclipse.jgit.revwalk.RevCommit.getShortMessage()', 'org.eclipse.jgit.revwalk.RevCommit.getEncodingName()', 'org.eclipse.jgit.revwalk.RevCommit.getEncoding()', 'org.eclipse.jgit.revwalk.RevCommit.getFooterLines()', 'org.eclipse.jgit.revwalk.RevCommit.toString()', 'org.eclipse.jgit.dircache.BaseDirCacheEditor.getDirCache()', 'org.eclipse.jgit.dircache.DirCacheBuilder.getDirCache()', 'org.eclipse.jgit.lib.FileMode.toString()', 'java.security.MessageDigestSpi.clone()', 'java.util.Hashtable.Entry.clone()', 'java.util.Hashtable.Entry.getKey()', 'java.util.Hashtable.Entry.getValue()', 'java.util.Hashtable.Entry.toString()', 'java.util.Hashtable.EntrySet.iterator()', 'java.util.Hashtable.Enumerator.nextElement()', 'java.util.Hashtable.Enumerator.next()', 'java.util.Hashtable.KeySet.iterator()', 'java.util.Hashtable.ValueCollection.iterator()', 'java.util.Hashtable.keys()', 'java.util.Hashtable.elements()', 'java.util.Hashtable.clone()', 'java.util.Hashtable.toString()', 'java.util.Hashtable.keySet()', 'java.util.Hashtable.entrySet()', 'java.util.Hashtable.values()', 'java.util.Properties.XmlSupport.1.run()', 'java.util.Properties.XmlSupport.1.run()', 'java.util.Properties.propertyNames()', 'java.util.Properties.stringPropertyNames()', 'java.security.Provider.EngineDescription.getConstructorParameterClass()', 'java.security.Provider.Service.getType()', 'java.security.Provider.Service.getAlgorithm()', 'java.security.Provider.Service.getProvider()', 'java.security.Provider.Service.getClassName()', 'java.security.Provider.Service.toString()', 'java.security.Provider.UString.toString()', 'java.security.Provider.getName()', 'java.security.Provider.getInfo()', 'java.security.Provider.toString()', 'java.security.Provider.entrySet()', 'java.security.Provider.keySet()', 'java.security.Provider.values()', 'java.security.Provider.keys()', 'java.security.Provider.elements()', 'java.security.Provider.getServices()', 'java.security.MessageDigest.Delegate.clone()', 'java.security.MessageDigest.getProvider()', 'java.security.MessageDigest.toString()', 'java.security.MessageDigest.getAlgorithm()', 'java.security.MessageDigest.clone()', 'org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()', 'org.eclipse.jgit.dircache.DirCacheEntry.getObjectId()', 'org.eclipse.jgit.dircache.DirCacheEntry.getPathString()', 'org.eclipse.jgit.dircache.DirCacheEntry.toString()', 'org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.toString()', 'org.eclipse.jgit.dircache.DirCacheEditor.getDirCache()', 'org.eclipse.jgit.dircache.DirCacheTree.getObjectId()', 'org.eclipse.jgit.dircache.DirCacheTree.getNameString()', 'org.eclipse.jgit.dircache.DirCacheTree.getPathString()', 'org.eclipse.jgit.dircache.DirCacheTree.toString()', 'org.eclipse.jgit.dircache.DirCache.newInCore()', 'org.eclipse.jgit.dircache.DirCache.builder()', 'org.eclipse.jgit.dircache.DirCache.editor()', 'org.eclipse.jgit.lib.RepositoryState.getDescription()', 'org.eclipse.jgit.lib.RepositoryState.values()', 'org.eclipse.jgit.lib.CheckoutEntry.getFromBranch()', 'org.eclipse.jgit.lib.CheckoutEntry.getToBranch()', 'org.eclipse.jgit.lib.ReflogEntry.getOldId()', 'org.eclipse.jgit.lib.ReflogEntry.getNewId()', 'org.eclipse.jgit.lib.ReflogEntry.getWho()', 'org.eclipse.jgit.lib.ReflogEntry.getComment()', 'org.eclipse.jgit.lib.ReflogEntry.parseCheckout()', 'org.eclipse.jgit.lib.ReflogReader.getLastEntry()', 'org.eclipse.jgit.lib.ReflogReader.getReverseEntries()', 'org.eclipse.jgit.storage.file.FileBasedConfig.getFile()', 'org.eclipse.jgit.storage.file.FileBasedConfig.toString()', 'org.eclipse.jgit.util.time.MonotonicClock.propose()', 'java.util.Calendar.Builder.build()', 'java.util.Calendar.getInstance()', 'java.util.Calendar.getAvailableLocales()', 'java.util.Calendar.getTime()', 'java.util.Calendar.getAvailableCalendarTypes()', 'java.util.Calendar.getCalendarType()', 'java.util.Calendar.getTimeZone()', 'java.util.Calendar.getZone()', 'java.util.Calendar.clone()', 'java.util.Calendar.toString()', 'java.util.Calendar.toInstant()', 'java.util.Currency.getAvailableCurrencies()', 'java.util.Currency.getCurrencyCode()', 'java.util.Currency.getSymbol()', 'java.util.Currency.getDisplayName()', 'java.util.Currency.toString()', 'java.math.RoundingMode.values()', 'java.text.NumberFormat.Field.readResolve()', 'java.text.NumberFormat.getInstance()', 'java.text.NumberFormat.getNumberInstance()', 'java.text.NumberFormat.getIntegerInstance()', 'java.text.NumberFormat.getCurrencyInstance()', 'java.text.NumberFormat.getPercentInstance()', 'java.text.NumberFormat.getScientificInstance()', 'java.text.NumberFormat.getAvailableLocales()', 'java.text.NumberFormat.clone()', 'java.text.NumberFormat.getCurrency()', 'java.text.NumberFormat.getRoundingMode()', 'java.text.DateFormat.Field.readResolve()', 'java.text.DateFormat.getTimeInstance()', 'java.text.DateFormat.getDateInstance()', 'java.text.DateFormat.getDateTimeInstance()', 'java.text.DateFormat.getInstance()', 'java.text.DateFormat.getAvailableLocales()', 'java.text.DateFormat.getCalendar()', 'java.text.DateFormat.getNumberFormat()', 'java.text.DateFormat.getTimeZone()', 'java.text.DateFormat.clone()', 'java.text.DateFormatSymbols.getAvailableLocales()', 'java.text.DateFormatSymbols.getInstance()', 'java.text.DateFormatSymbols.getEras()', 'java.text.DateFormatSymbols.getMonths()', 'java.text.DateFormatSymbols.getShortMonths()', 'java.text.DateFormatSymbols.getWeekdays()', 'java.text.DateFormatSymbols.getShortWeekdays()', 'java.text.DateFormatSymbols.getAmPmStrings()', 'java.text.DateFormatSymbols.getZoneStrings()', 'java.text.DateFormatSymbols.getLocalPatternChars()', 'java.text.DateFormatSymbols.clone()', 'java.text.DateFormatSymbols.getZoneStringsWrapper()', 'java.text.SimpleDateFormat.get2DigitYearStart()', 'java.text.SimpleDateFormat.toPattern()', 'java.text.SimpleDateFormat.toLocalizedPattern()', 'java.text.SimpleDateFormat.getDateFormatSymbols()', 'java.text.SimpleDateFormat.clone()', 'org.eclipse.jgit.util.SystemReader.Default.getHostname()', 'org.eclipse.jgit.util.SystemReader.getInstance()', 'org.eclipse.jgit.util.SystemReader.getHostname()', 'org.eclipse.jgit.util.SystemReader.getClock()', 'org.eclipse.jgit.util.SystemReader.getTimeZone()', 'org.eclipse.jgit.util.SystemReader.getLocale()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.getFS()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.getGitDir()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.getObjectDirectory()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.getAlternateObjectDirectories()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.setBare()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.getWorkTree()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.getIndexFile()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.setup()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.build()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.getConfig()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.safeFS()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.self()', 'org.eclipse.jgit.lib.Repository.getGlobalListenerList()', 'org.eclipse.jgit.lib.Repository.getListenerList()', 'org.eclipse.jgit.lib.Repository.getDirectory()', 'org.eclipse.jgit.lib.Repository.getObjectDatabase()', 'org.eclipse.jgit.lib.Repository.newObjectInserter()', 'org.eclipse.jgit.lib.Repository.newObjectReader()', 'org.eclipse.jgit.lib.Repository.getRefDatabase()', 'org.eclipse.jgit.lib.Repository.getConfig()', 'org.eclipse.jgit.lib.Repository.createAttributesNodeProvider()', 'org.eclipse.jgit.lib.Repository.getFS()', 'org.eclipse.jgit.lib.Repository.toString()', 'org.eclipse.jgit.lib.Repository.getFullBranch()', 'org.eclipse.jgit.lib.Repository.getBranch()', 'org.eclipse.jgit.lib.Repository.getAdditionalHaves()', 'org.eclipse.jgit.lib.Repository.getAllRefs()', 'org.eclipse.jgit.lib.Repository.getTags()', 'org.eclipse.jgit.lib.Repository.getAllRefsByPeeledObjectId()', 'org.eclipse.jgit.lib.Repository.getIndexFile()', 'org.eclipse.jgit.lib.Repository.readDirCache()', 'org.eclipse.jgit.lib.Repository.lockDirCache()', 'org.eclipse.jgit.lib.Repository.getRepositoryState()', 'org.eclipse.jgit.lib.Repository.getWorkTree()', 'org.eclipse.jgit.lib.Repository.getGitwebDescription()', 'org.eclipse.jgit.lib.Repository.readMergeCommitMsg()', 'org.eclipse.jgit.lib.Repository.readCommitEditMsg()', 'org.eclipse.jgit.lib.Repository.readMergeHeads()', 'org.eclipse.jgit.lib.Repository.readCherryPickHead()', 'org.eclipse.jgit.lib.Repository.readRevertHead()', 'org.eclipse.jgit.lib.Repository.readOrigHead()', 'org.eclipse.jgit.lib.Repository.readSquashCommitMsg()', 'org.eclipse.jgit.lib.Repository.getRemoteNames()', 'org.eclipse.jface.viewers.IStructuredSelection.getFirstElement()', 'org.eclipse.jface.viewers.IStructuredSelection.iterator()', 'org.eclipse.jface.viewers.IStructuredSelection.toArray()', 'org.eclipse.jface.viewers.IStructuredSelection.toList()', 'org.eclipse.swt.graphics.Rectangle.toString()', 'org.eclipse.swt.graphics.Point.toString()', 'org.eclipse.swt.graphics.FontData.getLocale()', 'org.eclipse.swt.graphics.FontData.getName()', 'org.eclipse.swt.graphics.FontData.toString()', 'org.eclipse.swt.graphics.Resource.getDevice()', 'org.eclipse.swt.graphics.RGB.toString()', 'org.eclipse.swt.graphics.RGBA.toString()', 'org.eclipse.swt.graphics.Color.getRGB()', 'org.eclipse.swt.graphics.Color.getRGBA()', 'org.eclipse.swt.graphics.Color.toString()', 'org.eclipse.swt.graphics.Font.getFontData()', 'org.eclipse.swt.graphics.Font.toString()', 'org.eclipse.swt.graphics.Device.getDevice()', 'org.eclipse.swt.graphics.Device.getBounds()', 'org.eclipse.swt.graphics.Device.getDeviceData()', 'org.eclipse.swt.graphics.Device.getClientArea()', 'org.eclipse.swt.graphics.Device.getDPI()', 'org.eclipse.swt.graphics.Device.getLastError()', 'org.eclipse.swt.graphics.Device.getLastErrorText()', 'org.eclipse.swt.graphics.Device.getSystemFont()', 'org.eclipse.swt.graphics.PaletteData.getRGBs()', 'org.eclipse.swt.graphics.ImageData.clone()', 'org.eclipse.swt.graphics.ImageData.getRGBs()', 'org.eclipse.swt.graphics.ImageData.getTransparencyMask()', 'org.eclipse.swt.graphics.ImageData.bwPalette()', 'org.eclipse.swt.graphics.Image.getBackground()', 'org.eclipse.swt.graphics.Image.getBounds()', 'org.eclipse.swt.graphics.Image.getBoundsInPixels()', 'org.eclipse.swt.graphics.Image.getImageData()', 'org.eclipse.swt.graphics.Image.getImageDataAtCurrentZoom()', 'org.eclipse.swt.graphics.Image.toString()', 'org.eclipse.swt.widgets.TouchSource.getBounds()', 'org.eclipse.swt.widgets.TouchSource.toString()', 'org.eclipse.swt.widgets.Monitor.getBounds()', 'org.eclipse.swt.widgets.Monitor.getClientArea()', 'org.eclipse.swt.widgets.Item.getImage()', 'org.eclipse.swt.widgets.Item.getNameText()', 'org.eclipse.swt.widgets.Item.getText()', 'org.eclipse.swt.widgets.ToolTip.getMessage()', 'org.eclipse.swt.widgets.ToolTip.getParent()', 'org.eclipse.swt.widgets.ToolTip.getText()', 'org.eclipse.swt.widgets.MenuItem.getBounds()', 'org.eclipse.swt.widgets.MenuItem.getMenu()', 'org.eclipse.swt.widgets.MenuItem.getNameText()', 'org.eclipse.swt.widgets.MenuItem.getParent()', 'org.eclipse.swt.widgets.MenuItem.getToolTipText()', 'org.eclipse.swt.widgets.Menu.getBackground()', 'org.eclipse.swt.widgets.Menu.getBackgroundImage()', 'org.eclipse.swt.widgets.Menu.getBounds()', 'org.eclipse.swt.widgets.Menu.getDefaultItem()', 'org.eclipse.swt.widgets.Menu.getForeground()', 'org.eclipse.swt.widgets.Menu.getItems()', 'org.eclipse.swt.widgets.Menu.getNameText()', 'org.eclipse.swt.widgets.Menu.getParent()', 'org.eclipse.swt.widgets.Menu.getParentItem()', 'org.eclipse.swt.widgets.Menu.getParentMenu()', 'org.eclipse.swt.widgets.Menu.getShell()', 'org.eclipse.swt.internal.ImageList.getImageSize()', 'org.eclipse.swt.widgets.Dialog.getParent()', 'org.eclipse.swt.widgets.Dialog.getText()', 'org.eclipse.swt.widgets.Synchronizer.removeFirst()', 'org.eclipse.swt.graphics.Cursor.toString()', 'org.eclipse.swt.widgets.TaskItem.getMenu()', 'org.eclipse.swt.widgets.TaskItem.getOverlayImage()', 'org.eclipse.swt.widgets.TaskItem.getOverlayText()', 'org.eclipse.swt.widgets.TaskItem.getParent()', 'org.eclipse.swt.widgets.TaskBar.getItems()', 'org.eclipse.swt.widgets.TrayItem.getHighlightImage()', 'org.eclipse.swt.widgets.TrayItem.getParent()', 'org.eclipse.swt.widgets.TrayItem.getToolTip()', 'org.eclipse.swt.widgets.TrayItem.getToolTipText()', 'org.eclipse.swt.widgets.Tray.getItems()', 'org.eclipse.swt.widgets.Display._getFocusControl()', 'org.eclipse.swt.widgets.Display.getActiveShell()', 'org.eclipse.swt.widgets.Display.getMenuBar()', 'org.eclipse.swt.widgets.Display.getBounds()', 'org.eclipse.swt.widgets.Display.getBoundsInPixels()', 'org.eclipse.swt.widgets.Display.getCurrent()', 'org.eclipse.swt.widgets.Display.getClientArea()', 'org.eclipse.swt.widgets.Display.getClientAreaInPixels()', 'org.eclipse.swt.widgets.Display.getCursorControl()', 'org.eclipse.swt.widgets.Display.getCursorLocation()', 'org.eclipse.swt.widgets.Display.getCursorLocationInPixels()', 'org.eclipse.swt.widgets.Display.getCursorSizes()', 'org.eclipse.swt.widgets.Display.getDefault()', 'org.eclipse.swt.widgets.Display.getData()', 'org.eclipse.swt.widgets.Display.getFocusControl()', 'org.eclipse.swt.widgets.Display.getIconSizes()', 'org.eclipse.swt.widgets.Display.getModalShell()', 'org.eclipse.swt.widgets.Display.getModalDialog()', 'org.eclipse.swt.widgets.Display.getMonitors()', 'org.eclipse.swt.widgets.Display.getPrimaryMonitor()', 'org.eclipse.swt.widgets.Display.getShells()', 'org.eclipse.swt.widgets.Display.getSynchronizer()', 'org.eclipse.swt.widgets.Display.getSyncThread()', 'org.eclipse.swt.widgets.Display.getSystemFont()', 'org.eclipse.swt.widgets.Display.getSystemMenu()', 'org.eclipse.swt.widgets.Display.getSystemTaskBar()', 'org.eclipse.swt.widgets.Display.getSystemTray()', 'org.eclipse.swt.widgets.Display.getThread()', 'org.eclipse.swt.widgets.Display.getAppName()', 'org.eclipse.swt.widgets.Display.getAppVersion()', 'org.eclipse.swt.widgets.Display.getRuntimeExceptionHandler()', 'org.eclipse.swt.widgets.Display.getErrorHandler()', 'org.eclipse.swt.graphics.Pattern.toString()', 'org.eclipse.swt.graphics.GC.getBackground()', 'org.eclipse.swt.graphics.GC.getBackgroundPattern()', 'org.eclipse.swt.graphics.GC.getClipping()', 'org.eclipse.swt.graphics.GC.getClippingInPixels()', 'org.eclipse.swt.graphics.GC.getFont()', 'org.eclipse.swt.graphics.GC.getFontMetrics()', 'org.eclipse.swt.graphics.GC.getForeground()', 'org.eclipse.swt.graphics.GC.getForegroundPattern()', 'org.eclipse.swt.graphics.GC.getGCData()', 'org.eclipse.swt.graphics.GC.getLineAttributes()', 'org.eclipse.swt.graphics.GC.getLineAttributesInPixels()', 'org.eclipse.swt.graphics.GC.toString()', 'org.eclipse.swt.widgets.Widget.getData()', 'org.eclipse.swt.widgets.Widget.getDisplay()', 'org.eclipse.swt.widgets.Widget.getMenu()', 'org.eclipse.swt.widgets.Widget.getName()', 'org.eclipse.swt.widgets.Widget.getNameText()', 'org.eclipse.swt.widgets.Widget.toString()', 'org.eclipse.swt.internal.ole.win32.GUID.toString()', 'org.eclipse.swt.accessibility.Accessible.getControl()', 'org.eclipse.swt.accessibility.Accessible.toString()', 'org.eclipse.swt.graphics.Region.getBounds()', 'org.eclipse.swt.graphics.Region.getBoundsInPixels()', 'org.eclipse.swt.graphics.Region.toString()', 'org.eclipse.swt.internal.win32.TCHAR.toString()', 'org.eclipse.swt.widgets.Control.computeTabGroup()', 'org.eclipse.swt.widgets.Control.computeTabRoot()', 'org.eclipse.swt.widgets.Control.computeTabList()', 'org.eclipse.swt.widgets.Control.findBackgroundControl()', 'org.eclipse.swt.widgets.Control.findCursor()', 'org.eclipse.swt.widgets.Control.findImageControl()', 'org.eclipse.swt.widgets.Control.findThemeControl()', 'org.eclipse.swt.widgets.Control.getAccessible()', 'org.eclipse.swt.widgets.Control.getBackground()', 'org.eclipse.swt.widgets.Control.getBackgroundImage()', 'org.eclipse.swt.widgets.Control.getBounds()', 'org.eclipse.swt.widgets.Control.getBoundsInPixels()', 'org.eclipse.swt.widgets.Control.getClipboardText()', 'org.eclipse.swt.widgets.Control.getCursor()', 'org.eclipse.swt.widgets.Control.getFont()', 'org.eclipse.swt.widgets.Control.getForeground()', 'org.eclipse.swt.widgets.Control.getLayoutData()', 'org.eclipse.swt.widgets.Control.getLocation()', 'org.eclipse.swt.widgets.Control.getLocationInPixels()', 'org.eclipse.swt.widgets.Control.getMenu()', 'org.eclipse.swt.widgets.Control.getMonitor()', 'org.eclipse.swt.widgets.Control.getParent()', 'org.eclipse.swt.widgets.Control.getPath()', 'org.eclipse.swt.widgets.Control.getRegion()', 'org.eclipse.swt.widgets.Control.getShell()', 'org.eclipse.swt.widgets.Control.getSize()', 'org.eclipse.swt.widgets.Control.getSizeInPixels()', 'org.eclipse.swt.widgets.Control.getToolTipText()', 'org.eclipse.swt.widgets.Control.menuShell()', 'org.eclipse.swt.widgets.Control.widgetCreateStruct()', 'org.eclipse.swt.widgets.Control.windowClass()', 'org.eclipse.swt.widgets.ScrollBar.getBounds()', 'org.eclipse.swt.widgets.ScrollBar.getParent()', 'org.eclipse.swt.widgets.ScrollBar.getSize()', 'org.eclipse.swt.widgets.ScrollBar.getSizeInPixels()', 'org.eclipse.swt.widgets.ScrollBar.getThumbBounds()', 'org.eclipse.swt.widgets.ScrollBar.getThumbBoundsInPixels()', 'org.eclipse.swt.widgets.ScrollBar.getThumbTrackBounds()', 'org.eclipse.swt.widgets.ScrollBar.getThumbTrackBoundsInPixels()', 'org.eclipse.swt.widgets.Scrollable.getClientArea()', 'org.eclipse.swt.widgets.Scrollable.getClientAreaInPixels()', 'org.eclipse.swt.widgets.Scrollable.getHorizontalBar()', 'org.eclipse.swt.widgets.Scrollable.getVerticalBar()', 'org.eclipse.swt.widgets.Scrollable.windowClass()', 'org.eclipse.swt.widgets.Composite._getChildren()', 'org.eclipse.swt.widgets.Composite._getTabList()', 'org.eclipse.swt.widgets.Composite.computeTabList()', 'org.eclipse.swt.widgets.Composite.findDeferredControl()', 'org.eclipse.swt.widgets.Composite.getChildren()', 'org.eclipse.swt.widgets.Composite.getLayout()', 'org.eclipse.swt.widgets.Composite.getTabList()', 'org.eclipse.swt.widgets.Caret.getBounds()', 'org.eclipse.swt.widgets.Caret.getBoundsInPixels()', 'org.eclipse.swt.widgets.Caret.getFont()', 'org.eclipse.swt.widgets.Caret.getImage()', 'org.eclipse.swt.widgets.Caret.getLocation()', 'org.eclipse.swt.widgets.Caret.getLocationInPixels()', 'org.eclipse.swt.widgets.Caret.getParent()', 'org.eclipse.swt.widgets.Caret.getSize()', 'org.eclipse.swt.widgets.Caret.getSizeInPixels()', 'org.eclipse.swt.graphics.TextStyle.toString()', 'org.eclipse.swt.widgets.IME.getStyles()', 'org.eclipse.swt.widgets.IME.getText()', 'org.eclipse.swt.widgets.Canvas.getCaret()', 'org.eclipse.swt.widgets.Canvas.getIME()', 'org.eclipse.swt.widgets.Canvas.windowClass()', 'org.eclipse.swt.widgets.Button.getBackground()', 'org.eclipse.swt.widgets.Button.getImage()', 'org.eclipse.swt.widgets.Button.getMessage()', 'org.eclipse.swt.widgets.Button.getNameText()', 'org.eclipse.swt.widgets.Button.getText()', 'org.eclipse.swt.widgets.Button.windowClass()', 'org.eclipse.swt.widgets.Decorations.computeTabGroup()', 'org.eclipse.swt.widgets.Decorations.computeTabRoot()', 'org.eclipse.swt.widgets.Decorations.getBoundsInPixels()', 'org.eclipse.swt.widgets.Decorations.getClientAreaInPixels()', 'org.eclipse.swt.widgets.Decorations.getDefaultButton()', 'org.eclipse.swt.widgets.Decorations.getImage()', 'org.eclipse.swt.widgets.Decorations.getImages()', 'org.eclipse.swt.widgets.Decorations.getLocationInPixels()', 'org.eclipse.swt.widgets.Decorations.getMenuBar()', 'org.eclipse.swt.widgets.Decorations.getNameText()', 'org.eclipse.swt.widgets.Decorations.getSizeInPixels()', 'org.eclipse.swt.widgets.Decorations.getText()', 'org.eclipse.swt.widgets.Decorations.menuShell()', 'org.eclipse.swt.widgets.Decorations.widgetCreateStruct()', 'org.eclipse.swt.widgets.ToolItem.computeTabList()', 'org.eclipse.swt.widgets.ToolItem.getBounds()', 'org.eclipse.swt.widgets.ToolItem.getBoundsInPixels()', 'org.eclipse.swt.widgets.ToolItem.getControl()', 'org.eclipse.swt.widgets.ToolItem.getDisabledImage()', 'org.eclipse.swt.widgets.ToolItem.getHotImage()', 'org.eclipse.swt.widgets.ToolItem.getParent()', 'org.eclipse.swt.widgets.ToolItem.getToolTipText()', 'org.eclipse.swt.widgets.ToolBar.computeTabGroup()', 'org.eclipse.swt.widgets.ToolBar.computeTabList()', 'org.eclipse.swt.widgets.ToolBar.getDisabledImageList()', 'org.eclipse.swt.widgets.ToolBar.getHotImageList()', 'org.eclipse.swt.widgets.ToolBar.getImageList()', 'org.eclipse.swt.widgets.ToolBar.getItems()', 'org.eclipse.swt.widgets.ToolBar._getItems()', 'org.eclipse.swt.widgets.ToolBar._getTabItemList()', 'org.eclipse.swt.widgets.ToolBar.windowClass()', 'org.eclipse.swt.widgets.Shell.findBackgroundControl()', 'org.eclipse.swt.widgets.Shell.findCursor()', 'org.eclipse.swt.widgets.Shell.findThemeControl()', 'org.eclipse.swt.widgets.Shell.getBoundsInPixels()', 'org.eclipse.swt.widgets.Shell.getCurrentToolTip()', 'org.eclipse.swt.widgets.Shell.getLocationInPixels()', 'org.eclipse.swt.widgets.Shell.getMinimumSize()', 'org.eclipse.swt.widgets.Shell.getMinimumSizeInPixels()', 'org.eclipse.swt.widgets.Shell.getRegion()', 'org.eclipse.swt.widgets.Shell.getShell()', 'org.eclipse.swt.widgets.Shell.getSizeInPixels()', 'org.eclipse.swt.widgets.Shell.getShells()', 'org.eclipse.swt.widgets.Shell.getToolBar()', 'org.eclipse.swt.widgets.Shell.findDeferredControl()', 'org.eclipse.swt.widgets.Shell.widgetCreateStruct()', 'org.eclipse.swt.widgets.Shell.windowClass()', 'org.eclipse.jface.window.IShellProvider.getShell()', 'org.eclipse.jface.viewers.ISelectionProvider.getSelection()', 'org.eclipse.ui.IPageService.getActivePage()', 'org.eclipse.ui.ISelectionService.getSelection()', 'org.eclipse.core.runtime.ListenerList.ListenerListIterator.next()', 'org.eclipse.core.runtime.ListenerList.getListeners()', 'org.eclipse.core.runtime.ListenerList.iterator()', 'org.eclipse.core.runtime.ListenerList.spliterator()', 'org.eclipse.core.runtime.ListenerList.stream()', 'org.eclipse.core.runtime.ListenerList.parallelStream()', 'org.eclipse.core.runtime.ListenerList.toString()', 'org.eclipse.core.runtime.Status.getChildren()', 'org.eclipse.core.runtime.Status.getException()', 'org.eclipse.core.runtime.Status.getMessage()', 'org.eclipse.core.runtime.Status.getPlugin()', 'org.eclipse.core.runtime.Status.toString()', 'org.eclipse.core.runtime.MultiStatus.getChildren()', 'org.eclipse.core.runtime.MultiStatus.toString()', 'org.eclipse.core.internal.jobs.InternalJobGroup.getName()', 'org.eclipse.core.internal.jobs.InternalJobGroup.getResult()', 'org.eclipse.core.internal.jobs.InternalJobGroup.getActiveJobs()', 'org.eclipse.core.internal.jobs.InternalJobGroup.internalGetActiveJobs()', 'org.eclipse.core.internal.jobs.InternalJobGroup.getCompletedJobResults()', 'org.eclipse.core.runtime.jobs.JobGroup.getName()', 'org.eclipse.core.runtime.jobs.JobGroup.getResult()', 'org.eclipse.core.runtime.jobs.JobGroup.getActiveJobs()', 'org.eclipse.core.internal.jobs.InternalJob.getListeners()', 'org.eclipse.core.internal.jobs.InternalJob.getName()', 'org.eclipse.core.internal.jobs.InternalJob.getProgressMonitor()', 'org.eclipse.core.internal.jobs.InternalJob.getResult()', 'org.eclipse.core.internal.jobs.InternalJob.getRule()', 'org.eclipse.core.internal.jobs.InternalJob.getThread()', 'org.eclipse.core.internal.jobs.InternalJob.getJobGroup()', 'org.eclipse.core.internal.jobs.InternalJob.next()', 'org.eclipse.core.internal.jobs.InternalJob.previous()', 'org.eclipse.core.internal.jobs.InternalJob.remove()', 'org.eclipse.core.internal.jobs.InternalJob.toString()', 'org.eclipse.core.runtime.jobs.IJobManager.createProgressGroup()', 'org.eclipse.core.runtime.jobs.IJobManager.currentRule()', 'org.eclipse.core.runtime.jobs.IJobManager.currentJob()', 'org.eclipse.core.runtime.jobs.IJobManager.newLock()', 'org.eclipse.core.runtime.jobs.Job.getJobManager()', 'org.eclipse.core.runtime.jobs.Job.getName()', 'org.eclipse.core.runtime.jobs.Job.getResult()', 'org.eclipse.core.runtime.jobs.Job.getRule()', 'org.eclipse.core.runtime.jobs.Job.getThread()', 'org.eclipse.core.runtime.jobs.Job.getJobGroup()', 'org.eclipse.core.runtime.jobs.Job.toString()', 'org.eclipse.jface.resource.ImageDescriptor.createImage()', 'org.eclipse.jface.resource.ImageDescriptor.getImageData()', 'org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor()', 'org.eclipse.ui.IWorkbenchPartDescriptor.getId()', 'org.eclipse.ui.IWorkbenchPartDescriptor.getImageDescriptor()', 'org.eclipse.ui.IWorkbenchPartDescriptor.getLabel()', 'org.eclipse.ui.IEditorDescriptor.getId()', 'org.eclipse.ui.IEditorDescriptor.getImageDescriptor()', 'org.eclipse.ui.IEditorDescriptor.getLabel()', 'org.eclipse.ui.IEditorDescriptor.getEditorMatchingStrategy()', 'org.eclipse.ui.IFileEditorMapping.getDefaultEditor()', 'org.eclipse.ui.IFileEditorMapping.getEditors()', 'org.eclipse.ui.IFileEditorMapping.getDeletedEditors()', 'org.eclipse.ui.IFileEditorMapping.getExtension()', 'org.eclipse.ui.IFileEditorMapping.getImageDescriptor()', 'org.eclipse.ui.IFileEditorMapping.getLabel()', 'org.eclipse.ui.IFileEditorMapping.getName()', 'org.eclipse.ui.IEditorRegistry.getDefaultEditor()', 'org.eclipse.ui.IEditorRegistry.getFileEditorMappings()', 'org.eclipse.core.commands.operations.IUndoContext.getLabel()', 'org.eclipse.core.commands.operations.IUndoableOperation.getContexts()', 'org.eclipse.core.commands.operations.IUndoableOperation.getLabel()', 'org.eclipse.ui.operations.IWorkbenchOperationSupport.getUndoContext()', 'org.eclipse.ui.operations.IWorkbenchOperationSupport.getOperationHistory()', 'org.eclipse.ui.IPerspectiveDescriptor.getDescription()', 'org.eclipse.ui.IPerspectiveDescriptor.getId()', 'org.eclipse.ui.IPerspectiveDescriptor.getImageDescriptor()', 'org.eclipse.ui.IPerspectiveDescriptor.getLabel()', 'org.eclipse.ui.IPerspectiveRegistry.getDefaultPerspective()', 'org.eclipse.ui.IPerspectiveRegistry.getPerspectives()', 'org.eclipse.jface.dialogs.IDialogPage.getControl()', 'org.eclipse.jface.dialogs.IDialogPage.getDescription()', 'org.eclipse.jface.dialogs.IDialogPage.getErrorMessage()', 'org.eclipse.jface.dialogs.IDialogPage.getImage()', 'org.eclipse.jface.dialogs.IDialogPage.getMessage()', 'org.eclipse.jface.dialogs.IDialogPage.getTitle()', 'org.eclipse.jface.preference.IPreferencePage.computeSize()', 'org.eclipse.jface.preference.IPreferenceNode.getId()', 'org.eclipse.jface.preference.IPreferenceNode.getLabelImage()', 'org.eclipse.jface.preference.IPreferenceNode.getLabelText()', 'org.eclipse.jface.preference.IPreferenceNode.getPage()', 'org.eclipse.jface.preference.IPreferenceNode.getSubNodes()', 'org.eclipse.jface.preference.PreferenceNode.getId()', 'org.eclipse.jface.preference.PreferenceNode.getImageDescriptor()', 'org.eclipse.jface.preference.PreferenceNode.getLabelImage()', 'org.eclipse.jface.preference.PreferenceNode.getLabelText()', 'org.eclipse.jface.preference.PreferenceNode.getPage()', 'org.eclipse.jface.preference.PreferenceNode.getSubNodes()', 'org.eclipse.jface.preference.PreferenceManager.getRoot()', 'org.eclipse.jface.preference.PreferenceManager.getRootSubNodes()', 'org.eclipse.ui.IPersistableElement.getFactoryId()', 'org.eclipse.ui.IWorkingSet.getElements()', 'org.eclipse.ui.IWorkingSet.getId()', 'org.eclipse.ui.IWorkingSet.getImage()', 'org.eclipse.ui.IWorkingSet.getImageDescriptor()', 'org.eclipse.ui.IWorkingSet.getName()', 'org.eclipse.ui.IWorkingSet.getLabel()', 'org.eclipse.ui.IMemento.getChildren()', 'org.eclipse.ui.IMemento.getType()', 'org.eclipse.ui.IMemento.getID()', 'org.eclipse.ui.IMemento.getTextData()', 'org.eclipse.ui.IMemento.getAttributeKeys()', 'org.eclipse.jface.wizard.IWizardPage.getName()', 'org.eclipse.jface.wizard.IWizardPage.getNextPage()', 'org.eclipse.jface.wizard.IWizardPage.getPreviousPage()', 'org.eclipse.jface.wizard.IWizardPage.getWizard()', 'org.eclipse.jface.wizard.IWizardContainer.getCurrentPage()', 'org.eclipse.jface.wizard.IWizardContainer.getShell()', 'org.eclipse.jface.dialogs.IDialogSettings.getName()', 'org.eclipse.jface.dialogs.IDialogSettings.getSections()', 'org.eclipse.jface.wizard.IWizard.getContainer()', 'org.eclipse.jface.wizard.IWizard.getDefaultPageImage()', 'org.eclipse.jface.wizard.IWizard.getDialogSettings()', 'org.eclipse.jface.wizard.IWizard.getPages()', 'org.eclipse.jface.wizard.IWizard.getStartingPage()', 'org.eclipse.jface.wizard.IWizard.getTitleBarColor()', 'org.eclipse.jface.wizard.IWizard.getWindowTitle()', 'org.eclipse.ui.dialogs.IWorkingSetEditWizard.getSelection()', 'org.eclipse.ui.dialogs.IWorkingSetNewWizard.getSelection()', 'org.eclipse.ui.dialogs.IWorkingSetSelectionDialog.getSelection()', 'org.eclipse.ui.IWorkingSetManager.getRecentWorkingSets()', 'org.eclipse.ui.IWorkingSetManager.getWorkingSets()', 'org.eclipse.ui.IWorkingSetManager.getAllWorkingSets()', 'org.eclipse.ui.IDecoratorManager.getLabelDecorator()', 'org.eclipse.core.expressions.EvaluationResult.not()', 'org.eclipse.core.expressions.EvaluationResult.toString()', 'org.eclipse.core.expressions.IEvaluationContext.getParent()', 'org.eclipse.core.expressions.IEvaluationContext.getRoot()', 'org.eclipse.core.expressions.IEvaluationContext.getDefaultVariable()', 'org.eclipse.core.expressions.ExpressionInfo.getAccessedVariableNames()', 'org.eclipse.core.expressions.ExpressionInfo.getAccessedPropertyNames()', 'org.eclipse.core.expressions.ExpressionInfo.getMisbehavingExpressionTypes()', 'org.eclipse.core.expressions.Expression.computeExpressionInfo()', 'org.eclipse.ui.activities.IActivity.getActivityRequirementBindings()', 'org.eclipse.ui.activities.IActivity.getActivityPatternBindings()', 'org.eclipse.ui.activities.IActivity.getId()', 'org.eclipse.ui.activities.IActivity.getName()', 'org.eclipse.ui.activities.IActivity.getDescription()', 'org.eclipse.ui.activities.IActivity.getExpression()', 'org.eclipse.ui.activities.ICategory.getCategoryActivityBindings()', 'org.eclipse.ui.activities.ICategory.getId()', 'org.eclipse.ui.activities.ICategory.getName()', 'org.eclipse.ui.activities.ICategory.getDescription()', 'org.eclipse.ui.activities.IIdentifier.getActivityIds()', 'org.eclipse.ui.activities.IIdentifier.getId()', 'org.eclipse.ui.activities.IActivityManager.getDefinedActivityIds()', 'org.eclipse.ui.activities.IActivityManager.getDefinedCategoryIds()', 'org.eclipse.ui.activities.IActivityManager.getEnabledActivityIds()', 'org.eclipse.ui.activities.ITriggerPoint.getId()', 'org.eclipse.ui.activities.ITriggerPointManager.getDefinedTriggerPointIds()', 'org.eclipse.ui.activities.IWorkbenchActivitySupport.getActivityManager()', 'org.eclipse.ui.activities.IWorkbenchActivitySupport.getTriggerPointManager()', 'org.eclipse.ui.activities.IWorkbenchActivitySupport.createWorkingCopy()', 'org.eclipse.ui.commands.ICategory.getDescription()', 'org.eclipse.ui.commands.ICategory.getId()', 'org.eclipse.ui.commands.ICategory.getName()', 'org.eclipse.ui.commands.ICommand.getAttributeValuesByName()', 'org.eclipse.ui.commands.ICommand.getCategoryId()', 'org.eclipse.ui.commands.ICommand.getDescription()', 'org.eclipse.ui.commands.ICommand.getId()', 'org.eclipse.ui.commands.ICommand.getKeySequenceBindings()', 'org.eclipse.ui.commands.ICommand.getName()', 'org.eclipse.ui.commands.IKeyConfiguration.getDescription()', 'org.eclipse.ui.commands.IKeyConfiguration.getId()', 'org.eclipse.ui.commands.IKeyConfiguration.getName()', 'org.eclipse.ui.commands.IKeyConfiguration.getParentId()', 'org.eclipse.ui.keys.Key.toString()', 'java.util.SortedSet.comparator()', 'java.util.SortedSet.first()', 'java.util.SortedSet.last()', 'java.util.SortedSet.spliterator()', 'org.eclipse.ui.keys.KeyStroke.format()', 'org.eclipse.ui.keys.KeyStroke.getModifierKeys()', 'org.eclipse.ui.keys.KeyStroke.getNaturalKey()', 'org.eclipse.ui.keys.KeyStroke.toString()', 'org.eclipse.jface.bindings.TriggerSequence.format()', 'org.eclipse.jface.bindings.TriggerSequence.getPrefixes()', 'org.eclipse.jface.bindings.TriggerSequence.getTriggers()', 'org.eclipse.jface.bindings.keys.KeyStroke.format()', 'org.eclipse.jface.bindings.keys.KeyStroke.toString()', 'org.eclipse.jface.bindings.keys.KeySequence.getInstance()', 'org.eclipse.jface.bindings.keys.KeySequence.format()', 'org.eclipse.jface.bindings.keys.KeySequence.getKeyStrokes()', 'org.eclipse.jface.bindings.keys.KeySequence.getPrefixes()', 'org.eclipse.jface.bindings.keys.KeySequence.toString()', 'org.eclipse.ui.keys.KeySequence.getInstance()', 'org.eclipse.ui.keys.KeySequence.format()', 'org.eclipse.ui.keys.KeySequence.getKeyStrokes()', 'org.eclipse.ui.keys.KeySequence.toString()', 'org.eclipse.ui.commands.ICommandManager.getActiveContextIds()', 'org.eclipse.ui.commands.ICommandManager.getActiveKeyConfigurationId()', 'org.eclipse.ui.commands.ICommandManager.getActiveLocale()', 'org.eclipse.ui.commands.ICommandManager.getActivePlatform()', 'org.eclipse.ui.commands.ICommandManager.getDefinedCategoryIds()', 'org.eclipse.ui.commands.ICommandManager.getDefinedCommandIds()', 'org.eclipse.ui.commands.ICommandManager.getDefinedKeyConfigurationIds()', 'org.eclipse.ui.commands.IWorkbenchCommandSupport.getCommandManager()', 'org.eclipse.ui.contexts.IContext.getId()', 'org.eclipse.ui.contexts.IContext.getName()', 'org.eclipse.ui.contexts.IContext.getParentId()', 'org.eclipse.ui.contexts.IContextManager.getDefinedContextIds()', 'org.eclipse.ui.contexts.IContextManager.getEnabledContextIds()', 'org.eclipse.ui.contexts.IWorkbenchContextSupport.getContextManager()', 'org.eclipse.jface.resource.ResourceRegistry.getKeySet()', 'org.eclipse.jface.resource.ColorRegistry.getKeySet()', 'org.eclipse.jface.resource.FontDescriptor.getFontData()', 'org.eclipse.jface.resource.FontRegistry.FontRecord.getBaseFont()', 'org.eclipse.jface.resource.FontRegistry.FontRecord.getBoldFont()', 'org.eclipse.jface.resource.FontRegistry.FontRecord.getItalicFont()', 'org.eclipse.jface.resource.FontRegistry.calculateDefaultFont()', 'org.eclipse.jface.resource.FontRegistry.defaultFont()', 'org.eclipse.jface.resource.FontRegistry.getKeySet()', 'org.eclipse.jface.resource.FontRegistry.defaultFontDescriptor()', 'org.eclipse.ui.themes.ITheme.getColorRegistry()', 'org.eclipse.ui.themes.ITheme.getFontRegistry()', 'org.eclipse.ui.themes.ITheme.getId()', 'org.eclipse.ui.themes.ITheme.getLabel()', 'org.eclipse.ui.themes.ITheme.keySet()', 'org.eclipse.ui.themes.IThemeManager.getCurrentTheme()', 'org.eclipse.ui.IKeyBindingService.getScopes()', 'org.eclipse.jface.action.IAction.getActionDefinitionId()', 'org.eclipse.jface.action.IAction.getDescription()', 'org.eclipse.jface.action.IAction.getDisabledImageDescriptor()', 'org.eclipse.jface.action.IAction.getHelpListener()', 'org.eclipse.jface.action.IAction.getHoverImageDescriptor()', 'org.eclipse.jface.action.IAction.getId()', 'org.eclipse.jface.action.IAction.getImageDescriptor()', 'org.eclipse.jface.action.IAction.getMenuCreator()', 'org.eclipse.jface.action.IAction.getText()', 'org.eclipse.jface.action.IAction.getToolTipText()', 'org.eclipse.jface.action.IContributionItem.getId()', 'org.eclipse.jface.action.IContributionManager.getItems()', 'org.eclipse.jface.action.IContributionManager.getOverrides()', 'org.eclipse.jface.action.IStatusLineManager.getProgressMonitor()', 'org.eclipse.ui.IActionBars.getMenuManager()', 'org.eclipse.ui.IActionBars.getServiceLocator()', 'org.eclipse.ui.IActionBars.getStatusLineManager()', 'org.eclipse.ui.IActionBars.getToolBarManager()', 'org.eclipse.ui.intro.IIntroSite.getId()', 'org.eclipse.ui.intro.IIntroSite.getPluginId()', 'org.eclipse.ui.intro.IIntroSite.getKeyBindingService()', 'org.eclipse.ui.intro.IIntroSite.getActionBars()', 'org.eclipse.ui.intro.IIntroPart.getIntroSite()', 'org.eclipse.ui.intro.IIntroPart.getTitleImage()', 'org.eclipse.ui.intro.IIntroPart.getTitle()', 'org.eclipse.ui.intro.IIntroManager.getIntro()', 'org.eclipse.ui.browser.IWebBrowser.getId()', 'org.eclipse.ui.browser.IWorkbenchBrowserSupport.getExternalBrowser()', 'org.eclipse.ui.IViewSite.getActionBars()', 'org.eclipse.ui.IViewSite.getSecondaryId()', 'org.eclipse.ui.IViewPart.getViewSite()', 'org.eclipse.ui.views.IViewDescriptor.createView()', 'org.eclipse.ui.views.IViewDescriptor.getCategoryPath()', 'org.eclipse.ui.views.IViewDescriptor.getDescription()', 'org.eclipse.ui.views.IViewDescriptor.getId()', 'org.eclipse.ui.views.IViewDescriptor.getImageDescriptor()', 'org.eclipse.ui.views.IViewDescriptor.getLabel()', 'org.eclipse.ui.views.IViewCategory.getViews()', 'org.eclipse.ui.views.IViewCategory.getId()', 'org.eclipse.ui.views.IViewCategory.getLabel()', 'org.eclipse.ui.views.IViewCategory.getPath()', 'org.eclipse.ui.views.IStickyViewDescriptor.getId()', 'org.eclipse.ui.views.IViewRegistry.getCategories()', 'org.eclipse.ui.views.IViewRegistry.getViews()', 'org.eclipse.ui.views.IViewRegistry.getStickyViews()', 'org.eclipse.ui.wizards.IWizardCategory.getCategories()', 'org.eclipse.ui.wizards.IWizardCategory.getId()', 'org.eclipse.ui.wizards.IWizardCategory.getLabel()', 'org.eclipse.ui.wizards.IWizardCategory.getParent()', 'org.eclipse.ui.wizards.IWizardCategory.getPath()', 'org.eclipse.ui.wizards.IWizardCategory.getWizards()', 'org.eclipse.ui.wizards.IWizardDescriptor.getDescription()', 'org.eclipse.ui.wizards.IWizardDescriptor.getTags()', 'org.eclipse.ui.wizards.IWizardDescriptor.createWizard()', 'org.eclipse.ui.wizards.IWizardDescriptor.getDescriptionImage()', 'org.eclipse.ui.wizards.IWizardDescriptor.getHelpHref()', 'org.eclipse.ui.wizards.IWizardDescriptor.getCategory()', 'org.eclipse.ui.wizards.IWizardRegistry.getPrimaryWizards()', 'org.eclipse.ui.wizards.IWizardRegistry.getRootCategory()', 'org.eclipse.ui.IWorkbench.getDisplay()', 'org.eclipse.ui.IWorkbench.getProgressService()', 'org.eclipse.ui.IWorkbench.getActiveWorkbenchWindow()', 'org.eclipse.ui.IWorkbench.getEditorRegistry()', 'org.eclipse.ui.IWorkbench.getOperationSupport()', 'org.eclipse.ui.IWorkbench.getPerspectiveRegistry()', 'org.eclipse.ui.IWorkbench.getPreferenceManager()', 'org.eclipse.ui.IWorkbench.getPreferenceStore()', 'org.eclipse.ui.IWorkbench.getSharedImages()', 'org.eclipse.ui.IWorkbench.getWorkbenchWindows()', 'org.eclipse.ui.IWorkbench.getWorkingSetManager()', 'org.eclipse.ui.IWorkbench.createLocalWorkingSetManager()', 'org.eclipse.ui.IWorkbench.getDecoratorManager()', 'org.eclipse.ui.IWorkbench.getActivitySupport()', 'org.eclipse.ui.IWorkbench.getCommandSupport()', 'org.eclipse.ui.IWorkbench.getContextSupport()', 'org.eclipse.ui.IWorkbench.getThemeManager()', 'org.eclipse.ui.IWorkbench.getIntroManager()', 'org.eclipse.ui.IWorkbench.getHelpSystem()', 'org.eclipse.ui.IWorkbench.getBrowserSupport()', 'org.eclipse.ui.IWorkbench.getExtensionTracker()', 'org.eclipse.ui.IWorkbench.getViewRegistry()', 'org.eclipse.ui.IWorkbench.getNewWizardRegistry()', 'org.eclipse.ui.IWorkbench.getImportWizardRegistry()', 'org.eclipse.ui.IWorkbench.getExportWizardRegistry()', 'org.eclipse.ui.IWorkbench.getModalDialogShellProvider()', 'org.eclipse.ui.IWorkbenchWindow.getActivePage()', 'org.eclipse.ui.IWorkbenchWindow.getPages()', 'org.eclipse.ui.IWorkbenchWindow.getPartService()', 'org.eclipse.ui.IWorkbenchWindow.getSelectionService()', 'org.eclipse.ui.IWorkbenchWindow.getShell()', 'org.eclipse.ui.IWorkbenchWindow.getWorkbench()', 'org.eclipse.ui.IWorkbenchWindow.getExtensionTracker()', 'org.eclipse.ui.IWorkbenchSite.getPage()', 'org.eclipse.ui.IWorkbenchSite.getSelectionProvider()', 'org.eclipse.ui.IWorkbenchSite.getShell()', 'org.eclipse.ui.IWorkbenchSite.getWorkbenchWindow()', 'org.eclipse.ui.IWorkbenchPartSite.getId()', 'org.eclipse.ui.IWorkbenchPartSite.getPluginId()', 'org.eclipse.ui.IWorkbenchPartSite.getRegisteredName()', 'org.eclipse.ui.IWorkbenchPartSite.getKeyBindingService()', 'org.eclipse.ui.IWorkbenchPartSite.getPart()', 'org.eclipse.ui.IWorkbenchPart.getSite()', 'org.eclipse.ui.IWorkbenchPart.getTitle()', 'org.eclipse.ui.IWorkbenchPart.getTitleImage()', 'org.eclipse.ui.IWorkbenchPart.getTitleToolTip()', 'org.eclipse.ui.IWorkbenchPartReference.getTitle()', 'org.eclipse.ui.IWorkbenchPartReference.getTitleImage()', 'org.eclipse.ui.IWorkbenchPartReference.getTitleToolTip()', 'org.eclipse.ui.IWorkbenchPartReference.getId()', 'org.eclipse.ui.IWorkbenchPartReference.getPage()', 'org.eclipse.ui.IWorkbenchPartReference.getPartName()', 'org.eclipse.ui.IWorkbenchPartReference.getContentDescription()', 'org.eclipse.ui.IPartService.getActivePart()', 'org.eclipse.ui.IPartService.getActivePartReference()', 'org.eclipse.ui.IViewReference.getSecondaryId()', 'org.eclipse.ui.IEditorInput.getImageDescriptor()', 'org.eclipse.ui.IEditorInput.getName()', 'org.eclipse.ui.IEditorInput.getPersistable()', 'org.eclipse.ui.IEditorInput.getToolTipText()', 'org.eclipse.ui.IEditorSite.getActionBarContributor()', 'org.eclipse.ui.IEditorSite.getActionBars()', 'org.eclipse.ui.IEditorPart.getEditorInput()', 'org.eclipse.ui.IEditorPart.getEditorSite()', 'org.eclipse.ui.IEditorReference.getFactoryId()', 'org.eclipse.ui.IEditorReference.getName()', 'org.eclipse.ui.IEditorReference.getEditorInput()', 'org.eclipse.ui.INavigationLocation.getInput()', 'org.eclipse.ui.INavigationLocation.getText()', 'org.eclipse.ui.INavigationHistory.getCurrentLocation()', 'org.eclipse.ui.INavigationHistory.getLocations()', 'org.eclipse.ui.IWorkbenchPage.getActiveEditor()', 'org.eclipse.ui.IWorkbenchPage.getEditors()', 'org.eclipse.ui.IWorkbenchPage.getEditorReferences()', 'org.eclipse.ui.IWorkbenchPage.getDirtyEditors()', 'org.eclipse.ui.IWorkbenchPage.getInput()', 'org.eclipse.ui.IWorkbenchPage.getLabel()', 'org.eclipse.ui.IWorkbenchPage.getPerspective()', 'org.eclipse.ui.IWorkbenchPage.getViewReferences()', 'org.eclipse.ui.IWorkbenchPage.getViews()', 'org.eclipse.ui.IWorkbenchPage.getWorkbenchWindow()', 'org.eclipse.ui.IWorkbenchPage.getWorkingSet()', 'org.eclipse.ui.IWorkbenchPage.getNavigationHistory()', 'org.eclipse.ui.IWorkbenchPage.getNewWizardShortcuts()', 'org.eclipse.ui.IWorkbenchPage.getPerspectiveShortcuts()', 'org.eclipse.ui.IWorkbenchPage.getShowViewShortcuts()', 'org.eclipse.ui.IWorkbenchPage.getOpenPerspectives()', 'org.eclipse.ui.IWorkbenchPage.getSortedPerspectives()', 'org.eclipse.ui.IWorkbenchPage.getExtensionTracker()', 'org.eclipse.ui.IWorkbenchPage.getWorkingSets()', 'org.eclipse.ui.IWorkbenchPage.getAggregateWorkingSet()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getProjectsForSelectedResources()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getRepository()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getSelection()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getSelectedResources()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getSelectedLocations()', 'org.eclipse.egit.ui.internal.actions.PullFromUpstreamActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ApplyPatchActionHandler.getRepositories()', 'org.eclipse.jface.action.ContributionItem.getId()', 'org.eclipse.jface.action.ContributionItem.getParent()', 'org.eclipse.jface.action.ContributionItem.toString()', 'org.eclipse.ui.actions.CompoundContributionItem.getContributionItems()', 'org.eclipse.jface.action.Action.getActionDefinitionId()', 'org.eclipse.jface.action.Action.getDescription()', 'org.eclipse.jface.action.Action.getDisabledImageDescriptor()', 'org.eclipse.jface.action.Action.getHelpListener()', 'org.eclipse.jface.action.Action.getHoverImageDescriptor()', 'org.eclipse.jface.action.Action.getId()', 'org.eclipse.jface.action.Action.getImageDescriptor()', 'org.eclipse.jface.action.Action.getMenuCreator()', 'org.eclipse.jface.action.Action.getText()', 'org.eclipse.jface.action.Action.getToolTipText()', 'org.eclipse.egit.core.op.IEGitOperation.getSchedulingRule()', 'org.eclipse.egit.core.op.DiscardChangesOperation.getSchedulingRule()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithOursTheirsMenu.getContributionItems()', 'org.eclipse.egit.ui.internal.actions.SimpleFetchActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ShowBlameActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.RepositoryAction.createExecutionEvent()', 'org.eclipse.egit.ui.internal.actions.RepositoryAction.getServiceLocator()', 'org.eclipse.egit.ui.internal.actions.PushTagsActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.UntrackActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.DiscardChangesActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithRefActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.SynchronizeWorkspaceActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.CompareWithIndexActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.AddToIndexActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.RenameBranchActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.CompareWithCommitActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.CompareIndexWithHeadActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.DeleteBranchActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.PushUpstreamOrBranchActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.StashCreateHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ResetActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.SimplePushActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.CompareWithRefActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.StashesMenu.getContributionItems()', 'org.eclipse.egit.ui.internal.actions.CleanActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ConfigureFetchActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.FetchActionHandler.getRepositories()', 'org.eclipse.jgit.api.RebaseResult.getCurrentCommit()', 'org.eclipse.jgit.api.RebaseResult.getFailingPaths()', 'org.eclipse.jgit.api.RebaseResult.getConflicts()', 'org.eclipse.jgit.api.RebaseResult.getUncommittedChanges()', 'org.eclipse.egit.core.op.RebaseOperation.getSchedulingRule()', 'org.eclipse.egit.core.op.RebaseOperation.getResult()', 'org.eclipse.egit.core.op.RebaseOperation.getRepository()', 'org.eclipse.egit.ui.internal.actions.DisconnectActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.CompareWithHeadActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.CreatePatchActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.TagActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.PushBranchActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithCommitActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.BranchActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ConfigurePushActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.MergeActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.PullWithOptionsActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithHeadActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.RemoveFromIndexActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithPreviousActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.RebaseActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.PushMenu.getContributionItems()', 'org.eclipse.egit.ui.internal.actions.PushActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.MergeToolActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.CommitActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.IgnoreActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.AssumeUnchangedActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.ShowHistoryActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.NoAssumeUnchangedActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.CompareWithPreviousActionHandler.getRepositories()', 'org.eclipse.jface.action.ContributionManager.getItems()', 'org.eclipse.jface.action.ContributionManager.getOverrides()', 'org.eclipse.jface.action.MenuManager.getId()', 'org.eclipse.jface.action.MenuManager.getMenu()', 'org.eclipse.jface.action.MenuManager.getMenuText()', 'org.eclipse.jface.action.MenuManager.getImageDescriptor()', 'org.eclipse.jface.action.MenuManager.getOverrides()', 'org.eclipse.jface.action.MenuManager.getParent()', 'org.eclipse.jface.action.MenuManager.getMenuItems()', 'org.eclipse.jface.action.MenuManager.toString()', 'org.eclipse.egit.ui.internal.actions.ShowRepositoriesViewActionHandler.getRepositories()', 'org.eclipse.ui.part.IPage.getControl()', 'org.eclipse.ui.part.IPageSite.getActionBars()', 'org.eclipse.ui.part.IPageBookViewPage.getSite()', 'org.eclipse.ui.part.Page.getControl()', 'org.eclipse.ui.part.Page.getSite()', 'org.eclipse.team.ui.history.IHistoryPageSite.getWorkbenchPageSite()', 'org.eclipse.team.ui.history.IHistoryPageSite.getPart()', 'org.eclipse.team.ui.history.IHistoryPageSite.getShell()', 'org.eclipse.team.ui.history.IHistoryPageSite.getSelectionProvider()', 'org.eclipse.team.ui.history.IHistoryPageSite.getToolBarManager()', 'org.eclipse.team.ui.history.IHistoryView.getHistoryPage()', 'org.eclipse.team.ui.history.IHistoryPage.getInput()', 'org.eclipse.team.ui.history.IHistoryPage.getName()', 'org.eclipse.team.ui.history.IHistoryPage.getDescription()', 'org.eclipse.team.ui.history.IHistoryPage.getHistoryPageSite()', 'org.eclipse.team.ui.history.IHistoryPage.getHistoryView()', 'org.eclipse.team.ui.history.HistoryPage.getHistoryPageSite()', 'org.eclipse.team.ui.history.HistoryPage.getInput()', 'org.eclipse.team.ui.history.HistoryPage.getHistoryView()', 'org.eclipse.ui.part.ShowInContext.getInput()', 'org.eclipse.ui.part.ShowInContext.getSelection()', 'org.eclipse.ui.part.IShowInSource.getShowInContext()', 'org.eclipse.ui.part.IShowInTargetList.getShowInTargetIds()', 'org.eclipse.egit.ui.internal.history.HistoryPageInput.getRepository()', 'org.eclipse.egit.ui.internal.history.HistoryPageInput.getItems()', 'org.eclipse.egit.ui.internal.history.HistoryPageInput.getFileList()', 'org.eclipse.egit.ui.internal.history.HistoryPageInput.getSingleFile()', 'org.eclipse.egit.ui.internal.history.HistoryPageInput.getSingleItem()', 'org.eclipse.egit.ui.internal.history.HistoryPageInput.getHead()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.FilterPath.getPath()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.FilterPath.toString()', 'org.eclipse.jface.text.rules.IToken.getData()', 'org.eclipse.jface.text.rules.ITokenScanner.nextToken()', 'org.eclipse.swt.custom.StyledTextContent.getLineDelimiter()', 'org.eclipse.swt.custom.StyleRange.clone()', 'org.eclipse.swt.custom.StyleRange.toString()', 'org.eclipse.swt.widgets.Event.getBounds()', 'org.eclipse.swt.widgets.Event.getBoundsInPixels()', 'org.eclipse.swt.widgets.Event.getLocation()', 'org.eclipse.swt.widgets.Event.getLocationInPixels()', 'org.eclipse.swt.widgets.Event.toString()', 'org.eclipse.swt.printing.PrinterData.toString()', 'org.eclipse.swt.printing.Printer.getPrinterList()', 'org.eclipse.swt.printing.Printer.getDefaultPrinterData()', 'org.eclipse.swt.printing.Printer.getDPI()', 'org.eclipse.swt.printing.Printer.getBounds()', 'org.eclipse.swt.printing.Printer.getClientArea()', 'org.eclipse.swt.printing.Printer.getPrinterData()', 'org.eclipse.swt.custom.StyledText.TextWriter.toString()', 'org.eclipse.swt.custom.StyledText.getMarginColor()', 'org.eclipse.swt.custom.StyledText.getBackground()', 'org.eclipse.swt.custom.StyledText.getBlockSelectionPosition()', 'org.eclipse.swt.custom.StyledText.getBlockSelectionBounds()', 'org.eclipse.swt.custom.StyledText.getBlockSelectionRectangle()', 'org.eclipse.swt.custom.StyledText.getContent()', 'org.eclipse.swt.custom.StyledText.getForeground()', 'org.eclipse.swt.custom.StyledText.getLineDelimiter()', 'org.eclipse.swt.custom.StyledText.getSelection()', 'org.eclipse.swt.custom.StyledText.getSelectionRange()', 'org.eclipse.swt.custom.StyledText.getSelectionBackground()', 'org.eclipse.swt.custom.StyledText.getSelectionForeground()', 'org.eclipse.swt.custom.StyledText.getSelectionText()', 'org.eclipse.swt.custom.StyledText.getStyleRanges()', 'org.eclipse.swt.custom.StyledText.getText()', 'org.eclipse.swt.custom.StyledText.getAssociatedLabel()', 'org.eclipse.jface.text.Position.toString()', 'org.eclipse.jface.text.ITypedRegion.getType()', 'org.eclipse.jface.text.IDocumentPartitioner.getLegalContentTypes()', 'org.eclipse.jface.text.IDocument.get()', 'org.eclipse.jface.text.IDocument.getPositionCategories()', 'org.eclipse.jface.text.IDocument.getPositionUpdaters()', 'org.eclipse.jface.text.IDocument.getLegalContentTypes()', 'org.eclipse.jface.text.IDocument.getDocumentPartitioner()', 'org.eclipse.jface.text.IDocument.getLegalLineDelimiters()', 'org.eclipse.jface.text.IFindReplaceTarget.getSelection()', 'org.eclipse.jface.text.IFindReplaceTarget.getSelectionText()', 'org.eclipse.jface.text.ITextViewer.getTextWidget()', 'org.eclipse.jface.text.ITextViewer.getDocument()', 'org.eclipse.jface.text.ITextViewer.getVisibleRegion()', 'org.eclipse.jface.text.ITextViewer.getTextOperationTarget()', 'org.eclipse.jface.text.ITextViewer.getFindReplaceTarget()', 'org.eclipse.jface.text.ITextViewer.getSelectedRange()', 'org.eclipse.jface.text.ITextViewer.getSelectionProvider()', 'org.eclipse.jface.text.source.Annotation.getType()', 'org.eclipse.jface.text.source.Annotation.getText()', 'org.eclipse.jface.text.source.IAnnotationModel.getAnnotationIterator()', 'org.eclipse.jface.text.source.ISourceViewer.getAnnotationModel()', 'org.eclipse.jface.text.source.ISourceViewer.getRangeIndication()', 'org.eclipse.jface.text.DocumentEvent.getDocument()', 'org.eclipse.jface.text.DocumentEvent.getText()', 'org.eclipse.jface.text.DocumentEvent.toString()', 'org.eclipse.jface.text.contentassist.IContextInformation.getContextDisplayString()', 'org.eclipse.jface.text.contentassist.IContextInformation.getImage()', 'org.eclipse.jface.text.contentassist.IContextInformation.getInformationDisplayString()', 'org.eclipse.jface.text.contentassist.ICompletionProposal.getAdditionalProposalInfo()', 'org.eclipse.jface.text.contentassist.ICompletionProposal.getDisplayString()', 'org.eclipse.jface.text.contentassist.ICompletionProposal.getImage()', 'org.eclipse.jface.text.contentassist.ICompletionProposal.getContextInformation()', 'org.eclipse.jface.text.contentassist.IContentAssistProcessor.getErrorMessage()', 'org.eclipse.jface.text.contentassist.IContentAssistProcessor.getContextInformationValidator()', 'org.eclipse.jface.text.contentassist.IContentAssistant.showPossibleCompletions()', 'org.eclipse.jface.text.contentassist.IContentAssistant.showContextInformation()', 'org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext.getSourceViewer()', 'org.eclipse.jface.text.quickassist.IQuickAssistProcessor.getErrorMessage()', 'org.eclipse.jface.text.quickassist.IQuickAssistAssistant.showPossibleQuickAssists()', 'org.eclipse.jface.text.quickassist.IQuickAssistAssistant.getQuickAssistProcessor()', 'org.eclipse.jface.text.IInformationControl.computeSizeHint()', 'org.eclipse.jface.text.hyperlink.IHyperlink.getHyperlinkRegion()', 'org.eclipse.jface.text.hyperlink.IHyperlink.getTypeLabel()', 'org.eclipse.jface.text.hyperlink.IHyperlink.getHyperlinkText()', 'java.util.concurrent.CompletionStage.toCompletableFuture()', 'java.util.concurrent.ForkJoinWorkerThread.InnocuousForkJoinWorkerThread.getContextClassLoader()', 'java.util.concurrent.ForkJoinWorkerThread.getPool()', 'java.util.concurrent.ForkJoinPool.EmptyTask.getRawResult()', 'java.util.concurrent.ForkJoinPool.EmptyTask.getRawResult()', 'java.util.concurrent.ForkJoinPool.InnocuousForkJoinWorkerThreadFactory.1.run()', 'java.util.concurrent.ForkJoinPool.InnocuousForkJoinWorkerThreadFactory.1.run()', 'java.util.concurrent.CountedCompleter.getCompleter()', 'java.util.concurrent.CountedCompleter.getRoot()', 'java.util.concurrent.CountedCompleter.firstComplete()', 'java.util.concurrent.CountedCompleter.nextComplete()', 'java.util.concurrent.CountedCompleter.getRawResult()', 'java.util.concurrent.ForkJoinPool.WorkQueue.growArray()', 'java.util.concurrent.ForkJoinPool.WorkQueue.pop()', 'java.util.concurrent.ForkJoinPool.WorkQueue.poll()', 'java.util.concurrent.ForkJoinPool.WorkQueue.nextLocalTask()', 'java.util.concurrent.ForkJoinPool.WorkQueue.peek()', 'java.util.concurrent.ForkJoinPool.commonPool()', 'java.util.concurrent.ForkJoinPool.pollSubmission()', 'java.util.concurrent.ForkJoinPool.toString()', 'java.util.concurrent.ForkJoinPool.shutdownNow()', 'java.util.concurrent.ForkJoinTask.AdaptedCallable.getRawResult()', 'java.util.concurrent.ForkJoinTask.AdaptedRunnable.getRawResult()', 'java.util.concurrent.ForkJoinTask.AdaptedRunnableAction.getRawResult()', 'java.util.concurrent.ForkJoinTask.AdaptedRunnableAction.getRawResult()', 'java.util.concurrent.ForkJoinTask.RunnableExecuteAction.getRawResult()', 'java.util.concurrent.ForkJoinTask.RunnableExecuteAction.getRawResult()', 'java.util.concurrent.ForkJoinTask.fork()', 'java.util.concurrent.ForkJoinTask.join()', 'java.util.concurrent.ForkJoinTask.invoke()', 'java.util.concurrent.ForkJoinTask.getException()', 'java.util.concurrent.ForkJoinTask.get()', 'java.util.concurrent.ForkJoinTask.getPool()', 'java.util.concurrent.ForkJoinTask.getRawResult()', 'java.util.concurrent.ForkJoinTask.peekNextLocalTask()', 'java.util.concurrent.ForkJoinTask.pollNextLocalTask()', 'java.util.concurrent.ForkJoinTask.pollTask()', 'java.util.concurrent.CompletableFuture.AsyncRun.getRawResult()', 'java.util.concurrent.CompletableFuture.AsyncRun.getRawResult()', 'java.util.concurrent.CompletableFuture.AsyncSupply.getRawResult()', 'java.util.concurrent.CompletableFuture.AsyncSupply.getRawResult()', 'java.util.concurrent.CompletableFuture.Completion.getRawResult()', 'java.util.concurrent.CompletableFuture.Completion.getRawResult()', 'java.util.concurrent.CompletableFuture.get()', 'java.util.concurrent.CompletableFuture.join()', 'java.util.concurrent.CompletableFuture.toCompletableFuture()', 'java.util.concurrent.CompletableFuture.toString()', 'org.eclipse.jface.text.TextAttribute.getForeground()', 'org.eclipse.jface.text.TextAttribute.getBackground()', 'org.eclipse.jface.text.TextAttribute.getFont()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkTokenScanner.nextToken()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkTokenScanner.scanToken()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.FooterTokenScanner.scanToken()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.GitHistoryPageActions.ShowFilterAction.toString()', 'org.eclipse.jgit.revplot.PlotCommit.getLane()', 'org.eclipse.egit.core.internal.IRepositoryObject.getRepository()', 'org.eclipse.egit.core.internal.IRepositoryObject.getObjectId()', 'org.eclipse.egit.core.internal.IRepositoryCommit.getRevCommit()', 'org.eclipse.egit.core.internal.IRepositoryCommit.getObjectId()', 'org.eclipse.jgit.revplot.PlotWalk.next()', 'org.eclipse.egit.ui.internal.history.SWTWalk.getRepository()', 'org.eclipse.egit.ui.internal.history.SWTCommit.getRepository()', 'org.eclipse.egit.ui.internal.history.SWTCommit.getRevCommit()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.ICommitsProvider.getSearchContext()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.ICommitsProvider.getCommits()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.ICommitsProvider.getHighlight()', 'org.eclipse.swt.widgets.TableItem.getBackground()', 'org.eclipse.swt.widgets.TableItem.getBounds()', 'org.eclipse.swt.widgets.TableItem.getBoundsInPixels()', 'org.eclipse.swt.widgets.TableItem.getFont()', 'org.eclipse.swt.widgets.TableItem.getForeground()', 'org.eclipse.swt.widgets.TableItem.getImage()', 'org.eclipse.swt.widgets.TableItem.getNameText()', 'org.eclipse.swt.widgets.TableItem.getParent()', 'org.eclipse.swt.widgets.TableItem.getText()', 'org.eclipse.swt.widgets.TableColumn.getNameText()', 'org.eclipse.swt.widgets.TableColumn.getParent()', 'org.eclipse.swt.widgets.TableColumn.getToolTipText()', 'org.eclipse.swt.widgets.Table.getColumns()', 'org.eclipse.swt.widgets.Table.getHeaderBackground()', 'org.eclipse.swt.widgets.Table.getHeaderForeground()', 'org.eclipse.swt.widgets.Table.getItems()', 'org.eclipse.swt.widgets.Table.getSelection()', 'org.eclipse.swt.widgets.Table.getSortColumn()', 'org.eclipse.swt.widgets.Table.windowClass()', 'org.eclipse.jface.viewers.IInputProvider.getInput()', 'org.eclipse.jface.viewers.Viewer.getControl()', 'org.eclipse.jface.viewers.Viewer.getInput()', 'org.eclipse.jface.viewers.Viewer.getSelection()', 'org.eclipse.jface.viewers.ContentViewer.getContentProvider()', 'org.eclipse.jface.viewers.ContentViewer.getInput()', 'org.eclipse.jface.viewers.ContentViewer.getLabelProvider()', 'org.eclipse.jface.viewers.TreePath.getFirstSegment()', 'org.eclipse.jface.viewers.TreePath.getLastSegment()', 'org.eclipse.jface.viewers.TreePath.getParentPath()', 'org.eclipse.jface.viewers.ViewerComparator.getComparator()', 'java.text.CollationKey.getSourceString()', 'java.text.Collator.getInstance()', 'java.text.Collator.getAvailableLocales()', 'java.text.Collator.clone()', 'org.eclipse.jface.viewers.ViewerSorter.getCollator()', 'org.eclipse.jface.viewers.CustomHashtable.EmptyEnumerator.nextElement()', 'org.eclipse.jface.viewers.CustomHashtable.HashEnumerator.nextElement()', 'org.eclipse.jface.viewers.CustomHashtable.getComparer()', 'org.eclipse.jface.viewers.CustomHashtable.elements()', 'org.eclipse.jface.viewers.CustomHashtable.keys()', 'org.eclipse.jface.viewers.CustomHashtable.toString()', 'org.eclipse.jface.util.SafeRunnable.getRunner()', 'org.eclipse.jface.viewers.StructuredViewer.getComparer()', 'org.eclipse.jface.viewers.StructuredViewer.getFilters()', 'org.eclipse.jface.viewers.StructuredViewer.getRoot()', 'org.eclipse.jface.viewers.StructuredViewer.getSelection()', 'org.eclipse.jface.viewers.StructuredViewer.getStructuredSelection()', 'org.eclipse.jface.viewers.StructuredViewer.getSelectionFromWidget()', 'org.eclipse.jface.viewers.StructuredViewer.getSorter()', 'org.eclipse.jface.viewers.StructuredViewer.getComparator()', 'org.eclipse.jface.viewers.ViewerRow.getBounds()', 'org.eclipse.jface.viewers.ViewerRow.getItem()', 'org.eclipse.jface.viewers.ViewerRow.getControl()', 'org.eclipse.jface.viewers.ViewerRow.getTreePath()', 'org.eclipse.jface.viewers.ViewerRow.clone()', 'org.eclipse.jface.viewers.ViewerRow.getElement()', 'org.eclipse.jface.viewers.ViewerCell.getBounds()', 'org.eclipse.jface.viewers.ViewerCell.getElement()', 'org.eclipse.jface.viewers.ViewerCell.getText()', 'org.eclipse.jface.viewers.ViewerCell.getImage()', 'org.eclipse.jface.viewers.ViewerCell.getStyleRanges()', 'org.eclipse.jface.viewers.ViewerCell.getItem()', 'org.eclipse.jface.viewers.ViewerCell.getControl()', 'org.eclipse.jface.viewers.ViewerCell.getViewerRow()', 'org.eclipse.jface.viewers.ViewerCell.getTextBounds()', 'org.eclipse.jface.viewers.ViewerCell.getImageBounds()', 'org.eclipse.jface.viewers.ViewerCell.getForeground()', 'org.eclipse.jface.viewers.ViewerCell.getBackground()', 'org.eclipse.jface.viewers.ViewerCell.getFont()', 'org.eclipse.jface.viewers.ColumnViewerEditorActivationStrategy.getViewer()', 'org.eclipse.jface.viewers.ColumnViewerEditor.getFocusCell()', 'org.eclipse.jface.viewers.ColumnViewerEditor.getViewer()', 'org.eclipse.jface.viewers.CellEditor.doGetValue()', 'org.eclipse.jface.viewers.CellEditor.getControl()', 'org.eclipse.jface.viewers.CellEditor.getErrorMessage()', 'org.eclipse.jface.viewers.CellEditor.getValidator()', 'org.eclipse.jface.viewers.CellEditor.getValue()', 'org.eclipse.jface.viewers.EditingSupport.getViewer()', 'org.eclipse.jface.viewers.ViewerColumn.getLabelProvider()', 'org.eclipse.jface.viewers.ViewerColumn.getEditingSupport()', 'org.eclipse.jface.viewers.ViewerColumn.getViewer()', 'org.eclipse.jface.viewers.ColumnViewer.createViewerEditor()', 'org.eclipse.jface.viewers.ColumnViewer.getCellEditors()', 'org.eclipse.jface.viewers.ColumnViewer.getCellModifier()', 'org.eclipse.jface.viewers.ColumnViewer.getColumnProperties()', 'org.eclipse.jface.viewers.ColumnViewer.getColumnViewerEditor()', 'org.eclipse.jface.viewers.AbstractTableViewer.getLabelProvider()', 'org.eclipse.jface.viewers.AbstractTableViewer.getSelectionFromWidget()', 'org.eclipse.jface.viewers.AbstractTableViewer.doGetItems()', 'org.eclipse.jface.viewers.AbstractTableViewer.doGetSelection()', 'org.eclipse.jface.viewers.TableViewer.getControl()', 'org.eclipse.jface.viewers.TableViewer.getTable()', 'org.eclipse.jface.viewers.TableViewer.createViewerEditor()', 'org.eclipse.jface.viewers.TableViewer.doGetItems()', 'org.eclipse.jface.viewers.TableViewer.doGetSelection()', 'org.eclipse.jface.resource.ResourceManager.getDevice()', 'org.eclipse.jface.resource.ResourceManager.getDefaultImage()', 'org.eclipse.egit.ui.internal.history.CommitGraphTable.highlightFont()', 'org.eclipse.egit.ui.internal.history.CommitGraphTable.getControl()', 'org.eclipse.egit.ui.internal.history.CommitGraphTable.getTable()', 'org.eclipse.egit.ui.internal.history.CommitGraphTable.getTableView()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getControl()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getSelectionProvider()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getDescription()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getName()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getInputInternal()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getInput()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getShowInContext()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getShowInTargetIds()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getPage()', 'org.eclipse.egit.ui.internal.history.RenameTracker.getFilter()', 'org.eclipse.egit.ui.internal.history.RenameTracker.getCallback()', 'org.eclipse.jgit.revplot.PlotCommitList.createLane()', 'org.eclipse.egit.ui.internal.history.SWTCommitList.createLane()', 'org.eclipse.egit.ui.internal.history.GitCommitReference.getRegion()', 'org.eclipse.egit.ui.internal.history.GitCommitReference.getTarget()', 'org.eclipse.core.expressions.IPropertyTester.instantiate()', 'org.eclipse.core.internal.expressions.PropertyTesterDescriptor.getProperties()', 'org.eclipse.core.internal.expressions.PropertyTesterDescriptor.getNamespace()', 'org.eclipse.core.internal.expressions.PropertyTesterDescriptor.getConfigurationElement()', 'org.eclipse.core.internal.expressions.PropertyTesterDescriptor.instantiate()', 'org.eclipse.core.expressions.PropertyTester.internalCreateDescriptor()', 'org.eclipse.core.expressions.PropertyTester.instantiate()', 'org.eclipse.jface.viewers.StyledString.StyleRun.toString()', 'java.util.ArrayList.ArrayListSpliterator.trySplit()', 'java.util.ArrayList.Itr.next()', 'java.util.ArrayList.ListItr.previous()', 'java.util.ArrayList.SubList.1.next()', 'java.util.ArrayList.SubList.1.previous()', 'java.util.ArrayList.SubList.iterator()', 'java.util.ArrayList.SubList.spliterator()', 'java.util.ArrayList.clone()', 'java.util.ArrayList.toArray()', 'java.util.ArrayList.listIterator()', 'java.util.ArrayList.iterator()', 'java.util.ArrayList.spliterator()', 'org.eclipse.jface.viewers.StyledString.getString()', 'org.eclipse.jface.viewers.StyledString.toString()', 'org.eclipse.jface.viewers.StyledString.getStyleRanges()', 'org.eclipse.jgit.attributes.Attribute.getKey()', 'org.eclipse.jgit.attributes.Attribute.getValue()', 'org.eclipse.jgit.attributes.Attribute.toString()', 'org.eclipse.jgit.attributes.Attributes.getAll()', 'org.eclipse.jgit.attributes.Attributes.toString()', 'org.eclipse.jgit.attributes.AttributesProvider.getAttributes()', 'org.eclipse.jgit.treewalk.EmptyTreeIterator.getEntryObjectId()', 'org.eclipse.jgit.lib.MutableObjectId.toObjectId()', 'org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId()', 'org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode()', 'org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathString()', 'org.eclipse.jgit.treewalk.AbstractTreeIterator.createEmptyTreeIterator()', 'org.eclipse.jgit.treewalk.AbstractTreeIterator.toString()', 'org.eclipse.jgit.treewalk.TreeWalk.getObjectReader()', 'org.eclipse.jgit.treewalk.TreeWalk.getFilter()', 'org.eclipse.jgit.treewalk.TreeWalk.getAttributesNodeProvider()', 'org.eclipse.jgit.treewalk.TreeWalk.getAttributes()', 'org.eclipse.jgit.treewalk.TreeWalk.getFileMode()', 'org.eclipse.jgit.treewalk.TreeWalk.getNameString()', 'org.eclipse.jgit.treewalk.TreeWalk.getPathString()', 'org.eclipse.jgit.treewalk.TreeWalk.min()', 'org.eclipse.jgit.diff.DiffEntry.getOldPath()', 'org.eclipse.jgit.diff.DiffEntry.getNewPath()', 'org.eclipse.jgit.diff.DiffEntry.getDiffAttribute()', 'org.eclipse.jgit.diff.DiffEntry.getOldMode()', 'org.eclipse.jgit.diff.DiffEntry.getNewMode()', 'org.eclipse.jgit.diff.DiffEntry.getOldId()', 'org.eclipse.jgit.diff.DiffEntry.getNewId()', 'org.eclipse.jgit.diff.DiffEntry.toString()', 'org.eclipse.egit.ui.internal.history.FileDiff.FileDiffForMerges.getPath()', 'org.eclipse.egit.ui.internal.history.FileDiff.FileDiffForMerges.getNewPath()', 'org.eclipse.egit.ui.internal.history.FileDiff.FileDiffForMerges.getBlobs()', 'org.eclipse.egit.ui.internal.history.FileDiff.FileDiffForMerges.getModes()', 'org.eclipse.egit.ui.internal.history.FileDiff.getCommit()', 'org.eclipse.egit.ui.internal.history.FileDiff.getRepository()', 'org.eclipse.egit.ui.internal.history.FileDiff.getPath()', 'org.eclipse.egit.ui.internal.history.FileDiff.getOldPath()', 'org.eclipse.egit.ui.internal.history.FileDiff.getNewPath()', 'org.eclipse.egit.ui.internal.history.FileDiff.getBlobs()', 'org.eclipse.egit.ui.internal.history.FileDiff.getModes()', 'org.eclipse.egit.ui.internal.history.FileDiffInput.getCommit()', 'org.eclipse.egit.ui.internal.history.FileDiffInput.getRepository()', 'org.eclipse.egit.ui.internal.history.FileDiffInput.getTreeWalk()', 'org.eclipse.egit.ui.internal.history.FileDiffInput.getInterestingPaths()', 'org.eclipse.egit.ui.internal.history.FileDiffContentProvider.FileDiffLoader.getDiffs()', 'org.eclipse.ui.progress.UIJob.getDisplay()', 'org.eclipse.jface.internal.text.InformationControlReplacer.getCurrentInformationControl2()', 'org.eclipse.jface.internal.text.InternalAccessor.getCurrentInformationControl()', 'org.eclipse.jface.internal.text.InternalAccessor.getInformationControlReplacer()', 'org.eclipse.jface.text.AbstractInformationControlManager.Anchor.toString()', 'org.eclipse.jface.text.AbstractInformationControlManager.MyInternalAccessor.getCurrentInformationControl()', 'org.eclipse.jface.text.AbstractInformationControlManager.MyInternalAccessor.getInformationControlReplacer()', 'org.eclipse.jface.text.AbstractInformationControlManager.getInformationControlReplacer()', 'org.eclipse.jface.text.AbstractInformationControlManager.getCurrentInformationControl()', 'org.eclipse.jface.text.AbstractInformationControlManager.getSubjectControl()', 'org.eclipse.jface.text.AbstractInformationControlManager.getSubjectArea()', 'org.eclipse.jface.text.AbstractInformationControlManager.getInformationControl()', 'org.eclipse.jface.text.AbstractInformationControlManager.restoreInformationControlBounds()', 'org.eclipse.jface.text.AbstractInformationControlManager.getInternalAccessor()', 'org.eclipse.swt.events.TypedEvent.getName()', 'org.eclipse.swt.events.TypedEvent.toString()', 'org.eclipse.swt.events.MouseEvent.toString()', 'org.eclipse.jface.text.AbstractHoverInformationControlManager.getHoverEventLocation()', 'org.eclipse.jface.text.AbstractHoverInformationControlManager.getHoverEvent()', 'org.eclipse.jface.text.AbstractHoverInformationControlManager.getInternalAccessor()', 'org.eclipse.egit.ui.internal.history.FormatJob.FormatRequest.getAllRefs()', 'org.eclipse.egit.ui.internal.history.FormatJob.FormatRequest.getRepository()', 'org.eclipse.egit.ui.internal.history.FormatJob.FormatRequest.getCommit()', 'org.eclipse.egit.ui.internal.history.FormatJob.FormatResult.getCommitInfo()', 'org.eclipse.egit.ui.internal.history.FormatJob.FormatResult.getKnownLinks()', 'org.eclipse.egit.ui.internal.history.FindToolbar.getText()', 'org.eclipse.jface.window.WindowManager.getWindows()', 'org.eclipse.jface.window.Window.getLayout()', 'org.eclipse.jface.window.Window.createShell()', 'org.eclipse.jface.window.Window.getContents()', 'org.eclipse.jface.window.Window.getDefaultImage()', 'org.eclipse.jface.window.Window.getDefaultImages()', 'org.eclipse.jface.window.Window.getInitialSize()', 'org.eclipse.jface.window.Window.getParentShell()', 'org.eclipse.jface.window.Window.getShell()', 'org.eclipse.jface.window.Window.getShellListener()', 'org.eclipse.jface.window.Window.getWindowManager()', 'org.eclipse.jface.dialogs.Dialog.getButtonBar()', 'org.eclipse.jface.dialogs.Dialog.getCancelButton()', 'org.eclipse.jface.dialogs.Dialog.getDialogArea()', 'org.eclipse.jface.dialogs.Dialog.getOKButton()', 'org.eclipse.jface.dialogs.Dialog.getBlockedHandler()', 'org.eclipse.jface.dialogs.Dialog.getDialogBoundsSettings()', 'org.eclipse.jface.dialogs.Dialog.getInitialSize()', 'org.eclipse.swt.layout.GridData.getName()', 'org.eclipse.swt.layout.GridData.toString()', 'org.eclipse.jface.dialogs.TrayDialog.getLayout()', 'org.eclipse.jface.dialogs.TrayDialog.getTray()', 'org.eclipse.swt.widgets.Label.getImage()', 'org.eclipse.swt.widgets.Label.getNameText()', 'org.eclipse.swt.widgets.Label.getText()', 'org.eclipse.swt.widgets.Label.windowClass()', 'org.eclipse.jface.dialogs.TitleAreaDialog.getInitialSize()', 'org.eclipse.jface.dialogs.TitleAreaDialog.getTitleArea()', 'org.eclipse.jface.dialogs.TitleAreaDialog.getTitleImageLabel()', 'org.eclipse.jface.dialogs.TitleAreaDialog.getMessage()', 'org.eclipse.jface.dialogs.TitleAreaDialog.getErrorMessage()', 'org.eclipse.egit.ui.internal.history.CommitSelectionDialog.getCommitId()', 'org.eclipse.egit.ui.internal.history.CommitFileDiffViewer.getShowInContext()', 'org.eclipse.egit.ui.internal.history.GitHistorySelectionTracker.getSelection()', 'org.eclipse.jface.wizard.Wizard.getContainer()', 'org.eclipse.jface.wizard.Wizard.getDefaultPageImage()', 'org.eclipse.jface.wizard.Wizard.getDialogSettings()', 'org.eclipse.jface.wizard.Wizard.getPages()', 'org.eclipse.jface.wizard.Wizard.getShell()', 'org.eclipse.jface.wizard.Wizard.getStartingPage()', 'org.eclipse.jface.wizard.Wizard.getTitleBarColor()', 'org.eclipse.jface.wizard.Wizard.getWindowTitle()', 'org.eclipse.jface.dialogs.IMessageProvider.getMessage()', 'org.eclipse.jface.dialogs.DialogPage.getControl()', 'org.eclipse.jface.dialogs.DialogPage.getDescription()', 'org.eclipse.jface.dialogs.DialogPage.getDialogFontName()', 'org.eclipse.jface.dialogs.DialogPage.getErrorMessage()', 'org.eclipse.jface.dialogs.DialogPage.getFont()', 'org.eclipse.jface.dialogs.DialogPage.getImage()', 'org.eclipse.jface.dialogs.DialogPage.getMessage()', 'org.eclipse.jface.dialogs.DialogPage.getShell()', 'org.eclipse.jface.dialogs.DialogPage.getTitle()', 'org.eclipse.jface.wizard.WizardPage.getContainer()', 'org.eclipse.jface.wizard.WizardPage.getDialogSettings()', 'org.eclipse.jface.wizard.WizardPage.getImage()', 'org.eclipse.jface.wizard.WizardPage.getName()', 'org.eclipse.jface.wizard.WizardPage.getNextPage()', 'org.eclipse.jface.wizard.WizardPage.getPreviousPage()', 'org.eclipse.jface.wizard.WizardPage.getShell()', 'org.eclipse.jface.wizard.WizardPage.getWizard()', 'org.eclipse.jface.wizard.WizardPage.toString()', 'org.eclipse.egit.ui.internal.history.GitCreatePatchWizard.getRepository()', 'org.eclipse.egit.ui.internal.history.GitCreatePatchWizard.getCommit()', 'org.eclipse.egit.ui.internal.history.LocationPage.getFile()', 'org.eclipse.jface.text.IRewriteTarget.getDocument()', 'org.eclipse.jface.text.ITextViewerExtension.getControl()', 'org.eclipse.jface.text.ITextViewerExtension.getRewriteTarget()', 'org.eclipse.jface.text.ITextViewerExtension2.getCurrentTextHover()', 'org.eclipse.jface.text.ITextViewerExtension2.getHoverEventLocation()', 'org.eclipse.jface.text.ITextViewerExtension6.getUndoManager()', 'org.eclipse.jface.text.ITextViewerExtension8.EnrichMode.toString()', 'org.eclipse.jface.text.IEditingSupportRegistry.getRegisteredSupports()', 'org.eclipse.jface.text.IDocumentInformationMapping.getCoverage()', 'org.eclipse.jface.text.FindReplaceDocumentAdapter.toString()', 'org.eclipse.jface.text.DefaultPositionUpdater.getCategory()', 'org.eclipse.swt.events.KeyEvent.toString()', 'org.eclipse.swt.events.VerifyEvent.toString()', 'org.eclipse.jface.text.TextViewer.FindReplaceRange.getRange()', 'org.eclipse.jface.text.IFindReplaceTargetExtension.getScope()', 'org.eclipse.jface.text.IFindReplaceTargetExtension.getLineSelection()', 'org.eclipse.jface.text.TextViewer.FindReplaceTarget.getSelectionText()', 'org.eclipse.jface.text.TextViewer.FindReplaceTarget.getSelection()', 'org.eclipse.jface.text.TextViewer.FindReplaceTarget.getScope()', 'org.eclipse.jface.text.TextViewer.FindReplaceTarget.getLineSelection()', 'org.eclipse.jface.text.TextViewer.RewriteTarget.getDocument()', 'org.eclipse.jface.text.TextViewer.ViewerState.getSelection()', 'org.eclipse.jface.text.TextViewer.createDocumentAdapter()', 'org.eclipse.jface.text.TextViewer.getControl()', 'org.eclipse.jface.text.TextViewer.getTextWidget()', 'org.eclipse.jface.text.TextViewer.getUndoManager()', 'org.eclipse.jface.text.TextViewer.getTextHoveringController()', 'org.eclipse.jface.text.TextViewer.getSelectedRange()', 'org.eclipse.jface.text.TextViewer.getSelection()', 'org.eclipse.jface.text.TextViewer.getSelectionProvider()', 'org.eclipse.jface.text.TextViewer.getInput()', 'org.eclipse.jface.text.TextViewer.getDocument()', 'org.eclipse.jface.text.TextViewer.getSlaveDocumentManager()', 'org.eclipse.jface.text.TextViewer.createSlaveDocumentManager()', 'org.eclipse.jface.text.TextViewer.getVisibleDocument()', 'org.eclipse.jface.text.TextViewer.getVisibleRegion()', 'org.eclipse.jface.text.TextViewer._internalGetVisibleRegion()', 'org.eclipse.jface.text.TextViewer.getFindReplaceTarget()', 'org.eclipse.jface.text.TextViewer.getFindReplaceDocumentAdapter()', 'org.eclipse.jface.text.TextViewer.getTextOperationTarget()', 'org.eclipse.jface.text.TextViewer.getRewriteTarget()', 'org.eclipse.jface.text.TextViewer.getCurrentTextHover()', 'org.eclipse.jface.text.TextViewer.getHoverEventLocation()', 'org.eclipse.jface.text.TextViewer.getPaintManager()', 'org.eclipse.jface.text.TextViewer.getModelCoverage()', 'org.eclipse.jface.text.TextViewer.getDocumentPartitioning()', 'org.eclipse.jface.text.TextViewer.getRegisteredSupports()', 'org.eclipse.jface.text.source.ISourceViewerExtension2.getVisualAnnotationModel()', 'org.eclipse.jface.text.source.ISourceViewerExtension3.getQuickAssistAssistant()', 'org.eclipse.jface.text.source.ISourceViewerExtension3.getQuickAssistInvocationContext()', 'org.eclipse.jface.text.source.ISourceViewerExtension3.getCurrentAnnotationHover()', 'org.eclipse.jface.text.source.ISourceViewerExtension4.getContentAssistantFacade()', 'org.eclipse.jface.text.formatter.IFormattingContext.getPreferenceKeys()', 'org.eclipse.jface.text.source.IVerticalRulerInfo.getControl()', 'org.eclipse.jface.text.source.IVerticalRuler.getModel()', 'org.eclipse.jface.text.source.IOverviewRuler.getHeaderControl()', 'org.eclipse.jface.text.source.SourceViewer.createLayout()', 'org.eclipse.jface.text.source.SourceViewer.getControl()', 'org.eclipse.jface.text.source.SourceViewer.getAnnotationModel()', 'org.eclipse.jface.text.source.SourceViewer.getQuickAssistAssistant()', 'org.eclipse.jface.text.source.SourceViewer.getContentAssistantFacade()', 'org.eclipse.jface.text.source.SourceViewer.getQuickAssistInvocationContext()', 'org.eclipse.jface.text.source.SourceViewer.getVisualAnnotationModel()', 'org.eclipse.jface.text.source.SourceViewer.createFormattingContext()', 'org.eclipse.jface.text.source.SourceViewer.rememberSelection()', 'org.eclipse.jface.text.source.SourceViewer.getRangeIndication()', 'org.eclipse.jface.text.source.SourceViewer.getVerticalRuler()', 'org.eclipse.jface.text.source.SourceViewer.getCurrentAnnotationHover()', 'org.eclipse.jface.text.ITextViewerExtension3.getModelCoverage()', 'org.eclipse.jface.text.ITextViewerExtension5.getModelCoverage()', 'org.eclipse.jface.text.source.IAnnotationModelExtension.getModificationStamp()', 'org.eclipse.jface.text.ISynchronizable.getLockObject()', 'org.eclipse.jface.text.source.IAnnotationMap.valuesIterator()', 'org.eclipse.jface.text.source.IAnnotationMap.keySetIterator()', 'org.eclipse.jface.text.source.IAnnotationMap.entrySet()', 'org.eclipse.jface.text.source.IAnnotationMap.keySet()', 'org.eclipse.jface.text.source.IAnnotationMap.values()', 'org.eclipse.jface.text.source.AnnotationModelEvent.getAnnotationModel()', 'org.eclipse.jface.text.source.AnnotationModelEvent.getAddedAnnotations()', 'org.eclipse.jface.text.source.AnnotationModelEvent.getRemovedAnnotations()', 'org.eclipse.jface.text.source.AnnotationModelEvent.getChangedAnnotations()', 'org.eclipse.jface.text.source.AnnotationModel.AnnotationsInterator.next()', 'org.eclipse.jface.text.source.AnnotationModel.AnnotationsInterator.next()', 'org.eclipse.jface.text.source.AnnotationModel.MetaIterator.next()', 'org.eclipse.jface.text.source.AnnotationModel.RegionIterator.next()', 'org.eclipse.jface.text.source.AnnotationModel.RegionIterator.next()', 'org.eclipse.jface.text.source.AnnotationModel.getAnnotationMap()', 'org.eclipse.jface.text.source.AnnotationModel.getLockObject()', 'org.eclipse.jface.text.source.AnnotationModel.getAnnotationModelEvent()', 'org.eclipse.jface.text.source.AnnotationModel.createAnnotationModelEvent()', 'org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator()', 'org.eclipse.jface.text.source.AnnotationModel.getModificationStamp()', 'org.eclipse.jface.text.IDocumentExtension3.getPartitionings()', 'org.eclipse.jface.text.DocumentRewriteSession.getSessionType()', 'org.eclipse.jface.text.DocumentRewriteSession.toString()', 'org.eclipse.jface.text.IDocumentExtension4.getActiveRewriteSession()', 'org.eclipse.jface.text.IDocumentExtension4.getDefaultLineDelimiter()', 'org.eclipse.jface.text.ILineTracker.getLegalLineDelimiters()', 'org.eclipse.jface.text.AbstractDocument.getStore()', 'org.eclipse.jface.text.AbstractDocument.getTracker()', 'org.eclipse.jface.text.AbstractDocument.getDocumentListeners()', 'org.eclipse.jface.text.AbstractDocument.getDocumentPartitioningListeners()', 'org.eclipse.jface.text.AbstractDocument.getDocumentManagedPositions()', 'org.eclipse.jface.text.AbstractDocument.getDocumentPartitioner()', 'org.eclipse.jface.text.AbstractDocument.getLegalContentTypes()', 'org.eclipse.jface.text.AbstractDocument.getLegalLineDelimiters()', 'org.eclipse.jface.text.AbstractDocument.getDefaultLineDelimiter()', 'org.eclipse.jface.text.AbstractDocument.getPositionCategories()', 'org.eclipse.jface.text.AbstractDocument.getPositionUpdaters()', 'org.eclipse.jface.text.AbstractDocument.get()', 'org.eclipse.jface.text.AbstractDocument.getPartitionings()', 'org.eclipse.jface.text.AbstractDocument.getActiveRewriteSession()', 'org.eclipse.jface.text.projection.IMinimalMapping.getCoverage()', 'org.eclipse.jface.text.projection.ProjectionMapping.getCoverage()', 'org.eclipse.jface.text.projection.ProjectionDocument.getFragments()', 'org.eclipse.jface.text.projection.ProjectionDocument.getSegments()', 'org.eclipse.jface.text.projection.ProjectionDocument.getProjectionMapping()', 'org.eclipse.jface.text.projection.ProjectionDocument.getDocumentInformationMapping()', 'org.eclipse.jface.text.projection.ProjectionDocument.getMasterDocument()', 'org.eclipse.jface.text.projection.ProjectionDocument.getDefaultLineDelimiter()', 'org.eclipse.jface.text.source.projection.ProjectionViewer.ProjectionCommandQueue.iterator()', 'org.eclipse.jface.text.source.projection.ProjectionViewer.getProjectionAnnotationModel()', 'org.eclipse.jface.text.source.projection.ProjectionViewer.createSlaveDocumentManager()', 'org.eclipse.jface.text.source.projection.ProjectionViewer.getVisibleRegion()', 'org.eclipse.jface.text.source.projection.ProjectionViewer.getFindReplaceDocumentAdapter()', 'org.eclipse.jface.text.ITextHoverExtension.getHoverControlCreator()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.TextHover.getHoverControlCreator()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.CommitDocument.getKnownHyperlinks()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.CommitPartitionTokenScanner.nextToken()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.ObjectHyperlink.getHyperlinkRegion()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.ObjectHyperlink.getTypeLabel()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.ObjectHyperlink.getHyperlinkText()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.getInput()', 'org.eclipse.egit.ui.internal.history.GitHistoryWalk.next()', 'org.eclipse.core.resources.mapping.ResourceTraversal.getResources()', 'org.eclipse.core.resources.mapping.IModelProviderDescriptor.getExtendedModels()', 'org.eclipse.core.resources.mapping.IModelProviderDescriptor.getId()', 'org.eclipse.core.resources.mapping.IModelProviderDescriptor.getLabel()', 'org.eclipse.core.resources.mapping.IModelProviderDescriptor.getModelProvider()', 'org.eclipse.core.resources.IMarkerDelta.getAttributes()', 'org.eclipse.core.resources.IMarkerDelta.getMarker()', 'org.eclipse.core.resources.IMarkerDelta.getResource()', 'org.eclipse.core.resources.IMarkerDelta.getType()', 'org.eclipse.core.resources.IResourceDelta.getAffectedChildren()', 'org.eclipse.core.resources.IResourceDelta.getFullPath()', 'org.eclipse.core.resources.IResourceDelta.getMarkerDeltas()', 'org.eclipse.core.resources.IResourceDelta.getMovedFromPath()', 'org.eclipse.core.resources.IResourceDelta.getMovedToPath()', 'org.eclipse.core.resources.IResourceDelta.getProjectRelativePath()', 'org.eclipse.core.resources.IResourceDelta.getResource()', 'org.eclipse.core.resources.mapping.ModelProvider.getModelProviderDescriptors()', 'org.eclipse.core.resources.mapping.ModelProvider.getDescriptor()', 'org.eclipse.core.resources.mapping.ModelProvider.getId()', 'org.eclipse.core.resources.mapping.ResourceMapping.getModelObject()', 'org.eclipse.core.resources.mapping.ResourceMapping.getModelProvider()', 'org.eclipse.core.resources.mapping.ResourceMapping.getModelProviderId()', 'org.eclipse.core.resources.mapping.ResourceMapping.getProjects()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getRepository()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getDstMerge()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getDstRemoteName()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getSrcRevCommit()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getDstRevCommit()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getProjects()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getCommonAncestorRev()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getIncludedResources()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getPathFilter()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getSrcRev()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeData.getDstRev()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelObject.getParent()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelObject.getChildren()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelObject.getName()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelObject.getLocation()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitObjectMapping.getModelObject()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitObjectMapping.getModelProviderId()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitObjectMapping.getProjects()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelTree.getName()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelTree.getLocation()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelTree.getChildren()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelTree.toString()', 'org.eclipse.compare.ITypedElement.getName()', 'org.eclipse.compare.ITypedElement.getImage()', 'org.eclipse.compare.ITypedElement.getType()', 'org.eclipse.compare.structuremergeviewer.ICompareInput.getName()', 'org.eclipse.compare.structuremergeviewer.ICompareInput.getImage()', 'org.eclipse.compare.structuremergeviewer.ICompareInput.getAncestor()', 'org.eclipse.compare.structuremergeviewer.ICompareInput.getLeft()', 'org.eclipse.compare.structuremergeviewer.ICompareInput.getRight()', 'org.eclipse.ui.internal.InternalSaveable.getBackgroundSaveJob()', 'org.eclipse.ui.Saveable.getName()', 'org.eclipse.ui.Saveable.getToolTipText()', 'org.eclipse.ui.Saveable.getImageDescriptor()', 'org.eclipse.team.ui.mapping.ISynchronizationCompareInput.getSaveable()', 'org.eclipse.team.ui.mapping.ISynchronizationCompareInput.getFullPath()', 'org.eclipse.compare.IResourceProvider.getResource()', 'org.eclipse.egit.ui.internal.synchronize.compare.ComparisonDataSource.getRevCommit()', 'org.eclipse.egit.ui.internal.synchronize.compare.ComparisonDataSource.getObjectId()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCompareInput.getName()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCompareInput.getImage()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCompareInput.getAncestor()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCompareInput.getLeft()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCompareInput.getRight()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCompareInput.getSaveable()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCompareInput.getFullPath()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getChildren()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getName()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getLocation()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getBaseCommitId()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getRemoteCommitId()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.toString()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getImage()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getAncestor()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getLeft()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getRight()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getSaveable()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getFullPath()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getResource()', 'org.eclipse.swt.dnd.DropTargetEvent.toString()', 'org.eclipse.jface.viewers.ViewerDropAdapter.getCurrentTarget()', 'org.eclipse.jface.viewers.ViewerDropAdapter.getCurrentEvent()', 'org.eclipse.jface.viewers.ViewerDropAdapter.getSelectedObject()', 'org.eclipse.jface.viewers.ViewerDropAdapter.getViewer()', 'org.eclipse.ui.part.PluginTransferData.getExtensionId()', 'org.eclipse.ui.part.PluginDropAdapter.getCurrentTransfer()', 'org.eclipse.swt.dnd.Transfer.getSupportedTypes()', 'org.eclipse.swt.dnd.Transfer.getTypeNames()', 'org.eclipse.ui.navigator.IExtensionStateModel.getId()', 'org.eclipse.ui.navigator.IExtensionStateModel.getViewerId()', 'org.eclipse.ui.navigator.MenuInsertionPoint.getName()', 'org.eclipse.ui.navigator.MenuInsertionPoint.toString()', 'org.eclipse.ui.navigator.INavigatorViewerDescriptor.getViewerId()', 'org.eclipse.ui.navigator.INavigatorViewerDescriptor.getPopupMenuId()', 'org.eclipse.ui.navigator.INavigatorViewerDescriptor.getCustomInsertionPoints()', 'org.eclipse.ui.navigator.INavigatorViewerDescriptor.getHelpContext()', 'org.eclipse.ui.navigator.OverridePolicy.getLiteral()', 'org.eclipse.ui.navigator.INavigatorContentDescriptor.getId()', 'org.eclipse.ui.navigator.INavigatorContentDescriptor.getName()', 'org.eclipse.ui.navigator.INavigatorContentDescriptor.getAppearsBeforeId()', 'org.eclipse.ui.navigator.INavigatorContentDescriptor.getSuppressedExtensionId()', 'org.eclipse.ui.navigator.INavigatorContentDescriptor.getOverridePolicy()', 'org.eclipse.ui.navigator.INavigatorContentDescriptor.getOverriddenDescriptor()', 'org.eclipse.ui.navigator.INavigatorContentDescriptor.getOverriddingExtensions()', 'org.eclipse.ui.navigator.ICommonFilterDescriptor.getId()', 'org.eclipse.ui.navigator.ICommonFilterDescriptor.getName()', 'org.eclipse.ui.navigator.ICommonFilterDescriptor.getDescription()', 'org.eclipse.ui.navigator.INavigatorFilterService.getVisibleFilterDescriptors()', 'org.eclipse.ui.navigator.PipelinedShapeModification.getParent()', 'org.eclipse.ui.navigator.PipelinedShapeModification.getChildren()', 'org.eclipse.ui.navigator.CommonDragAdapterAssistant.getSupportedTransferTypes()', 'org.eclipse.ui.navigator.CommonDragAdapterAssistant.getContentService()', 'org.eclipse.ui.navigator.CommonDragAdapterAssistant.getShell()', 'org.eclipse.ui.navigator.INavigatorDnDService.getCommonDragAssistants()', 'org.eclipse.ui.navigator.INavigatorSaveablesService.getSaveables()', 'org.eclipse.ui.navigator.INavigatorSaveablesService.getActiveSaveables()', 'org.eclipse.ui.navigator.INavigatorContentExtension.getId()', 'org.eclipse.ui.navigator.INavigatorContentExtension.getDescriptor()', 'org.eclipse.ui.navigator.INavigatorContentExtension.getContentProvider()', 'org.eclipse.ui.navigator.INavigatorContentExtension.getLabelProvider()', 'org.eclipse.ui.navigator.INavigatorContentExtension.getStateModel()', 'org.eclipse.ui.navigator.INavigatorContentService.createCommonContentProvider()', 'org.eclipse.ui.navigator.INavigatorContentService.createCommonLabelProvider()', 'org.eclipse.ui.navigator.INavigatorContentService.createCommonDescriptionProvider()', 'org.eclipse.ui.navigator.INavigatorContentService.getViewerId()', 'org.eclipse.ui.navigator.INavigatorContentService.getViewerDescriptor()', 'org.eclipse.ui.navigator.INavigatorContentService.getVisibleExtensionIds()', 'org.eclipse.ui.navigator.INavigatorContentService.getVisibleExtensions()', 'org.eclipse.ui.navigator.INavigatorContentService.getFilterService()', 'org.eclipse.ui.navigator.INavigatorContentService.getSorterService()', 'org.eclipse.ui.navigator.INavigatorContentService.getPipelineService()', 'org.eclipse.ui.navigator.INavigatorContentService.getDnDService()', 'org.eclipse.ui.navigator.INavigatorContentService.getActivationService()', 'org.eclipse.ui.navigator.INavigatorContentService.getSaveablesService()', 'org.eclipse.ui.navigator.CommonDropAdapter.getSupportedDropTransfers()', 'org.eclipse.ui.navigator.CommonDropAdapter.getCurrentTarget()', 'org.eclipse.ui.navigator.CommonDropAdapter.getCurrentTransfer()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.getContentService()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.getShell()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.getCurrentEvent()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.getCommonDropAdapter()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getProjects()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getContext()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getInputMappings()', 'org.eclipse.team.core.mapping.ISynchronizationScope.asInputScope()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getMappings()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getTraversals()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getRoots()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getModelProviders()', 'org.eclipse.team.core.diff.IDiff.getPath()', 'org.eclipse.team.core.diff.IDiff.toDiffString()', 'org.eclipse.team.core.mapping.IResourceDiffTree.getAffectedResources()', 'org.eclipse.team.core.mapping.ISynchronizationContext.getScope()', 'org.eclipse.team.core.mapping.ISynchronizationContext.getDiffTree()', 'org.eclipse.team.core.mapping.ISynchronizationContext.getCache()', 'org.eclipse.jface.preference.IPreferencePageContainer.getPreferenceStore()', 'org.eclipse.jface.preference.PreferencePage.computeSize()', 'org.eclipse.jface.preference.PreferencePage.doComputeSize()', 'org.eclipse.jface.preference.PreferencePage.doGetPreferenceStore()', 'org.eclipse.jface.preference.PreferencePage.getContainer()', 'org.eclipse.jface.preference.PreferencePage.getPreferenceStore()', 'org.eclipse.jface.preference.PreferencePage.toString()', 'org.eclipse.jface.preference.PreferencePage.getApplyButton()', 'org.eclipse.jface.preference.PreferencePage.getDefaultsButton()', 'org.eclipse.team.ui.synchronize.ISynchronizeParticipant.getId()', 'org.eclipse.team.ui.synchronize.ISynchronizeParticipant.getSecondaryId()', 'org.eclipse.team.ui.synchronize.ISynchronizeParticipant.getName()', 'org.eclipse.team.ui.synchronize.ISynchronizeParticipant.getImageDescriptor()', 'org.eclipse.team.ui.synchronize.ISynchronizeParticipant.createPageConfiguration()', 'org.eclipse.team.ui.synchronize.ISynchronizeParticipant.getPreferencePages()', 'org.eclipse.team.ui.synchronize.ISynchronizeParticipant.getHelpContextId()', 'org.eclipse.team.ui.synchronize.ISynchronizePageSite.getWorkbenchSite()', 'org.eclipse.team.ui.synchronize.ISynchronizePageSite.getPart()', 'org.eclipse.team.ui.synchronize.ISynchronizePageSite.getShell()', 'org.eclipse.team.ui.synchronize.ISynchronizePageSite.getSelectionProvider()', 'org.eclipse.team.ui.synchronize.ISynchronizePageSite.getKeyBindingService()', 'org.eclipse.team.ui.synchronize.ISynchronizePageSite.getPageSettings()', 'org.eclipse.team.ui.synchronize.ISynchronizePageSite.getActionBars()', 'org.eclipse.team.ui.synchronize.ISynchronizePage.getViewer()', 'org.eclipse.team.core.variants.IResourceVariant.getName()', 'org.eclipse.team.core.variants.IResourceVariant.getContentIdentifier()', 'org.eclipse.team.core.synchronize.SyncInfo.getLocal()', 'org.eclipse.team.core.synchronize.SyncInfo.getLocalContentIdentifier()', 'org.eclipse.team.core.synchronize.SyncInfo.getBase()', 'org.eclipse.team.core.synchronize.SyncInfo.getRemote()', 'org.eclipse.team.core.synchronize.SyncInfo.getComparator()', 'org.eclipse.team.core.synchronize.SyncInfo.toString()', 'org.eclipse.team.core.synchronize.ISyncInfoSetChangeEvent.getAddedResources()', 'org.eclipse.team.core.synchronize.ISyncInfoSetChangeEvent.getChangedResources()', 'org.eclipse.team.core.synchronize.ISyncInfoSetChangeEvent.getRemovedResources()', 'org.eclipse.team.core.synchronize.ISyncInfoSetChangeEvent.getSet()', 'org.eclipse.team.core.ITeamStatus.getResource()', 'org.eclipse.team.core.synchronize.SyncInfoSetChangeEvent.getAddedResources()', 'org.eclipse.team.core.synchronize.SyncInfoSetChangeEvent.getChangedResources()', 'org.eclipse.team.core.synchronize.SyncInfoSetChangeEvent.getRemovedResources()', 'org.eclipse.team.core.synchronize.SyncInfoSetChangeEvent.getSet()', 'org.eclipse.team.core.synchronize.SyncInfoSetChangeEvent.getErrors()', 'org.eclipse.team.core.synchronize.SyncInfoSet.getSyncInfos()', 'org.eclipse.team.core.synchronize.SyncInfoSet.getResources()', 'org.eclipse.team.core.synchronize.SyncInfoSet.createEmptyChangeEvent()', 'org.eclipse.team.core.synchronize.SyncInfoSet.getListeners()', 'org.eclipse.team.core.synchronize.SyncInfoSet.getChangeEvent()', 'org.eclipse.team.core.synchronize.SyncInfoSet.getErrors()', 'org.eclipse.team.core.synchronize.SyncInfoSet.iterator()', 'org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration.getParticipant()', 'org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration.getSite()', 'org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration.getPage()', 'org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration.getSyncInfoSet()', 'org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration.getComparisonType()', 'org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration.getRunnableContext()', 'org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration.getViewerId()', 'org.eclipse.ui.navigator.ICommonContentExtensionSite.getExtensionStateModel()', 'org.eclipse.ui.navigator.ICommonContentExtensionSite.getMemento()', 'org.eclipse.ui.navigator.ICommonContentExtensionSite.getExtension()', 'org.eclipse.ui.navigator.ICommonContentExtensionSite.getService()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getContext()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getScope()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getConfiguration()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getDelegateContentProvider()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getModelProvider()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getModelProviderId()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getModelRoot()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getViewer()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getExtensionSite()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetContentProvider.getDelegateContentProvider()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetContentProvider.getModelProviderId()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetContentProvider.getModelRoot()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeLabelProvider.getDelegateLabelProvider()', 'org.eclipse.team.ui.mapping.SynchronizationLabelProvider.getContext()', 'org.eclipse.team.ui.mapping.SynchronizationLabelProvider.getScope()', 'org.eclipse.team.ui.mapping.SynchronizationLabelProvider.getModelRoot()', 'org.eclipse.team.ui.mapping.SynchronizationLabelProvider.getExtensionSite()', 'org.eclipse.egit.ui.internal.GitLabelProvider.getChangesetIcon()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetLabelProvider.getDelegateLabelProvider()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetLabelProvider.getDelegateLabelProvider()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCacheTree.toString()', 'org.eclipse.egit.ui.internal.synchronize.model.HasProjects.getProjects()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRepository.getChildren()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRepository.getName()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRepository.getProjects()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRepository.getSrcRev()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRepository.getLocation()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRepository.toString()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRepository.getRepository()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCache.getName()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCache.getChildren()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCache.getLocation()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCache.toString()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelWorkingTree.getName()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelWorkingTree.toString()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCommit.getLocation()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCommit.getProjects()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCommit.getName()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCommit.getChildren()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelCommit.toString()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeDataSet.iterator()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeDataSet.getAllProjects()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeDataSet.toString()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRoot.getGsds()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelRoot.getChildren()', 'org.eclipse.ui.actions.BaseSelectionListenerAction.getStructuredSelection()', 'org.eclipse.team.internal.ui.actions.JobRunnableContext.BasicJob.getRunnable()', 'org.eclipse.team.internal.ui.actions.JobRunnableContext.IContextJob.getRunnable()', 'org.eclipse.team.internal.ui.actions.JobRunnableContext.ResourceJob.getRunnable()', 'org.eclipse.team.internal.ui.actions.JobRunnableContext.getCompletionStatus()', 'org.eclipse.team.ui.TeamOperation.TeamOperationJobContext.getCompletionStatus()', 'org.eclipse.team.ui.TeamOperation.getPart()', 'org.eclipse.team.ui.TeamOperation.getSchedulingRule()', 'org.eclipse.team.ui.TeamOperation.getJobName()', 'org.eclipse.team.ui.TeamOperation.getGotoAction()', 'org.eclipse.team.ui.TeamOperation.getOperationIcon()', 'org.eclipse.team.ui.TeamOperation.getShell()', 'org.eclipse.compare.structuremergeviewer.IDiffContainer.getChildren()', 'org.eclipse.compare.structuremergeviewer.IDiffElement.getParent()', 'org.eclipse.team.ui.synchronize.SynchronizeModelOperation.getSyncInfoSet()', 'org.eclipse.team.ui.synchronize.SynchronizeModelAction.getSelectedDiffElements()', 'org.eclipse.team.ui.synchronize.SynchronizeModelAction.getSyncInfoFilter()', 'org.eclipse.team.ui.synchronize.SynchronizeModelAction.getFilteredDiffElements()', 'org.eclipse.team.ui.synchronize.SynchronizeModelAction.getConfiguration()', 'org.eclipse.ui.actions.SelectionListenerAction.getSelectedNonResources()', 'org.eclipse.ui.actions.SelectionListenerAction.getSelectedResources()', 'org.eclipse.egit.ui.internal.synchronize.action.OpenWorkingFileAction.getWorkbenchPage()', 'org.eclipse.compare.IStreamContentAccessor.getContents()', 'org.eclipse.compare.BufferedContent.getContents()', 'org.eclipse.compare.BufferedContent.createStream()', 'org.eclipse.compare.IEncodedStreamContentAccessor.getCharset()', 'org.eclipse.compare.structuremergeviewer.IStructureComparator.getChildren()', 'org.eclipse.compare.ResourceNode.getResource()', 'org.eclipse.compare.ResourceNode.getContents()', 'org.eclipse.compare.ResourceNode.getName()', 'org.eclipse.compare.ResourceNode.getType()', 'org.eclipse.compare.ResourceNode.getImage()', 'org.eclipse.compare.ResourceNode.getChildren()', 'org.eclipse.compare.ResourceNode.createStream()', 'org.eclipse.compare.ResourceNode.getCharset()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceTypedElement.getContents()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceTypedElement.createStream()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceTypedElement.getAuthor()', 'org.eclipse.egit.ui.internal.synchronize.compare.LocalNonWorkspaceTypedElement.getContents()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCacheCompareInput.getLeft()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCacheCompareInput.getRight()', 'org.eclipse.egit.ui.internal.synchronize.compare.GitCacheCompareInput.getAncestor()', 'org.eclipse.egit.ui.internal.synchronize.SyncRepoEntity.SyncRefEntity.getDescription()', 'org.eclipse.egit.ui.internal.synchronize.SyncRepoEntity.SyncRefEntity.getValue()', 'org.eclipse.egit.ui.internal.synchronize.SyncRepoEntity.getName()', 'org.eclipse.egit.ui.internal.synchronize.SyncRepoEntity.getRefList()', 'org.eclipse.egit.ui.internal.synchronize.GitChangeSetModelProvider.getProvider()', 'org.eclipse.egit.ui.internal.synchronize.GitSynchronizeWizardPage.getSelectedBranches()', 'org.eclipse.egit.ui.internal.synchronize.GitSynchronizeWizardPage.getSelectedProjects()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeParticipant.getName()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeParticipant.getImageDescriptor()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeParticipant.getId()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeParticipant.getSecondaryId()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeParticipant.getHelpContextId()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeParticipant.createPageConfiguration()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeParticipant.getPreferencePages()', 'org.eclipse.team.core.mapping.ISynchronizationScopeManager.getScope()', 'org.eclipse.team.core.mapping.provider.SynchronizationContext.getScope()', 'org.eclipse.team.core.mapping.provider.SynchronizationContext.getScopeManager()', 'org.eclipse.team.core.mapping.provider.SynchronizationContext.getCache()', 'org.eclipse.team.core.mapping.provider.SynchronizationContext.getDiffTree()', 'org.eclipse.ui.actions.ActionContext.getSelection()', 'org.eclipse.ui.actions.ActionContext.getInput()', 'org.eclipse.ui.actions.ActionGroup.getContext()', 'org.eclipse.team.ui.synchronize.ISynchronizeModelElement.getResource()', 'org.eclipse.jface.viewers.SelectionChangedEvent.getSelection()', 'org.eclipse.jface.viewers.SelectionChangedEvent.getStructuredSelection()', 'org.eclipse.jface.viewers.SelectionChangedEvent.getSelectionProvider()', 'org.eclipse.team.ui.synchronize.SynchronizePageActionGroup.VisibleRootsSelectionProvider.getSelection()', 'org.eclipse.team.ui.synchronize.SynchronizePageActionGroup.getVisibleRootsSelectionProvider()', 'org.eclipse.team.ui.synchronize.SynchronizePageActionGroup.getConfiguration()', 'org.eclipse.team.core.diff.ITwoWayDiff.getFromPath()', 'org.eclipse.team.core.diff.ITwoWayDiff.getToPath()', 'org.eclipse.team.core.diff.IThreeWayDiff.getLocalChange()', 'org.eclipse.team.core.diff.IThreeWayDiff.getRemoteChange()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.getName()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.getShortName()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.createMergeActionGroup()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.getContext()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.getShortTaskName()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.getActiveSaveable()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.getEnabledModelProviders()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.getPreferencePages()', 'org.eclipse.team.core.subscribers.Subscriber.getName()', 'org.eclipse.team.core.subscribers.Subscriber.roots()', 'org.eclipse.team.core.subscribers.Subscriber.getResourceComparator()', 'org.eclipse.team.core.subscribers.SubscriberMergeContext.getDiffFilter()', 'org.eclipse.team.core.subscribers.SubscriberMergeContext.getSubscriber()', 'org.eclipse.team.core.variants.IResourceVariantTree.roots()', 'org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.getBaseTree()', 'org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.getRemoteTree()', 'org.eclipse.egit.core.synchronize.ThreeWayDiffEntry.getBaseId()', 'org.eclipse.egit.core.synchronize.ThreeWayDiffEntry.getPath()', 'org.eclipse.egit.core.synchronize.ThreeWayDiffEntry.getLocalId()', 'org.eclipse.egit.core.synchronize.ThreeWayDiffEntry.getRemoteId()', 'org.eclipse.egit.core.synchronize.ThreeWayDiffEntry.toString()', 'org.eclipse.egit.core.synchronize.GitSyncObjectCache.getName()', 'org.eclipse.egit.core.synchronize.GitSyncObjectCache.getDiffEntry()', 'org.eclipse.egit.core.synchronize.GitSyncObjectCache.members()', 'org.eclipse.egit.core.synchronize.GitSyncObjectCache.toString()', 'org.eclipse.egit.core.synchronize.GitSyncCache.toString()', 'org.eclipse.team.core.history.ITag.getName()', 'org.eclipse.team.core.history.IFileRevision.getName()', 'org.eclipse.team.core.history.IFileRevision.getURI()', 'org.eclipse.team.core.history.IFileRevision.getContentIdentifier()', 'org.eclipse.team.core.history.IFileRevision.getAuthor()', 'org.eclipse.team.core.history.IFileRevision.getComment()', 'org.eclipse.team.core.history.IFileRevision.getBranches()', 'org.eclipse.team.core.history.IFileRevision.getTags()', 'org.eclipse.team.core.history.provider.FileRevision.LocalFileRevision.getName()', 'org.eclipse.team.core.history.provider.FileRevision.LocalFileRevision.getURI()', 'org.eclipse.team.core.history.provider.FileRevision.getURI()', 'org.eclipse.team.core.history.provider.FileRevision.getContentIdentifier()', 'org.eclipse.team.core.history.provider.FileRevision.getAuthor()', 'org.eclipse.team.core.history.provider.FileRevision.getComment()', 'org.eclipse.team.core.history.provider.FileRevision.getBranches()', 'org.eclipse.team.core.history.provider.FileRevision.getTags()', 'org.eclipse.team.internal.core.mapping.ResourceVariantFileRevision.getName()', 'org.eclipse.team.internal.core.mapping.ResourceVariantFileRevision.getContentIdentifier()', 'org.eclipse.team.internal.core.mapping.ResourceVariantFileRevision.getVariant()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.GitResourceVariantFileRevision.getContentIdentifier()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.GitResourceVariantFileRevision.getAuthor()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.GitResourceVariantFileRevision.getComment()', 'org.eclipse.team.internal.core.mapping.SyncInfoToDiffConverter.getDefault()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.roots()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getDataSet()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getCache()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getName()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getResourceComparator()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getSourceTree()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getBaseTree()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getRemoteTree()', 'org.eclipse.egit.core.synchronize.GitSubscriberMergeContext.getSyncData()', 'org.eclipse.egit.ui.internal.synchronize.GitModelSynchronizeParticipant.getEnabledModelProviders()', 'org.eclipse.compare.INavigatable.getInput()', 'org.eclipse.compare.CompareNavigator.getNavigatables()', 'org.eclipse.egit.ui.internal.synchronize.GitTreeCompareNavigator.getNavigatables()', 'org.eclipse.jface.viewers.ITreeSelection.getPaths()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getExpandedElements()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getSelectionFromWidget()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getVisibleExpandedElements()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getSelection()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getStructuredSelection()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getExpandedTreePaths()', 'org.eclipse.jface.viewers.AbstractTreeViewer.createViewerEditor()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getStructuredSelection()', 'org.eclipse.swt.widgets.TreeItem.getBackground()', 'org.eclipse.swt.widgets.TreeItem.getBounds()', 'org.eclipse.swt.widgets.TreeItem.getBoundsInPixels()', 'org.eclipse.swt.widgets.TreeItem.getFont()', 'org.eclipse.swt.widgets.TreeItem.getForeground()', 'org.eclipse.swt.widgets.TreeItem.getItems()', 'org.eclipse.swt.widgets.TreeItem.getImage()', 'org.eclipse.swt.widgets.TreeItem.getParent()', 'org.eclipse.swt.widgets.TreeItem.getParentItem()', 'org.eclipse.swt.widgets.TreeItem.getText()', 'org.eclipse.swt.widgets.TreeColumn.getNameText()', 'org.eclipse.swt.widgets.TreeColumn.getParent()', 'org.eclipse.swt.widgets.TreeColumn.getToolTipText()', 'org.eclipse.swt.widgets.Tree.getFocusItem()', 'org.eclipse.swt.widgets.Tree.getHeaderBackground()', 'org.eclipse.swt.widgets.Tree.getHeaderForeground()', 'org.eclipse.swt.widgets.Tree.getImageSize()', 'org.eclipse.swt.widgets.Tree.getColumns()', 'org.eclipse.swt.widgets.Tree.getItems()', 'org.eclipse.swt.widgets.Tree.getParentItem()', 'org.eclipse.swt.widgets.Tree.getSelection()', 'org.eclipse.swt.widgets.Tree.getSortColumn()', 'org.eclipse.swt.widgets.Tree.getTopItem()', 'org.eclipse.swt.widgets.Tree.windowClass()', 'org.eclipse.jface.viewers.TreeViewer.getControl()', 'org.eclipse.jface.viewers.TreeViewer.getLabelProvider()', 'org.eclipse.jface.viewers.TreeViewer.getTree()', 'org.eclipse.jface.viewers.TreeViewer.createViewerEditor()', 'org.eclipse.egit.ui.internal.clone.ProjectRecord.getProjectName()', 'org.eclipse.egit.ui.internal.clone.ProjectRecord.getProjectLabel()', 'org.eclipse.egit.ui.internal.clone.ProjectRecord.getProjectDescription()', 'org.eclipse.egit.ui.internal.clone.ProjectRecord.getProjectSystemFile()', 'org.eclipse.egit.ui.internal.clone.ProjectRecord.toString()', 'org.eclipse.egit.ui.internal.clone.GitProjectsImportPage.getProjectsList()', 'org.eclipse.egit.ui.internal.clone.GitProjectsImportPage.getValidProjects()', 'org.eclipse.egit.ui.internal.clone.GitProjectsImportPage.getCheckedProjects()', 'org.eclipse.egit.ui.internal.clone.GitProjectsImportPage.getSelectedWorkingSets()', 'org.eclipse.egit.ui.internal.clone.SourceBranchPage.getSelectedBranches()', 'org.eclipse.egit.ui.internal.clone.SourceBranchPage.getAvailableBranches()', 'org.eclipse.egit.ui.internal.clone.SourceBranchPage.getHEAD()', 'org.eclipse.jgit.transport.URIish.getHost()', 'org.eclipse.jgit.transport.URIish.getScheme()', 'org.eclipse.jgit.transport.URIish.getPath()', 'org.eclipse.jgit.transport.URIish.getRawPath()', 'org.eclipse.jgit.transport.URIish.getUser()', 'org.eclipse.jgit.transport.URIish.getPass()', 'org.eclipse.jgit.transport.URIish.toPrivateString()', 'org.eclipse.jgit.transport.URIish.toString()', 'org.eclipse.jgit.transport.URIish.toASCIIString()', 'org.eclipse.jgit.transport.URIish.toPrivateASCIIString()', 'org.eclipse.jgit.transport.URIish.getHumanishName()', 'org.eclipse.jgit.transport.TagOpt.option()', 'org.eclipse.jgit.transport.TagOpt.values()', 'org.eclipse.jgit.transport.RemoteConfig.getName()', 'org.eclipse.jgit.transport.RemoteConfig.getURIs()', 'org.eclipse.jgit.transport.RemoteConfig.getPushURIs()', 'org.eclipse.jgit.transport.RemoteConfig.getFetchRefSpecs()', 'org.eclipse.jgit.transport.RemoteConfig.getPushRefSpecs()', 'org.eclipse.jgit.transport.RemoteConfig.getUploadPack()', 'org.eclipse.jgit.transport.RemoteConfig.getReceivePack()', 'org.eclipse.jgit.transport.RemoteConfig.getTagOpt()', 'org.eclipse.egit.ui.internal.components.RepositorySelection.getURI()', 'org.eclipse.egit.ui.internal.components.RepositorySelection.getPushURIs()', 'org.eclipse.egit.ui.internal.components.RepositorySelection.getConfig()', 'org.eclipse.egit.ui.internal.components.RepositorySelection.getConfigName()', 'org.eclipse.egit.core.securestorage.UserPasswordCredentials.getUser()', 'org.eclipse.egit.core.securestorage.UserPasswordCredentials.getPassword()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.PushInfo.getPushRefSpec()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.PushInfo.getPushUri()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.RepositoryConfigProperty.getSection()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.RepositoryConfigProperty.getSubsection()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.RepositoryConfigProperty.getName()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.RepositoryConfigProperty.getValue()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.getCloneUri()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.getCredentials()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.getRepositoryName()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.getFetchRefSpecs()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.getPushInfos()', 'org.eclipse.egit.ui.internal.provisional.wizards.GitRepositoryInfo.getRepositoryConfigProperties()', 'org.eclipse.egit.ui.internal.provisional.wizards.IRepositorySearchResult.getGitRepositoryInfo()', 'org.eclipse.egit.ui.internal.clone.AbstractGitCloneWizard.getCloneSourceProviders()', 'org.eclipse.egit.ui.internal.clone.AbstractGitCloneWizard.getRepositorySelection()', 'org.eclipse.egit.ui.internal.clone.AbstractGitCloneWizard.getCredentials()', 'org.eclipse.egit.ui.internal.clone.RepositoryLocationPage.getNextPage()', 'org.eclipse.egit.ui.internal.clone.GitSelectWizardPage.getPath()', 'org.eclipse.egit.ui.internal.clone.GitImportWizard.getCloneSourceProviders()', 'org.eclipse.egit.ui.internal.clone.GitImportWizard.getImportWizardDialogSettings()', 'org.eclipse.egit.ui.internal.provisional.wizards.IRepositoryServerProvider.getRepositoryServerInfos()', 'org.eclipse.egit.ui.internal.clone.GitCloneSourceProviderExtension.CloneSourceProvider.getLabel()', 'org.eclipse.egit.ui.internal.clone.GitCloneSourceProviderExtension.CloneSourceProvider.getImage()', 'org.eclipse.egit.ui.internal.clone.GitCloneSourceProviderExtension.CloneSourceProvider.getRepositoryServerProvider()', 'org.eclipse.egit.ui.internal.clone.GitCloneSourceProviderExtension.CloneSourceProvider.getRepositorySearchPage()', 'org.eclipse.egit.ui.internal.clone.GitCloneSourceProviderExtension.getCloneSourceProvider()', 'org.eclipse.egit.ui.internal.clone.CloneDestinationPage.getWorkingSets()', 'org.eclipse.egit.ui.internal.clone.CloneDestinationPage.getDestinationFile()', 'org.eclipse.egit.ui.internal.clone.CloneDestinationPage.getInitialBranch()', 'org.eclipse.egit.ui.internal.clone.CloneDestinationPage.getRemote()', 'org.eclipse.egit.ui.internal.clone.GitCreateProjectViaWizardWizard.getFilter()', 'org.eclipse.egit.ui.internal.clone.GitCreateGeneralProjectPage.getProjectName()', 'org.eclipse.egit.ui.internal.clone.GitSelectRepositoryPage.getRepository()', 'org.eclipse.egit.ui.internal.clone.GitSelectRepositoryPage.getInitialRepositories()', 'org.eclipse.team.ui.synchronize.ModelOperation.getPreviewRequestMessage()', 'org.eclipse.team.ui.synchronize.ModelOperation.getContext()', 'org.eclipse.team.ui.synchronize.ModelOperation.getScope()', 'org.eclipse.team.ui.synchronize.ModelOperation.getScopeManager()', 'org.eclipse.egit.ui.internal.operations.GitScopeOperation.getRelevantResources()', 'org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.getSchedulingRule()', 'org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.getContext()', 'org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.getScope()', 'org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.getName()', 'org.eclipse.core.resources.mapping.RemoteResourceMappingContext.getProjects()', 'org.eclipse.team.core.subscribers.SubscriberScopeManager.getSubscriber()', 'org.eclipse.egit.ui.internal.operations.GitScopeOperationFactory.getFactory()', 'org.eclipse.ui.IWorkbenchPart2.getPartName()', 'org.eclipse.ui.IWorkbenchPart2.getContentDescription()', 'org.eclipse.ui.IWorkbenchPart3.getPartProperties()', 'org.eclipse.ui.part.WorkbenchPart.getConfigurationElement()', 'org.eclipse.ui.part.WorkbenchPart.getDefaultImage()', 'org.eclipse.ui.part.WorkbenchPart.getSite()', 'org.eclipse.ui.part.WorkbenchPart.getTitle()', 'org.eclipse.ui.part.WorkbenchPart.getTitleImage()', 'org.eclipse.ui.part.WorkbenchPart.getTitleToolTip()', 'org.eclipse.ui.part.WorkbenchPart.getPartName()', 'org.eclipse.ui.part.WorkbenchPart.getContentDescription()', 'org.eclipse.ui.part.WorkbenchPart.getPartProperties()', 'org.eclipse.ui.part.ViewPart.getViewSite()', 'org.eclipse.egit.ui.internal.reflog.ReflogView.getRepository()', 'org.eclipse.egit.ui.internal.reflog.command.AbstractReflogCommandHandler.getView()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.getWindowTitle()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.getRefName()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.refNameFromDialog()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.refFromDialog()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.getCurrentBranch()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.getDialogBoundsSettings()', 'org.eclipse.egit.ui.internal.reflog.RefSelectionDialog.getTitle()', 'org.eclipse.egit.ui.internal.reflog.RefSelectionDialog.getMessageText()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.getOldId()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.getNewId()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.getWho()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.getComment()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.parseCheckout()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.getCommitMessage()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.getRepository()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.getObjectId()', 'org.eclipse.ui.progress.PendingUpdateAdapter.toString()', 'org.eclipse.ui.progress.DeferredTreeContentManager.createPendingUpdateAdapter()', 'org.eclipse.egit.ui.internal.reflog.ReflogViewContentProvider.ReflogInput.getRepository()', 'org.eclipse.egit.ui.internal.reflog.ReflogViewContentProvider.ReflogInput.getRef()', 'org.eclipse.ui.ISaveablesSource.getSaveables()', 'org.eclipse.ui.ISaveablesSource.getActiveSaveables()', 'org.eclipse.ui.navigator.CommonDragAdapter.getSupportedDragTransfers()', 'org.eclipse.ui.internal.navigator.framelist.Frame.getName()', 'org.eclipse.ui.internal.navigator.framelist.Frame.getParent()', 'org.eclipse.ui.internal.navigator.framelist.Frame.getToolTipText()', 'org.eclipse.ui.internal.navigator.framelist.FrameList.getCurrentFrame()', 'org.eclipse.ui.internal.navigator.framelist.FrameList.getSource()', 'org.eclipse.ui.navigator.CommonViewer.getMapper()', 'org.eclipse.ui.navigator.CommonViewer.getCommonNavigator()', 'org.eclipse.ui.navigator.CommonViewer.createDragAdapter()', 'org.eclipse.ui.navigator.CommonViewer.createDropAdapter()', 'org.eclipse.ui.navigator.CommonViewer.getNavigatorContentService()', 'org.eclipse.ui.navigator.CommonViewer.getSelection()', 'org.eclipse.ui.navigator.CommonViewer.toString()', 'org.eclipse.ui.navigator.CommonViewer.getFrameList()', 'org.eclipse.ui.navigator.ICommonViewerSite.getId()', 'org.eclipse.ui.navigator.ICommonViewerSite.getShell()', 'org.eclipse.ui.navigator.ICommonViewerSite.getSelectionProvider()', 'org.eclipse.ui.navigator.ICommonActionExtensionSite.getExtensionStateModel()', 'org.eclipse.ui.navigator.ICommonActionExtensionSite.getExtensionId()', 'org.eclipse.ui.navigator.ICommonActionExtensionSite.getPluginId()', 'org.eclipse.ui.navigator.ICommonActionExtensionSite.getContentService()', 'org.eclipse.ui.navigator.ICommonActionExtensionSite.getStructuredViewer()', 'org.eclipse.ui.navigator.ICommonActionExtensionSite.getViewSite()', 'org.eclipse.ui.navigator.CommonActionProvider.getActionSite()', 'org.eclipse.ui.navigator.Priority.getLiteral()', 'org.eclipse.ui.navigator.Priority.toString()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.createActionProvider()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.getId()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.getDefinedId()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.getDependsOnId()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.getOverridesId()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.getAppearsBeforeId()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.getPriority()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.dependentDescriptors()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.overridingDescriptors()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.getPluginId()', 'org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor.toString()', 'org.eclipse.ui.navigator.CommonNavigatorManager.getNavigatorActionService()', 'org.eclipse.ui.IPluginContribution.getLocalId()', 'org.eclipse.ui.IPluginContribution.getPluginId()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getId()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getName()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getAppearsBeforeId()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getIcon()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getSuppressedExtensionId()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getOverridePolicy()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getContribution()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getConfigElement()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.createContentProvider()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.createLabelProvider()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getOverriddingExtensions()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.toString()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentDescriptor.getOverriddenDescriptor()', 'org.eclipse.ui.internal.navigator.extensions.SafeDelegateTreeContentProvider.toString()', 'org.eclipse.ui.internal.navigator.extensions.SafeDelegateTreeContentProvider.getDelegateContentProvider()', 'org.eclipse.ui.internal.navigator.extensions.StructuredViewerManager.getViewer()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.getId()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.getDescriptor()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.getContentProvider()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.internalGetContentProvider()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.getLabelProvider()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.getStateModel()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.getOverridingExtensions()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.toString()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getVisibleExtensionIds()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getVisibleExtensions()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getActiveDescriptorsWithSaveables()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.createCommonContentProvider()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.createCommonLabelProvider()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.createCommonDescriptionProvider()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getViewerId()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getViewerDescriptor()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getExtensions()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getFilterService()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getSorterService()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getPipelineService()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getDnDService()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getActivationService()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getSaveablesService()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getExtensionStateService()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getShell()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.toString()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getViewer()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getPreferencesRoot()', 'org.eclipse.ui.navigator.CommonNavigator.getCommonViewer()', 'org.eclipse.ui.navigator.CommonNavigator.getNavigatorContentService()', 'org.eclipse.ui.navigator.CommonNavigator.getNavigatorActionService()', 'org.eclipse.ui.navigator.CommonNavigator.createCommonManager()', 'org.eclipse.ui.navigator.CommonNavigator.createCommonActionGroup()', 'org.eclipse.ui.navigator.CommonNavigator.getInitialInput()', 'org.eclipse.ui.navigator.CommonNavigator.getSaveables()', 'org.eclipse.ui.navigator.CommonNavigator.getActiveSaveables()', 'org.eclipse.ui.navigator.CommonNavigator.getLinkHelperService()', 'org.eclipse.ui.navigator.CommonNavigator.getMemento()', 'org.eclipse.ui.navigator.CommonNavigator.getWorkingSetLabel()', 'org.eclipse.egit.ui.internal.repository.RepositoriesView.getShowInContext()', 'org.eclipse.egit.ui.internal.repository.RepositoriesView.getShowInTargetIds()', 'org.eclipse.egit.ui.internal.repository.tree.command.RepositoriesViewCommandHandler.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNodeType.getIcon()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNodeType.values()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNode.getParent()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNode.getType()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNode.getRepository()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNode.getPath()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNode.getObject()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNode.toString()', 'org.eclipse.egit.ui.internal.repository.tree.TagNode.getCommitId()', 'org.eclipse.egit.ui.internal.repository.tree.TagNode.getCommitShortMessage()', 'org.eclipse.egit.ui.internal.repository.tree.FolderNode.getPath()', 'org.eclipse.egit.ui.internal.repository.tree.BranchHierarchyNode.getChildPaths()', 'org.eclipse.egit.ui.internal.repository.tree.BranchHierarchyNode.getChildRefs()', 'org.eclipse.egit.ui.internal.repository.tree.BranchHierarchyNode.getChildRefsRecursive()', 'org.eclipse.egit.ui.internal.repository.tree.FileNode.getPath()', 'org.eclipse.jface.viewers.StyledCellLabelProvider.getViewer()', 'org.eclipse.jface.viewers.StyledCellLabelProvider.getColumn()', 'org.eclipse.jface.viewers.IDecorationContext.getProperties()', 'org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getDecorationContext()', 'org.eclipse.jface.viewers.DecoratingStyledCellLabelProvider.getLabelDecorator()', 'org.eclipse.ui.views.properties.IPropertyDescriptor.getCategory()', 'org.eclipse.ui.views.properties.IPropertyDescriptor.getDescription()', 'org.eclipse.ui.views.properties.IPropertyDescriptor.getDisplayName()', 'org.eclipse.ui.views.properties.IPropertyDescriptor.getFilterFlags()', 'org.eclipse.ui.views.properties.IPropertyDescriptor.getHelpContextIds()', 'org.eclipse.ui.views.properties.IPropertyDescriptor.getId()', 'org.eclipse.ui.views.properties.IPropertyDescriptor.getLabelProvider()', 'org.eclipse.ui.views.properties.IPropertySource.getEditableValue()', 'org.eclipse.ui.views.properties.IPropertySource.getPropertyDescriptors()', 'org.eclipse.ui.views.properties.PropertySheetPage.getSaveablePart()', 'org.eclipse.ui.views.properties.PropertySheetPage.getControl()', 'org.eclipse.egit.ui.internal.repository.RepositoryPropertySource.DisplayMode.getText()', 'org.eclipse.egit.ui.internal.repository.RepositoryPropertySource.EditAction.getId()', 'org.eclipse.egit.ui.internal.preferences.ConfigurationEditorComponent.createContents()', 'org.eclipse.egit.ui.internal.preferences.ConfigurationEditorComponent.getContents()', 'org.eclipse.egit.ui.internal.repository.RepositoryPropertySource.getEditableValue()', 'org.eclipse.egit.ui.internal.repository.RepositoryPropertySource.getPropertyDescriptors()', 'org.eclipse.egit.ui.internal.repository.CreateRepositoryPage.getDirectory()', 'org.eclipse.egit.ui.internal.decorators.GitDecorator.getName()', 'org.eclipse.egit.ui.internal.repository.RepositoryTreeNodeDecorator.getName()', 'org.eclipse.egit.ui.internal.repository.RepositoryRemotePropertySource.getEditableValue()', 'org.eclipse.egit.ui.internal.repository.RepositoryRemotePropertySource.getPropertyDescriptors()', 'org.eclipse.ui.IWorkbenchPropertyPage.getElement()', 'org.eclipse.ui.dialogs.PropertyPage.getElement()', 'org.eclipse.egit.ui.internal.repository.RepositorySearchDialog.getDirectories()', 'org.eclipse.egit.ui.internal.repository.NewRepositoryWizard.getCreatedRepository()', 'org.eclipse.core.runtime.IExecutableExtensionFactory.create()', 'org.eclipse.egit.ui.internal.repository.RepositoriesViewExtensionFactory.create()', 'org.eclipse.egit.ui.internal.repository.CreateBranchWizard.getNewBranchName()', 'org.eclipse.egit.ui.internal.repository.SelectUriWizard.getUri()', 'org.eclipse.egit.ui.internal.repository.SelectUriWizard.getCredentials()', 'org.eclipse.egit.ui.internal.repository.RepositoryDragAssistant.getSupportedTransferTypes()', 'org.eclipse.egit.ui.internal.repository.BranchPropertySource.EditAction.getId()', 'org.eclipse.egit.ui.internal.repository.BranchPropertySource.getEditableValue()', 'org.eclipse.egit.ui.internal.repository.BranchPropertySource.getPropertyDescriptors()', 'org.eclipse.egit.ui.internal.repository.CreateBranchPage.SourceSelectionDialog.getTitle()', 'org.eclipse.egit.ui.internal.repository.CreateBranchPage.SourceSelectionDialog.getMessageText()', 'org.eclipse.egit.ui.internal.repository.CreateBranchPage.getBranchName()', 'org.eclipse.egit.ui.internal.repository.RepositorySearchWizard.getDirectories()', 'org.eclipse.jface.preference.FieldEditorPreferencePage.getFieldEditorParent()', 'org.eclipse.egit.ui.internal.preferences.DateFormatPreferencePage.doGetPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.SynchronizePreferencePage.doGetPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.DoublePreferencesPreferencePage.doGetSecondaryPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.DoublePreferencesPreferencePage.getSecondaryPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.CommittingPreferencePage.doGetPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.CommittingPreferencePage.doGetSecondaryPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.HistoryColumnsPreferencePage.doGetPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.HistoryPreferencePage.doGetPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.DialogsPreferencePage.doGetPreferenceStore()', 'org.eclipse.swt.widgets.TabItem.getControl()', 'org.eclipse.swt.widgets.TabItem.getBounds()', 'org.eclipse.swt.widgets.TabItem.getBoundsInPixels()', 'org.eclipse.swt.widgets.TabItem.getParent()', 'org.eclipse.swt.widgets.TabItem.getToolTipText()', 'org.eclipse.swt.widgets.TabFolder.findThemeControl()', 'org.eclipse.swt.widgets.TabFolder.getClientAreaInPixels()', 'org.eclipse.swt.widgets.TabFolder.getItems()', 'org.eclipse.swt.widgets.TabFolder.getSelection()', 'org.eclipse.swt.widgets.TabFolder.windowClass()', 'org.eclipse.egit.ui.internal.decorators.IDecoratableResource.getName()', 'org.eclipse.egit.ui.internal.decorators.IDecoratableResource.getRepositoryName()', 'org.eclipse.egit.ui.internal.decorators.IDecoratableResource.getCommitMessage()', 'org.eclipse.egit.ui.internal.decorators.IDecoratableResource.getBranch()', 'org.eclipse.egit.ui.internal.decorators.IDecoratableResource.getBranchStatus()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResource.getName()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResource.getRepositoryName()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResource.getCommitMessage()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResource.getBranch()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResource.getBranchStatus()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResource.toString()', 'org.eclipse.egit.ui.internal.preferences.GitDecoratorPreferencePage.PreviewResource.getName()', 'org.eclipse.egit.ui.internal.preferences.GitDecoratorPreferencePage.doGetPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.GitPreferenceRoot.doGetPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.GitPreferenceRoot.doGetSecondaryPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.StagingViewPreferencePage.doGetPreferenceStore()', 'org.eclipse.jface.preference.FieldEditor.getFieldEditorFontName()', 'org.eclipse.jface.preference.FieldEditor.getLabelControl()', 'org.eclipse.jface.preference.FieldEditor.getLabelText()', 'org.eclipse.jface.preference.FieldEditor.getPreferenceName()', 'org.eclipse.jface.preference.FieldEditor.getPreferencePage()', 'org.eclipse.jface.preference.FieldEditor.getPage()', 'org.eclipse.jface.preference.FieldEditor.getPreferenceStore()', 'org.eclipse.swt.widgets.Text.getCaretLocation()', 'org.eclipse.swt.widgets.Text.getCaretLocationInPixels()', 'org.eclipse.swt.widgets.Text.getLineDelimiter()', 'org.eclipse.swt.widgets.Text.getMessage()', 'org.eclipse.swt.widgets.Text.getSelection()', 'org.eclipse.swt.widgets.Text.getSelectionText()', 'org.eclipse.swt.widgets.Text.getText()', 'org.eclipse.swt.widgets.Text.windowClass()', 'org.eclipse.jface.preference.StringFieldEditor.getErrorMessage()', 'org.eclipse.jface.preference.StringFieldEditor.getStringValue()', 'org.eclipse.jface.preference.StringFieldEditor.getTextControl()', 'org.eclipse.egit.ui.internal.preferences.ProjectsPreferencePage.doGetPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.ProjectsPreferencePage.doGetSecondaryPreferenceStore()', 'org.eclipse.egit.ui.internal.preferences.AddConfigEntryDialog.getKey()', 'org.eclipse.egit.ui.internal.preferences.AddConfigEntryDialog.getValue()', 'org.eclipse.jgit.api.CherryPickResult.CherryPickStatus.1.toString()', 'org.eclipse.jgit.api.CherryPickResult.CherryPickStatus.2.toString()', 'org.eclipse.jgit.api.CherryPickResult.CherryPickStatus.3.toString()', 'org.eclipse.jgit.api.CherryPickResult.getNewHead()', 'org.eclipse.jgit.api.CherryPickResult.getCherryPickedRefs()', 'org.eclipse.jgit.api.CherryPickResult.getFailingPaths()', 'org.eclipse.jface.dialogs.IconAndMessageDialog.getImage()', 'org.eclipse.jface.dialogs.IconAndMessageDialog.getErrorImage()', 'org.eclipse.jface.dialogs.IconAndMessageDialog.getWarningImage()', 'org.eclipse.jface.dialogs.IconAndMessageDialog.getInfoImage()', 'org.eclipse.jface.dialogs.IconAndMessageDialog.getQuestionImage()', 'org.eclipse.jface.dialogs.MessageDialog.getImage()', 'org.eclipse.jface.dialogs.MessageDialog.getButtonLabels()', 'org.eclipse.egit.ui.internal.commit.CommitMessageHistory.getCommitHistory()', 'org.eclipse.jgit.notes.Note.getData()', 'org.eclipse.jgit.notes.Note.toString()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommitNote.getNoteText()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommit.abbreviate()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommit.getRepositoryName()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommit.getRepository()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommit.getRevCommit()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommit.getDiffs()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommit.getNotes()', 'org.eclipse.egit.ui.internal.commit.FocusTracker.getLastFocusControl()', 'org.eclipse.ui.part.EditorPart.getEditorInput()', 'org.eclipse.ui.part.EditorPart.getEditorSite()', 'org.eclipse.ui.part.EditorPart.getTitleToolTip()', 'org.eclipse.jface.dialogs.IPageChangeProvider.getSelectedPage()', 'org.eclipse.ui.part.MultiPageEditorPart.getActiveEditor()', 'org.eclipse.ui.part.MultiPageEditorPart.getContainer()', 'org.eclipse.ui.part.MultiPageEditorPart.getSelectedPage()', 'org.eclipse.ui.forms.widgets.AbstractHyperlink.getHref()', 'org.eclipse.ui.forms.widgets.AbstractHyperlink.getText()', 'org.eclipse.ui.forms.widgets.Hyperlink.getText()', 'org.eclipse.ui.forms.widgets.Hyperlink.getToolTipText()', 'org.eclipse.ui.forms.widgets.ImageHyperlink.getActiveImage()', 'org.eclipse.ui.forms.widgets.ImageHyperlink.getHoverImage()', 'org.eclipse.ui.forms.widgets.ImageHyperlink.getImage()', 'org.eclipse.ui.forms.HyperlinkSettings.getActiveBackground()', 'org.eclipse.ui.forms.HyperlinkSettings.getActiveForeground()', 'org.eclipse.ui.forms.HyperlinkSettings.getBackground()', 'org.eclipse.ui.forms.HyperlinkSettings.getBusyCursor()', 'org.eclipse.ui.forms.HyperlinkSettings.getTextCursor()', 'org.eclipse.ui.forms.HyperlinkSettings.getForeground()', 'org.eclipse.ui.forms.HyperlinkSettings.getHyperlinkCursor()', 'org.eclipse.ui.forms.widgets.FormText.getLoadingText()', 'org.eclipse.ui.forms.widgets.FormText.getHyperlinkSettings()', 'org.eclipse.ui.forms.widgets.FormText.getSelectionText()', 'org.eclipse.ui.forms.widgets.FormText.getSelectedLinkHref()', 'org.eclipse.ui.forms.widgets.FormText.getSelectedLinkText()', 'org.eclipse.ui.forms.widgets.ExpandableComposite.getClient()', 'org.eclipse.ui.forms.widgets.ExpandableComposite.getText()', 'org.eclipse.ui.forms.widgets.ExpandableComposite.getDescriptionControl()', 'org.eclipse.ui.forms.widgets.ExpandableComposite.getSeparatorControl()', 'org.eclipse.ui.forms.widgets.ExpandableComposite.getTextClient()', 'org.eclipse.ui.forms.widgets.ExpandableComposite.getTitleBarForeground()', 'org.eclipse.ui.forms.widgets.Section.getDescription()', 'org.eclipse.ui.forms.widgets.Section.getSeparatorControl()', 'org.eclipse.ui.forms.widgets.Section.getDescriptionControl()', 'org.eclipse.ui.forms.widgets.Section.getTitleBarBorderColor()', 'org.eclipse.ui.forms.widgets.Section.getTitleBarGradientBackground()', 'org.eclipse.ui.forms.widgets.Section.getTitleBarBackground()', 'org.eclipse.swt.custom.ScrolledComposite.getContent()', 'org.eclipse.swt.custom.ScrolledComposite.getOrigin()', 'org.eclipse.ui.forms.IMessage.getKey()', 'org.eclipse.ui.forms.IMessage.getData()', 'org.eclipse.ui.forms.IMessage.getControl()', 'org.eclipse.ui.forms.IMessage.getPrefix()', 'org.eclipse.ui.forms.IMessageManager.getMessagePrefixProvider()', 'org.eclipse.ui.forms.widgets.Form.getText()', 'org.eclipse.ui.forms.widgets.Form.getImage()', 'org.eclipse.ui.forms.widgets.Form.getBackgroundImage()', 'org.eclipse.ui.forms.widgets.Form.getToolBarManager()', 'org.eclipse.ui.forms.widgets.Form.getMenuManager()', 'org.eclipse.ui.forms.widgets.Form.getHead()', 'org.eclipse.ui.forms.widgets.Form.getHeadClient()', 'org.eclipse.ui.forms.widgets.Form.getBody()', 'org.eclipse.ui.forms.widgets.Form.getSeparatorColor()', 'org.eclipse.ui.forms.widgets.Form.getMessage()', 'org.eclipse.ui.forms.widgets.Form.getChildrenMessages()', 'org.eclipse.ui.forms.widgets.Form.getMessageManager()', 'org.eclipse.ui.forms.widgets.ScrolledForm.getText()', 'org.eclipse.ui.forms.widgets.ScrolledForm.getImage()', 'org.eclipse.ui.forms.widgets.ScrolledForm.getBackgroundImage()', 'org.eclipse.ui.forms.widgets.ScrolledForm.getToolBarManager()', 'org.eclipse.ui.forms.widgets.ScrolledForm.getBody()', 'org.eclipse.ui.forms.widgets.ScrolledForm.getForm()', 'org.eclipse.ui.forms.widgets.ScrolledForm.getMessage()', 'org.eclipse.ui.forms.widgets.ScrolledForm.getMessageManager()', 'org.eclipse.ui.forms.widgets.ScrolledPageBook.getContainer()', 'org.eclipse.ui.forms.widgets.ScrolledPageBook.getCurrentPage()', 'org.eclipse.ui.forms.HyperlinkGroup.getLastActivated()', 'org.eclipse.ui.forms.FormColors.getDisplay()', 'org.eclipse.ui.forms.FormColors.getInactiveBackground()', 'org.eclipse.ui.forms.FormColors.getBackground()', 'org.eclipse.ui.forms.FormColors.getForeground()', 'org.eclipse.ui.forms.FormColors.getBorderColor()', 'org.eclipse.ui.forms.widgets.FormToolkit.getHyperlinkGroup()', 'org.eclipse.ui.forms.widgets.FormToolkit.getColors()', 'org.eclipse.ui.part.MultiPageSelectionProvider.getMultiPageEditor()', 'org.eclipse.ui.part.MultiPageSelectionProvider.getSelection()', 'org.eclipse.ui.forms.editor.FormEditor.FormEditorSelectionProvider.getSelection()', 'org.eclipse.ui.forms.editor.FormEditor.getSelectedPage()', 'org.eclipse.ui.forms.editor.FormEditor.getToolkit()', 'org.eclipse.ui.forms.editor.FormEditor.getActiveEditor()', 'org.eclipse.ui.forms.editor.FormEditor.getActivePageInstance()', 'org.eclipse.ui.forms.IManagedForm.getToolkit()', 'org.eclipse.ui.forms.IManagedForm.getForm()', 'org.eclipse.ui.forms.IManagedForm.getParts()', 'org.eclipse.ui.forms.IManagedForm.getInput()', 'org.eclipse.ui.forms.IManagedForm.getContainer()', 'org.eclipse.ui.forms.IManagedForm.getMessageManager()', 'org.eclipse.ui.forms.editor.IFormPage.getEditor()', 'org.eclipse.ui.forms.editor.IFormPage.getManagedForm()', 'org.eclipse.ui.forms.editor.IFormPage.getPartControl()', 'org.eclipse.ui.forms.editor.IFormPage.getId()', 'org.eclipse.ui.forms.ManagedForm.getParts()', 'org.eclipse.ui.forms.ManagedForm.getToolkit()', 'org.eclipse.ui.forms.ManagedForm.getForm()', 'org.eclipse.ui.forms.ManagedForm.getInput()', 'org.eclipse.ui.forms.ManagedForm.getContainer()', 'org.eclipse.ui.forms.ManagedForm.getMessageManager()', 'org.eclipse.ui.forms.editor.FormPage.PageForm.getPage()', 'org.eclipse.ui.forms.editor.FormPage.getEditor()', 'org.eclipse.ui.forms.editor.FormPage.getManagedForm()', 'org.eclipse.ui.forms.editor.FormPage.getPartControl()', 'org.eclipse.ui.forms.editor.FormPage.getId()', 'org.eclipse.ui.forms.editor.FormPage.getTitleImage()', 'java.lang.Integer.toString()', 'org.eclipse.egit.ui.internal.commit.CommitEditorPage.getCommit()', 'org.eclipse.egit.ui.internal.commit.CommitEditorPage.getShowInContext()', 'org.eclipse.egit.ui.internal.commit.StashEditorPage.getStagedDiffs()', 'org.eclipse.egit.ui.internal.commit.StashEditorPage.getUnstagedDiffs()', 'org.eclipse.ui.part.EditorActionBarContributor.getActionBars()', 'org.eclipse.ui.part.EditorActionBarContributor.getPage()', 'org.eclipse.egit.ui.internal.commit.CommitEditorActionBarContributor.getTextEditorActionContributor()', 'org.eclipse.ui.views.contentoutline.ContentOutlinePage.getControl()', 'org.eclipse.ui.views.contentoutline.ContentOutlinePage.getSelection()', 'org.eclipse.ui.views.contentoutline.ContentOutlinePage.getTreeViewer()', 'org.eclipse.egit.ui.internal.commit.MultiPageEditorContentOutlinePage.getControl()', 'org.eclipse.egit.ui.internal.commit.MultiPageEditorContentOutlinePage.getSelection()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.CommitInfo.getCommit()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.CommitInfo.getAuthor()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.CommitInfo.getCommitter()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.CommitInfo.getCommitMessage()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.getCannotCommitMessage()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.getAuthor()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.getCommitter()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.getCommitMessage()', 'org.eclipse.egit.ui.internal.commit.CommitHelper.getPreviousCommit()', 'org.eclipse.ui.forms.editor.SharedHeaderFormEditor.getHeaderForm()', 'org.eclipse.ui.part.MultiPageEditorSite.getActionBarContributor()', 'org.eclipse.ui.part.MultiPageEditorSite.getActionBars()', 'org.eclipse.ui.part.MultiPageEditorSite.getDecoratorManager()', 'org.eclipse.ui.part.MultiPageEditorSite.getEditor()', 'org.eclipse.ui.part.MultiPageEditorSite.getId()', 'org.eclipse.ui.part.MultiPageEditorSite.getKeyBindingService()', 'org.eclipse.ui.part.MultiPageEditorSite.getMultiPageEditor()', 'org.eclipse.ui.part.MultiPageEditorSite.getPage()', 'org.eclipse.ui.part.MultiPageEditorSite.getPart()', 'org.eclipse.ui.part.MultiPageEditorSite.getPluginId()', 'org.eclipse.ui.part.MultiPageEditorSite.getRegisteredName()', 'org.eclipse.ui.part.MultiPageEditorSite.getSelectionProvider()', 'org.eclipse.ui.part.MultiPageEditorSite.getShell()', 'org.eclipse.ui.part.MultiPageEditorSite.getWorkbenchWindow()', 'org.eclipse.ui.part.MultiPageEditorSite.toString()', 'org.eclipse.egit.ui.internal.commit.CommitEditor.CommitEditorNestedSite.getActionBarContributor()', 'org.eclipse.egit.ui.internal.commit.CommitEditor.getShowInContext()', 'org.eclipse.egit.ui.internal.commit.CommitEditor.getShowInTargetIds()', 'org.eclipse.jgit.dircache.DirCacheIterator.createEmptyTreeIterator()', 'org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry.toString()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry.getMode()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry.getName()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry.openInputStream()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.PerDirectoryAttributesNode.load()', 'org.eclipse.jgit.ignore.IgnoreNode.getRules()', 'org.eclipse.jgit.ignore.IgnoreNode.toString()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.PerDirectoryIgnoreNode.load()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.getDirCacheIterator()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.getOptions()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryAttributesNode()', 'org.eclipse.jgit.treewalk.WorkingTreeIterator.getCleanFilterCommand()', 'org.eclipse.jgit.lib.IndexDiff.ProgressReportingFilter.clone()', 'org.eclipse.jgit.lib.IndexDiff.ProgressReportingFilter.clone()', 'org.eclipse.jgit.lib.IndexDiff.getAdded()', 'org.eclipse.jgit.lib.IndexDiff.getChanged()', 'org.eclipse.jgit.lib.IndexDiff.getRemoved()', 'org.eclipse.jgit.lib.IndexDiff.getMissing()', 'org.eclipse.jgit.lib.IndexDiff.getModified()', 'org.eclipse.jgit.lib.IndexDiff.getUntracked()', 'org.eclipse.jgit.lib.IndexDiff.getConflicting()', 'org.eclipse.jgit.lib.IndexDiff.getConflictingStageStates()', 'org.eclipse.jgit.lib.IndexDiff.getIgnoredNotInIndex()', 'org.eclipse.jgit.lib.IndexDiff.getAssumeUnchanged()', 'org.eclipse.jgit.lib.IndexDiff.getUntrackedFolders()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInput.toString()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInput.getImageDescriptor()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInput.getName()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInput.getPersistable()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInput.getToolTipText()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInput.getCommit()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInput.getFactoryId()', 'org.eclipse.jgit.diff.RenameDetector.compute()', 'org.eclipse.jgit.diff.Edit.toString()', 'org.eclipse.jgit.diff.EditList.toString()', 'org.eclipse.jgit.patch.HunkHeader.OldImage.getId()', 'org.eclipse.jgit.patch.HunkHeader.getFileHeader()', 'org.eclipse.jgit.patch.HunkHeader.toEditList()', 'org.eclipse.jgit.patch.HunkHeader.toString()', 'org.eclipse.jgit.patch.BinaryHunk.getFileHeader()', 'org.eclipse.jgit.patch.FileHeader.getScriptText()', 'org.eclipse.jgit.patch.FileHeader.getHunks()', 'org.eclipse.jgit.patch.FileHeader.getForwardBinaryHunk()', 'org.eclipse.jgit.patch.FileHeader.getReverseBinaryHunk()', 'org.eclipse.jgit.patch.FileHeader.toEditList()', 'org.eclipse.jgit.diff.DiffFormatter.getOutputStream()', 'org.eclipse.jgit.diff.DiffFormatter.getOldPrefix()', 'org.eclipse.jgit.diff.DiffFormatter.getNewPrefix()', 'org.eclipse.jgit.diff.DiffFormatter.getRenameDetector()', 'org.eclipse.jgit.diff.DiffFormatter.getPathFilter()', 'org.eclipse.jface.text.Region.toString()', 'org.eclipse.egit.ui.internal.commit.DiffRegionFormatter.FileDiffRegion.getDiff()', 'org.eclipse.egit.ui.internal.commit.DiffRegionFormatter.FileDiffRegion.toString()', 'org.eclipse.ui.texteditor.ITextEditor.getDocumentProvider()', 'org.eclipse.ui.texteditor.ITextEditor.getHighlightRange()', 'org.eclipse.ui.texteditor.ITextEditor.getSelectionProvider()', 'org.eclipse.ui.INavigationLocationProvider.createEmptyNavigationLocation()', 'org.eclipse.ui.INavigationLocationProvider.createNavigationLocation()', 'org.eclipse.ui.internal.texteditor.rulers.RulerColumnTarget.createAllTarget()', 'org.eclipse.ui.internal.texteditor.rulers.RulerColumnPlacement.getConstraints()', 'org.eclipse.jface.text.source.IVerticalRulerInfoExtension.getHover()', 'org.eclipse.jface.text.source.IVerticalRulerInfoExtension.getModel()', 'org.eclipse.jface.text.source.CompositeRuler.getControl()', 'org.eclipse.jface.text.source.CompositeRuler.getModel()', 'org.eclipse.jface.text.source.CompositeRuler.getTextViewer()', 'org.eclipse.jface.text.source.CompositeRuler.getDecoratorIterator()', 'org.eclipse.jface.text.source.CompositeRuler.getHover()', 'org.eclipse.jface.text.source.IVerticalRulerColumn.getControl()', 'org.eclipse.ui.texteditor.rulers.IContributedRulerColumn.getDescriptor()', 'org.eclipse.ui.texteditor.rulers.IContributedRulerColumn.getEditor()', 'org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.getId()', 'org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.getName()', 'org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.getIcon()', 'org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.getTarget()', 'org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.getPlacement()', 'org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.toString()', 'org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.getConfigurationElement()', 'org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.getContributor()', 'org.eclipse.ui.texteditor.rulers.RulerColumnRegistry.getDefault()', 'org.eclipse.ui.texteditor.rulers.RulerColumnRegistry.getColumnDescriptors()', 'org.eclipse.ui.texteditor.AbstractTextEditor.IdMapEntry.getActionId()', 'org.eclipse.ui.texteditor.TextEditorAction.getTextEditor()', 'org.eclipse.ui.texteditor.TextNavigationAction.getTextWidget()', 'org.eclipse.ui.texteditor.TextNavigationAction.getDescription()', 'org.eclipse.ui.texteditor.TextNavigationAction.getDisabledImageDescriptor()', 'org.eclipse.ui.texteditor.TextNavigationAction.getHelpListener()', 'org.eclipse.ui.texteditor.TextNavigationAction.getHoverImageDescriptor()', 'org.eclipse.ui.texteditor.TextNavigationAction.getImageDescriptor()', 'org.eclipse.ui.texteditor.TextNavigationAction.getMenuCreator()', 'org.eclipse.ui.texteditor.TextNavigationAction.getText()', 'org.eclipse.ui.texteditor.TextNavigationAction.getToolTipText()', 'org.eclipse.ui.texteditor.AbstractTextEditor.PositionLabelValue.toString()', 'org.eclipse.ui.texteditor.AbstractTextEditor.SelectionProvider.getSelection()', 'org.eclipse.ui.texteditor.AbstractTextEditor.TextEditorSavable.getName()', 'org.eclipse.ui.texteditor.AbstractTextEditor.TextEditorSavable.getToolTipText()', 'org.eclipse.ui.texteditor.AbstractTextEditor.TextEditorSavable.getImageDescriptor()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getDocumentProvider()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getRangeIndicator()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getSourceViewerConfiguration()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getSourceViewer()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getVerticalRuler()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getEditorContextMenuId()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getRulerContextMenuId()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getHelpContextId()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getPreferenceStore()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getSelectionProvider()', 'org.eclipse.ui.texteditor.AbstractTextEditor.doGetSelection()', 'org.eclipse.ui.texteditor.AbstractTextEditor.createContextMenuListener()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getContextMenuListener()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getRulerMouseListener()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getSelectionChangedListener()', 'org.eclipse.ui.texteditor.AbstractTextEditor.createVerticalRuler()', 'org.eclipse.ui.texteditor.AbstractTextEditor.createColumnSupport()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getSymbolicFontName()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getFontPropertyPreferenceKey()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getProgressMonitor()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getStatusLineManager()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getHighlightRange()', 'org.eclipse.ui.texteditor.AbstractTextEditor.createEmptyNavigationLocation()', 'org.eclipse.ui.texteditor.AbstractTextEditor.createNavigationLocation()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getLegalInsertModes()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getCursorPosition()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getSaveables()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getActiveSaveables()', 'org.eclipse.jface.text.source.IAnnotationHoverExtension.getHoverControlCreator()', 'org.eclipse.jface.text.information.IInformationProviderExtension2.getInformationPresenterControlCreator()', 'org.eclipse.jface.text.source.LineChangeHover.getTabReplacement()', 'org.eclipse.jface.text.source.LineChangeHover.getHoverControlCreator()', 'org.eclipse.jface.text.source.LineChangeHover.getInformationPresenterControlCreator()', 'org.eclipse.ui.texteditor.AnnotationPreference.getAnnotationType()', 'org.eclipse.ui.texteditor.AnnotationPreference.getMarkerType()', 'org.eclipse.ui.texteditor.AnnotationPreference.getColorPreferenceKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getColorPreferenceValue()', 'org.eclipse.ui.texteditor.AnnotationPreference.getPreferenceLabel()', 'org.eclipse.ui.texteditor.AnnotationPreference.getOverviewRulerPreferenceKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getVerticalRulerPreferenceKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getTextPreferenceKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getHighlightPreferenceKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getIsGoToNextNavigationTargetKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getIsGoToPreviousNavigationTargetKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getShowInNextPrevDropdownToolbarActionKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getTextStylePreferenceKey()', 'org.eclipse.ui.texteditor.AnnotationPreference.getTextStyleValue()', 'org.eclipse.ui.texteditor.AnnotationPreference.getImageDescriptor()', 'org.eclipse.ui.texteditor.AnnotationPreference.getSymbolicImageName()', 'org.eclipse.ui.texteditor.AnnotationPreference.getAnnotationImageProvider()', 'org.eclipse.ui.texteditor.AnnotationPreference.getQuickFixImageDescriptor()', 'org.eclipse.ui.texteditor.SourceViewerDecorationSupport.createAnnotationPainter()', 'java.lang.SecurityManager.getClassContext()', 'java.lang.SecurityManager.currentClassLoader()', 'java.lang.SecurityManager.currentLoadedClass()', 'java.lang.SecurityManager.getSecurityContext()', 'java.lang.SecurityManager.getThreadGroup()', 'org.eclipse.ui.texteditor.MarkerAnnotationPreferences.AccessChecker.getClassContext()', 'org.eclipse.ui.texteditor.MarkerAnnotationPreferences.getAnnotationPreferences()', 'org.eclipse.ui.texteditor.MarkerAnnotationPreferences.getAnnotationPreferenceFragments()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getSharedColors()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createAnnotationAccess()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createContextMenuListener()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createLineNumberRulerColumn()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createChangeHover()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createChangeRulerColumn()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createVerticalRuler()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createCompositeRuler()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createColumnSupport()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getAnnotationAccess()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getAnnotationPreferenceLookup()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getOverviewRuler()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getAnnotationPreferences()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getDocumentProvider()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getOverviewRulerContextMenuId()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.collectContextMenuPreferencePages()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.collectRulerMenuPreferencePages()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.collectOverviewRulerMenuPreferencePages()', 'org.eclipse.ui.texteditor.IDocumentProviderExtension2.getProgressMonitor()', 'org.eclipse.ui.texteditor.ISchedulingRuleProvider.getSchedulingRule()', 'org.eclipse.ui.texteditor.AbstractDocumentProvider.1ResetOperation.getSchedulingRule()', 'org.eclipse.ui.texteditor.AbstractDocumentProvider.1SaveOperation.getSchedulingRule()', 'org.eclipse.ui.texteditor.AbstractDocumentProvider.1SynchronizeOperation.getSchedulingRule()', 'org.eclipse.ui.texteditor.AbstractDocumentProvider.1ValidateStateOperation.getSchedulingRule()', 'org.eclipse.ui.texteditor.AbstractDocumentProvider.getConnectedElements()', 'org.eclipse.ui.texteditor.AbstractDocumentProvider.getProgressMonitor()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.DiffEditorInput.getDocument()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.DiffEditorInput.getName()', 'org.eclipse.jface.preference.PreferenceStore.preferenceNames()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.createLineNumberRulerColumn()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getEditor()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getManagedForm()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getPartControl()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getId()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getTitle()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getShowInContext()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getShowInTargetIds()', 'org.eclipse.jface.text.source.LineNumberRulerColumn.getForeground()', 'org.eclipse.jface.text.source.LineNumberRulerColumn.getControl()', 'org.eclipse.jface.text.source.LineNumberRulerColumn.getParentRuler()', 'org.eclipse.egit.ui.internal.commit.OldNewLogicalLineNumberRulerColumn.getControl()', 'org.eclipse.egit.ui.internal.commit.NotesEditorPage.getCommit()', 'org.eclipse.ui.dialogs.SelectionDialog.getInitialSelections()', 'org.eclipse.ui.dialogs.SelectionDialog.getInitialElementSelections()', 'org.eclipse.ui.dialogs.SelectionDialog.getMessage()', 'org.eclipse.ui.dialogs.SelectionDialog.getOkButton()', 'org.eclipse.ui.dialogs.SelectionDialog.getResult()', 'org.eclipse.ui.dialogs.SelectionDialog.getDialogBoundsSettings()', 'org.eclipse.ui.dialogs.SelectionStatusDialog.getFirstResult()', 'org.eclipse.jface.viewers.StructuredSelection.getFirstElement()', 'org.eclipse.jface.viewers.StructuredSelection.iterator()', 'org.eclipse.jface.viewers.StructuredSelection.toArray()', 'org.eclipse.jface.viewers.StructuredSelection.toList()', 'org.eclipse.jface.viewers.StructuredSelection.toString()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.DetailsContentViewer.getControl()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.DetailsContentViewer.getSelection()', 'org.eclipse.core.runtime.ProgressMonitorWrapper.getWrappedProgressMonitor()', 'org.eclipse.ui.dialogs.SearchPattern.getPattern()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.ItemsFilter.getPattern()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.ItemsListLabelProvider.getSelectionDecorator()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.ItemsListSeparator.getName()', 'java.util.HashSet.iterator()', 'java.util.HashSet.clone()', 'java.util.HashSet.spliterator()', 'java.util.LinkedHashSet.spliterator()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.SelectionHistory.getHistoryItems()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.getDialogBoundsSettings()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.getDialogSettings()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.getInitialPattern()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.getSelectedItems()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.getItemsComparator()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.getPatternControl()', 'org.eclipse.egit.ui.internal.commit.CommitSelectionDialog.getDialogSettings()', 'org.eclipse.egit.ui.internal.commit.CommitSelectionDialog.getItemsComparator()', 'org.eclipse.egit.ui.internal.commit.LogicalLineNumberRulerColumn.getLogicalLineNumberProvider()', 'org.eclipse.egit.ui.internal.push.PushMode.values()', 'org.eclipse.egit.core.op.CommitOperation.getSchedulingRule()', 'org.eclipse.egit.core.op.CommitOperation.getCommit()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.CompareLink.getHyperlinkText()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.FileLink.getHyperlinkText()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.OpenLink.getHyperlinkText()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.RevealLink.getHyperlinkRegion()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.RevealLink.getTypeLabel()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.SingleTokenScanner.nextToken()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.createLayout()', 'org.eclipse.swt.widgets.Sash.windowClass()', 'org.eclipse.swt.custom.SashForm.createSash()', 'org.eclipse.swt.custom.SashForm.getMaximizedControl()', 'org.eclipse.egit.ui.internal.commit.CommitProposalProcessor.CommitFile.getImage()', 'org.eclipse.egit.ui.internal.commit.CommitProposalProcessor.computeFileNameProposals()', 'org.eclipse.egit.ui.internal.commit.CommitProposalProcessor.computeMessageProposals()', 'org.eclipse.egit.ui.internal.commit.CommitProposalProcessor.getErrorMessage()', 'org.eclipse.egit.ui.internal.commit.CommitProposalProcessor.getContextInformationValidator()', 'java.util.regex.MatchResult.group()', 'java.util.regex.Matcher.pattern()', 'java.util.regex.Matcher.toMatchResult()', 'java.util.regex.Matcher.reset()', 'java.util.regex.Matcher.group()', 'java.util.regex.Matcher.toString()', 'java.util.regex.Pattern.1MatcherIterator.next()', 'java.util.regex.Pattern.1MatcherIterator.next()', 'java.util.regex.Pattern.CharPropertyNames.CloneableProperty.clone()', 'java.util.regex.UnicodeProp.values()', 'java.util.regex.Pattern.pattern()', 'java.util.regex.Pattern.toString()', 'java.util.regex.Pattern.namedGroups()', 'java.util.regex.Pattern.asPredicate()', 'org.eclipse.egit.ui.internal.commit.DiffDocument.DiffPartitionTokenScanner.nextToken()', 'org.eclipse.egit.ui.internal.commit.HeaderText.getControl()', 'org.eclipse.egit.ui.internal.dialogs.CancelableFuture.get()', 'org.eclipse.egit.ui.internal.dialogs.CancelableFuture.getJobTitle()', 'org.eclipse.egit.ui.internal.dialogs.CommitSelectDialog.getSelectedCommit()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponentState.getCommitMessage()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponentState.getCommitter()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponentState.getAuthor()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponentState.getHeadCommit()', 'org.eclipse.egit.ui.CommitMessageWithCaretPosition.getMessage()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.CommitStatus.getMessage()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.getCommitMessage()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.getAuthor()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.getCommitter()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.getState()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.getRepository()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.getHeadCommit()', 'org.eclipse.egit.ui.internal.dialogs.GitTraceConfigurationDialog.OptionNode.getOption()', 'org.eclipse.egit.ui.internal.dialogs.GitTraceConfigurationDialog.OptionNode.toString()', 'org.eclipse.egit.ui.internal.dialogs.GitTraceConfigurationDialog.PluginNode.getPlugin()', 'org.eclipse.egit.ui.internal.dialogs.GitTraceConfigurationDialog.PluginNode.toString()', 'org.eclipse.ui.internal.services.IEvaluationResultCache.getExpression()', 'org.eclipse.ui.handlers.IHandlerActivation.getCommandId()', 'org.eclipse.ui.handlers.IHandlerActivation.getHandler()', 'org.eclipse.ui.handlers.IHandlerActivation.getHandlerService()', 'org.eclipse.core.commands.Parameterization.getParameter()', 'org.eclipse.core.commands.Parameterization.getValue()', 'org.eclipse.core.commands.Parameterization.getValueName()', 'org.eclipse.core.commands.ParameterizedCommand.getCommand()', 'org.eclipse.core.commands.ParameterizedCommand.getId()', 'org.eclipse.core.commands.ParameterizedCommand.getName()', 'org.eclipse.core.commands.ParameterizedCommand.getParameterMap()', 'org.eclipse.core.commands.ParameterizedCommand.serialize()', 'org.eclipse.core.commands.ParameterizedCommand.toString()', 'org.eclipse.ui.handlers.IHandlerService.getCurrentState()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.TextEditorPropertyAction.getPreferenceKey()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.TextEditorPropertyAction.getTextViewer()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.TextEditorPropertyAction.getStore()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.getHandlerService()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.getTextWidget()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.getCommitMessage()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.getHyperlinkTargets()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.getDefaultTarget()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.getText()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.getDocument()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageArea.getCommitProposalProcessor()', 'org.eclipse.egit.ui.internal.dialogs.NewRemoteDialog.getName()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageBuilder.build()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageBuilder.getCommitMessageProviders()', 'org.eclipse.egit.ui.internal.dialogs.RenameBranchDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.RenameBranchDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.RenameBranchDialog.getWindowTitle()', 'org.eclipse.egit.ui.internal.dialogs.BranchSelectionDialog.getSelectedNode()', 'org.eclipse.egit.ui.internal.dialogs.BranchSelectionDialog.getSelectedNodes()', 'org.eclipse.egit.ui.internal.dialogs.BranchSelectionAndEditDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.BranchSelectionAndEditDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.BranchSelectionAndEditDialog.getWindowTitle()', 'org.eclipse.egit.ui.internal.components.TitleAndImageDialog.getResourceManager()', 'org.eclipse.jgit.transport.RefSpec.getSource()', 'org.eclipse.jgit.transport.RefSpec.getDestination()', 'org.eclipse.jgit.transport.RefSpec.toString()', 'org.eclipse.egit.ui.internal.dialogs.AbstractConfigureRemoteDialog.getRepository()', 'org.eclipse.egit.ui.internal.dialogs.AbstractConfigureRemoteDialog.getConfig()', 'org.eclipse.egit.ui.internal.dialogs.AbstractConfigureRemoteDialog.getNewRefSpec()', 'org.eclipse.egit.ui.internal.dialogs.CommitDialog.getCommitMessage()', 'org.eclipse.egit.ui.internal.dialogs.CommitDialog.getSelectedFiles()', 'org.eclipse.egit.ui.internal.dialogs.CommitDialog.getAuthor()', 'org.eclipse.egit.ui.internal.dialogs.CommitDialog.getCommitter()', 'org.eclipse.egit.ui.internal.dialogs.CommitDialog.getDialogBoundsSettings()', 'org.eclipse.jface.fieldassist.IContentProposal.getContent()', 'org.eclipse.jface.fieldassist.IContentProposal.getLabel()', 'org.eclipse.jface.fieldassist.IContentProposal.getDescription()', 'org.eclipse.egit.ui.internal.dialogs.CommitCombo.CommitContentProposalProvider.1.getContent()', 'org.eclipse.egit.ui.internal.dialogs.CommitCombo.CommitContentProposalProvider.1.getDescription()', 'org.eclipse.egit.ui.internal.dialogs.CommitCombo.CommitContentProposalProvider.1.getLabel()', 'org.eclipse.egit.ui.internal.dialogs.CommitCombo.getValue()', 'org.eclipse.egit.ui.internal.dialogs.MergeTargetSelectionDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.MergeTargetSelectionDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.CheckoutDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.FileTreeContentProvider.FileNode.getImage()', 'org.eclipse.egit.ui.internal.dialogs.FileTreeContentProvider.FolderNode.getImage()', 'org.eclipse.egit.ui.internal.dialogs.FileTreeContentProvider.NoResourceNode.getImage()', 'org.eclipse.egit.ui.internal.dialogs.FileTreeContentProvider.Node.getImage()', 'org.eclipse.egit.ui.internal.dialogs.FileTreeContentProvider.Node.getName()', 'org.eclipse.egit.ui.internal.dialogs.FileTreeContentProvider.Node.getChildren()', 'org.eclipse.egit.ui.internal.dialogs.FileTreeContentProvider.Node.toString()', 'org.eclipse.jgit.transport.CredentialItem.StringType.getValue()', 'org.eclipse.jgit.transport.CredentialItem.getPromptText()', 'org.eclipse.egit.ui.internal.dialogs.CustomPromptDialog.getCredentialItems()', 'org.eclipse.swt.layout.GridLayout.getName()', 'org.eclipse.swt.layout.GridLayout.toString()', 'org.eclipse.jface.wizard.WizardDialog.getCurrentPage()', 'org.eclipse.jface.wizard.WizardDialog.getProgressMonitor()', 'org.eclipse.jface.wizard.WizardDialog.getWizard()', 'org.eclipse.jface.wizard.WizardDialog.getSelectedPage()', 'org.eclipse.egit.ui.internal.dialogs.CreateTagDialog.getTagCommit()', 'org.eclipse.egit.ui.internal.dialogs.CreateTagDialog.getTagMessage()', 'org.eclipse.egit.ui.internal.dialogs.CreateTagDialog.getTagName()', 'org.eclipse.egit.ui.internal.dialogs.CommitItem.Order.ascending()', 'org.eclipse.egit.ui.internal.dialogs.CommitItem.Order.descending()', 'org.eclipse.egit.ui.internal.dialogs.CommitItem.Status.getText()', 'org.eclipse.egit.ui.internal.dialogs.BranchEditDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.ReplaceTargetSelectionDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.ReplaceTargetSelectionDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.ReplaceTargetSelectionDialog.getWindowTitle()', 'org.eclipse.egit.ui.internal.dialogs.CompareTargetSelectionDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.CompareTargetSelectionDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.CompareTargetSelectionDialog.getWindowTitle()', 'org.eclipse.egit.ui.internal.dialogs.RebaseTargetSelectionDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.RebaseTargetSelectionDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.RebaseTargetSelectionDialog.getWindowTitle()', 'org.eclipse.egit.ui.internal.dialogs.BranchRenameDialog.getNewName()', 'org.eclipse.egit.ui.internal.dialogs.CompareTreeView.ContainerNode.getChildren()', 'org.eclipse.egit.ui.internal.dialogs.CompareTreeView.ContainerNode.getResource()', 'org.eclipse.egit.ui.internal.dialogs.CompareTreeView.FileNode.getFile()', 'org.eclipse.egit.ui.internal.dialogs.CompareTreeView.PathNode.getPath()', 'org.eclipse.egit.ui.internal.dialogs.CompareTreeView.PathNode.getRepoRelativePath()', 'org.eclipse.egit.ui.internal.dialogs.CompareTreeView.PathNode.toString()', 'org.eclipse.egit.ui.internal.dialogs.CompareTreeView.getShowInContext()', 'org.eclipse.egit.ui.internal.dialogs.ResetTargetSelectionDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.ResetTargetSelectionDialog.getWindowTitle()', 'org.eclipse.egit.ui.internal.dialogs.ResetTargetSelectionDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.ResetTargetSelectionDialog.getRefName()', 'org.eclipse.egit.ui.internal.dialogs.NonBlockingWizardDialog.getCurrentPage()', 'org.eclipse.egit.ui.internal.dialogs.DeleteBranchDialog.getMessageText()', 'org.eclipse.egit.ui.internal.dialogs.DeleteBranchDialog.getTitle()', 'org.eclipse.egit.ui.internal.dialogs.DeleteBranchDialog.getWindowTitle()', 'org.eclipse.egit.ui.internal.dialogs.DeleteBranchDialog.refNameFromDialog()', 'org.eclipse.jface.viewers.IDecoration.getDecorationContext()', 'org.eclipse.egit.ui.internal.decorators.DecorationResult.getDecorationContext()', 'org.eclipse.egit.ui.internal.decorators.DecorationResult.getOverlay()', 'org.eclipse.egit.ui.internal.decorators.DecorationResult.getBackgroundColor()', 'org.eclipse.egit.ui.internal.decorators.DecorationResult.getForegroundColor()', 'org.eclipse.egit.ui.internal.decorators.DecorationResult.getFont()', 'org.eclipse.egit.ui.internal.decorators.DecorationResult.getPrefix()', 'org.eclipse.egit.ui.internal.decorators.DecorationResult.getSuffix()', 'org.eclipse.egit.ui.internal.decorators.DecoratableWorkingSet.getName()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getAdded()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getAssumeUnchanged()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getChanged()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getRemoved()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getMissing()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getModified()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getUntracked()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getUntrackedFolders()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getConflicting()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getIgnoredNotInIndex()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getSymlinks()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getSubmodules()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.getChangedResources()', 'org.eclipse.egit.core.internal.indexdiff.IndexDiffData.toString()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResourceAdapter.toString()', 'org.eclipse.ui.texteditor.quickdiff.IQuickDiffReferenceProvider.getId()', 'org.eclipse.egit.ui.internal.decorators.GitQuickDiffProvider.getId()', 'org.eclipse.egit.ui.internal.decorators.GitLightweightDecorator.DecorationHelper.CachedImageDescriptor.getImageData()', 'org.eclipse.egit.ui.internal.decorators.GitLightweightDecorator.getName()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResourceMapping.getName()', 'org.eclipse.egit.ui.internal.rebase.CommitMessageEditorDialog.getDialogBoundsSettings()', 'org.eclipse.egit.ui.internal.rebase.CommitMessageEditorDialog.getCommitMessage()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractiveHandler.values()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.JoinedList.RelativeIndex.getList()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.JoinedList.getFirstList()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.JoinedList.getSecondList()', 'org.eclipse.jgit.lib.RebaseTodoLine.Action.toToken()', 'org.eclipse.jgit.lib.RebaseTodoLine.Action.toString()', 'org.eclipse.jgit.lib.RebaseTodoLine.getCommit()', 'org.eclipse.jgit.lib.RebaseTodoLine.getShortMessage()', 'org.eclipse.jgit.lib.RebaseTodoLine.getComment()', 'org.eclipse.jgit.lib.RebaseTodoLine.toString()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getCommit()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getShortMessage()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getAuthor()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getCommitter()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.toString()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getRepository()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getObjectId()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getRevCommit()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.getList()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.getRepository()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractiveView.getCurrentPlan()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractivePlanContentProvider.values()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractiveStepActionToolBarProvider.getTheToolbar()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractiveStepActionToolBarProvider.getSelectedRebaseTodoLines()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractiveStepActionToolBarProvider.getActionAccelerators()', 'org.eclipse.egit.ui.internal.stash.StashCreateUI.StashCreateDialog.getValue()', 'org.eclipse.egit.ui.internal.push.PushTagsPage.getSelectedRemoteConfig()', 'org.eclipse.egit.ui.internal.push.PushTagsPage.getSelectedTags()', 'org.eclipse.egit.ui.internal.components.RepositorySelectionPage.Protocol.getDefaultScheme()', 'org.eclipse.egit.ui.internal.components.RepositorySelectionPage.Protocol.getTooltip()', 'org.eclipse.egit.ui.internal.components.RepositorySelectionPage.getSelection()', 'org.eclipse.egit.ui.internal.components.RepositorySelectionPage.getCredentials()', 'org.eclipse.egit.ui.internal.components.RepositorySelectionPage.getGitRepositoryInfo()', 'org.eclipse.egit.ui.internal.push.AddRemotePage.getRemoteName()', 'org.eclipse.egit.ui.internal.components.AsynchronousListOperation.getJobTitle()', 'org.eclipse.egit.ui.internal.push.PushBranchPage.getAddRemotePage()', 'org.eclipse.egit.ui.internal.push.PushBranchPage.getRemoteConfig()', 'org.eclipse.egit.ui.internal.push.PushBranchPage.getFullRemoteReference()', 'org.eclipse.egit.ui.internal.push.PushBranchWizard.getWindowTitle()', 'org.eclipse.jgit.transport.TrackingRefUpdate.getRemoteName()', 'org.eclipse.jgit.transport.TrackingRefUpdate.getLocalName()', 'org.eclipse.jgit.transport.TrackingRefUpdate.getNewObjectId()', 'org.eclipse.jgit.transport.TrackingRefUpdate.getOldObjectId()', 'org.eclipse.jgit.transport.TrackingRefUpdate.asReceiveCommand()', 'org.eclipse.jgit.transport.TrackingRefUpdate.toString()', 'org.eclipse.jgit.transport.OperationResult.getURI()', 'org.eclipse.jgit.transport.OperationResult.getAdvertisedRefs()', 'org.eclipse.jgit.transport.OperationResult.getTrackingRefUpdates()', 'org.eclipse.jgit.transport.OperationResult.getMessages()', 'org.eclipse.jgit.transport.OperationResult.getPeerUserAgent()', 'org.eclipse.jgit.transport.RemoteRefUpdate.getExpectedOldObjectId()', 'org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId()', 'org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName()', 'org.eclipse.jgit.transport.RemoteRefUpdate.getTrackingRefUpdate()', 'org.eclipse.jgit.transport.RemoteRefUpdate.getSrcRef()', 'org.eclipse.jgit.transport.RemoteRefUpdate.getMessage()', 'org.eclipse.jgit.transport.RemoteRefUpdate.toString()', 'org.eclipse.jgit.transport.PushResult.getRemoteUpdates()', 'org.eclipse.egit.core.op.PushOperationSpecification.getURIs()', 'org.eclipse.egit.core.op.PushOperationResult.Entry.getErrorMessage()', 'org.eclipse.egit.core.op.PushOperationResult.Entry.getResult()', 'org.eclipse.egit.core.op.PushOperationResult.getURIs()', 'org.eclipse.egit.core.op.PushOperationResult.getErrorStringForAllURis()', 'org.eclipse.egit.ui.internal.push.PushOperationUI.getDestinationString()', 'org.eclipse.egit.ui.internal.push.PushTagsWizard.getWindowTitle()', 'org.eclipse.egit.ui.internal.push.PushResultDialog.getDialogBoundsSettings()', 'org.eclipse.egit.ui.internal.push.RefSpecWizard.getStartingPage()', 'org.eclipse.egit.ui.internal.jobs.RepositoryJob.getAction()', 'org.eclipse.egit.ui.internal.jobs.RepositoryJob.getDeferredStatus()', 'org.eclipse.jgit.transport.CredentialsProvider.getDefault()', 'org.eclipse.egit.core.op.PushOperation.getCredentialsProvider()', 'org.eclipse.egit.core.op.PushOperation.getOperationResult()', 'org.eclipse.egit.core.op.PushOperation.getSpecification()', 'org.eclipse.egit.ui.internal.push.PushJob.getAction()', 'org.eclipse.egit.ui.internal.push.PushJob.getDeferredStatus()', 'org.eclipse.egit.ui.internal.push.PushResultTable.getControl()', 'org.eclipse.egit.ui.internal.push.PushWizard.getWindowTitle()', 'org.eclipse.egit.ui.internal.push.RefSpecDialog.getSpec()', 'org.eclipse.egit.ui.internal.push.PushToGerritPage.getDialogSettings()', 'org.eclipse.egit.ui.internal.push.ConfirmationPage.getConfirmedResult()', 'org.eclipse.egit.ui.internal.push.AddRemoteWizard.getRepositorySelection()', 'org.eclipse.egit.ui.internal.push.AddRemoteWizard.getAddRemotePage()', 'org.eclipse.egit.ui.internal.push.AddRemoteWizard.getUri()', 'org.eclipse.egit.ui.internal.push.AddRemoteWizard.getRemoteName()', 'org.eclipse.egit.ui.internal.push.SimpleConfigurePushDialog.getNewRefSpec()', 'org.eclipse.egit.ui.internal.push.RefUpdateElement.getUri()', 'org.eclipse.egit.ui.internal.push.RefUpdateElement.getSrcRefName()', 'org.eclipse.egit.ui.internal.push.RefUpdateElement.getDstRefName()', 'org.eclipse.egit.ui.internal.push.RefUpdateElement.getPushOperationResult()', 'org.eclipse.egit.ui.internal.push.RefUpdateElement.getErrorMessage()', 'org.eclipse.egit.ui.internal.push.RefUpdateElement.getRemoteRefUpdate()', 'org.eclipse.egit.ui.internal.push.RefUpdateElement.getAdvertisedRemoteRef()', 'org.eclipse.egit.ui.internal.fetch.SimpleFetchRefSpecWizard.getSpec()', 'org.eclipse.egit.ui.internal.fetch.FetchSourcePage.getSource()', 'org.eclipse.egit.ui.internal.fetch.FetchWizard.getWindowTitle()', 'org.eclipse.jgit.transport.FetchResult.submoduleResults()', 'org.eclipse.egit.ui.internal.fetch.FetchOperationUI.getSourceString()', 'org.eclipse.egit.ui.internal.fetch.SimpleConfigureFetchDialog.getNewRefSpec()', 'org.eclipse.egit.core.op.FetchOperationResult.getURI()', 'org.eclipse.egit.core.op.FetchOperationResult.getFetchResult()', 'org.eclipse.egit.core.op.FetchOperationResult.getErrorMessage()', 'org.eclipse.egit.ui.internal.fetch.FetchResultDialog.getDialogBoundsSettings()', 'org.eclipse.jgit.events.RepositoryEvent.getRepository()', 'org.eclipse.jgit.events.RepositoryEvent.getListenerType()', 'org.eclipse.jgit.events.RepositoryEvent.toString()', 'org.eclipse.jgit.events.RefsChangedEvent.getListenerType()', 'org.eclipse.egit.ui.internal.fetch.FetchDestinationPage.getDestination()', 'org.eclipse.egit.ui.internal.fetch.FetchResultTable.getControl()', 'org.eclipse.egit.ui.internal.fetch.FetchGerritChangePage.Change.getRefName()', 'org.eclipse.egit.ui.internal.fetch.FetchGerritChangePage.Change.toString()', 'org.eclipse.egit.ui.internal.fetch.FetchGerritChangePage.ChangeContentProposal.getContent()', 'org.eclipse.egit.ui.internal.fetch.FetchGerritChangePage.ChangeContentProposal.getDescription()', 'org.eclipse.egit.ui.internal.fetch.FetchGerritChangePage.ChangeContentProposal.getLabel()', 'org.eclipse.egit.ui.internal.fetch.FetchGerritChangePage.ChangeContentProposal.toString()', 'org.eclipse.egit.ui.internal.fetch.FetchGerritChangePage.getDialogSettings()', 'org.eclipse.egit.ui.internal.pull.PullWizardPage.getFullRemoteReference()', 'org.eclipse.egit.ui.internal.pull.PullWizardPage.getRemoteConfig()', 'org.eclipse.jgit.merge.Merger.getRepository()', 'org.eclipse.jgit.merge.Merger.nonNullRepo()', 'org.eclipse.jgit.merge.Merger.getObjectInserter()', 'org.eclipse.jgit.merge.Merger.getBaseCommitId()', 'org.eclipse.jgit.merge.Merger.getResultTreeId()', 'org.eclipse.jgit.merge.MergeStrategy.get()', 'org.eclipse.jgit.merge.MergeStrategy.getName()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.1.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.10.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.11.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.12.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.2.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.3.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.4.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.5.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.6.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.7.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.8.toString()', 'org.eclipse.jgit.api.MergeResult.MergeStatus.9.toString()', 'org.eclipse.jgit.api.MergeResult.getNewHead()', 'org.eclipse.jgit.api.MergeResult.getMergedCommits()', 'org.eclipse.jgit.api.MergeResult.getBase()', 'org.eclipse.jgit.api.MergeResult.toString()', 'org.eclipse.jgit.api.MergeResult.getConflicts()', 'org.eclipse.jgit.api.MergeResult.getFailingPaths()', 'org.eclipse.jgit.api.MergeResult.getCheckoutConflicts()', 'org.eclipse.jgit.api.PullResult.getFetchResult()', 'org.eclipse.jgit.api.PullResult.getMergeResult()', 'org.eclipse.jgit.api.PullResult.getRebaseResult()', 'org.eclipse.jgit.api.PullResult.getFetchedFrom()', 'org.eclipse.jgit.api.PullResult.toString()', 'org.eclipse.egit.ui.internal.pull.PullResultDialog.getDialogBoundsSettings()', 'org.eclipse.egit.ui.internal.pull.PullResultDialog.getInitialSize()', 'org.eclipse.egit.ui.internal.clean.CleanRepositoryPage.getItemsToClean()', 'org.eclipse.egit.ui.internal.commands.ProjectNameParameterValues.getParameterValues()', 'org.eclipse.egit.ui.internal.submodule.AddSubmoduleWizard.getPath()', 'org.eclipse.egit.ui.internal.submodule.AddSubmoduleWizard.getUri()', 'org.eclipse.egit.ui.internal.submodule.SubmodulePathWizardPage.getPath()', 'org.eclipse.jface.text.IInformationControlExtension3.getBounds()', 'org.eclipse.jface.text.IInformationControlExtension3.computeTrim()', 'org.eclipse.jface.text.IInformationControlExtension5.getInformationPresenterControlCreator()', 'org.eclipse.jface.action.ToolBarManager.getControl()', 'org.eclipse.jface.action.ToolBarManager.getContextMenuManager()', 'org.eclipse.jface.text.AbstractInformationControl.getShell()', 'org.eclipse.jface.text.AbstractInformationControl.getToolBarManager()', 'org.eclipse.jface.text.AbstractInformationControl.getSizeConstraints()', 'org.eclipse.jface.text.AbstractInformationControl.computeSizeHint()', 'org.eclipse.jface.text.AbstractInformationControl.computeTrim()', 'org.eclipse.jface.text.AbstractInformationControl.getBounds()', 'org.eclipse.jface.text.AbstractInformationControl.getInformationPresenterControlCreator()', 'org.eclipse.egit.ui.internal.blame.BlameInformationControl.getInformationPresenterControlCreator()', 'org.eclipse.egit.ui.internal.blame.BlameInformationControl.computeSizeHint()', 'org.eclipse.jface.text.revisions.Revision.getRegions()', 'org.eclipse.jface.text.revisions.Revision.getHoverInfo()', 'org.eclipse.jface.text.revisions.Revision.getColor()', 'org.eclipse.jface.text.revisions.Revision.getId()', 'org.eclipse.jface.text.revisions.Revision.getDate()', 'org.eclipse.jface.text.revisions.Revision.toString()', 'org.eclipse.jface.text.revisions.Revision.getAuthor()', 'org.eclipse.jgit.util.IntList.toString()', 'org.eclipse.jgit.diff.RawText.getLineDelimiter()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.Diff.getOldPath()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.Diff.getOldText()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.Diff.getNewText()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.Diff.getEditList()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.getHoverInfo()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.getColor()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.getId()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.getDate()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.register()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.addLine()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.getCommit()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.getRepository()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.getAuthor()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.getSourcePath()', 'org.eclipse.egit.ui.internal.blame.AuthorColors.getDefault()', 'org.eclipse.egit.core.internal.storage.GitFileRevision.getName()', 'org.eclipse.egit.core.internal.storage.GitFileRevision.getRepository()', 'org.eclipse.egit.core.internal.storage.GitFileRevision.getURI()', 'org.eclipse.egit.core.internal.storage.OpenWorkspaceVersionEnabled.getRepository()', 'org.eclipse.egit.core.internal.storage.OpenWorkspaceVersionEnabled.getGitPath()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.getRepository()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.getGitPath()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.getContentIdentifier()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.getAuthor()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.getComment()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.toString()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.getTags()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.getRevCommit()', 'org.eclipse.egit.ui.internal.blame.BlameOperation.getSchedulingRule()', 'org.eclipse.egit.ui.internal.sharing.ExistingOrNewPage.ProjectAndRepo.getProject()', 'org.eclipse.egit.ui.internal.sharing.ExistingOrNewPage.ProjectAndRepo.getRepo()', 'org.eclipse.egit.ui.internal.sharing.ExistingOrNewPage.getSelectedRepository()', 'java.nio.file.FileVisitResult.values()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.getAbsolutePath()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.getRepository()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileSystemItem.getAbsolutePath()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileSystemItem.getRepository()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.ResourceItem.getAbsolutePath()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.ResourceItem.getRepository()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.getInstance()', 'org.eclipse.egit.ui.internal.merge.MergeResultDialog.getDialogBoundsSettings()', 'org.eclipse.compare.ICompareContainer.getActionBars()', 'org.eclipse.compare.ICompareContainer.getServiceLocator()', 'org.eclipse.compare.ICompareContainer.getNavigator()', 'org.eclipse.compare.ICompareContainer.getWorkbenchPart()', 'org.eclipse.compare.CompareConfiguration.getPreferenceStore()', 'org.eclipse.compare.CompareConfiguration.getContainer()', 'org.eclipse.compare.CompareConfiguration.getLabelProvider()', 'org.eclipse.swt.custom.ViewForm.getClientArea()', 'org.eclipse.swt.custom.ViewForm.getContent()', 'org.eclipse.swt.custom.ViewForm.getTopCenter()', 'org.eclipse.swt.custom.ViewForm.getTopLeft()', 'org.eclipse.swt.custom.ViewForm.getTopRight()', 'org.eclipse.compare.CompareViewerPane.getInput()', 'org.eclipse.compare.CompareViewerPane.getSelection()', 'org.eclipse.compare.CompareViewerSwitchingPane.getViewer()', 'org.eclipse.compare.CompareViewerSwitchingPane.getTitleArgument()', 'org.eclipse.compare.CompareViewerSwitchingPane.getSelection()', 'org.eclipse.compare.internal.ViewerDescriptor.getExtension()', 'org.eclipse.compare.internal.ViewerDescriptor.getLabel()', 'org.eclipse.compare.internal.OutlineViewerCreator.getInput()', 'org.eclipse.compare.CompareEditorInput.InternalOutlineViewerCreator.getInput()', 'org.eclipse.compare.CompareEditorInput.getNavigator()', 'org.eclipse.compare.CompareEditorInput.getImageDescriptor()', 'org.eclipse.compare.CompareEditorInput.getToolTipText()', 'org.eclipse.compare.CompareEditorInput.getName()', 'org.eclipse.compare.CompareEditorInput.getPersistable()', 'org.eclipse.compare.CompareEditorInput.getMessage()', 'org.eclipse.compare.CompareEditorInput.getTitle()', 'org.eclipse.compare.CompareEditorInput.getTitleImage()', 'org.eclipse.compare.CompareEditorInput.getCompareConfiguration()', 'org.eclipse.compare.CompareEditorInput.getCompareResult()', 'org.eclipse.compare.CompareEditorInput.getContentViewerDescriptor()', 'org.eclipse.compare.CompareEditorInput.getStructureViewerDescriptor()', 'org.eclipse.compare.CompareEditorInput.getActionBars()', 'org.eclipse.compare.CompareEditorInput.getServiceLocator()', 'org.eclipse.compare.CompareEditorInput.getWorkbenchPart()', 'org.eclipse.compare.CompareEditorInput.getContainer()', 'org.eclipse.compare.CompareEditorInput.getOKButtonLabel()', 'org.eclipse.compare.CompareEditorInput.getCancelButtonLabel()', 'org.eclipse.compare.CompareEditorInput.getSelectedEdition()', 'org.eclipse.ui.ISourceProvider.getCurrentState()', 'org.eclipse.ui.ISourceProvider.getProvidedSourceNames()', 'org.eclipse.egit.ui.internal.selection.RepositorySourceProvider.getCurrentState()', 'org.eclipse.egit.ui.internal.selection.RepositorySourceProvider.getProvidedSourceNames()', 'java.util.concurrent.CopyOnWriteArrayList.COWIterator.next()', 'java.util.concurrent.CopyOnWriteArrayList.COWIterator.previous()', 'java.util.concurrent.CopyOnWriteArrayList.COWSubList.iterator()', 'java.util.concurrent.CopyOnWriteArrayList.COWSubList.spliterator()', 'java.util.concurrent.CopyOnWriteArrayList.COWSubListIterator.next()', 'java.util.concurrent.CopyOnWriteArrayList.COWSubListIterator.previous()', 'java.util.concurrent.CopyOnWriteArrayList.getArray()', 'java.util.concurrent.CopyOnWriteArrayList.clone()', 'java.util.concurrent.CopyOnWriteArrayList.toArray()', 'java.util.concurrent.CopyOnWriteArrayList.toString()', 'java.util.concurrent.CopyOnWriteArrayList.iterator()', 'java.util.concurrent.CopyOnWriteArrayList.listIterator()', 'java.util.concurrent.CopyOnWriteArrayList.spliterator()', 'org.eclipse.egit.ui.internal.selection.AbstractSelectionProvider.getSelectionListeners()', 'org.eclipse.egit.ui.internal.selection.AbstractSelectionProvider.getPostSelectionListeners()', 'org.eclipse.egit.ui.internal.selection.RepositorySelectionProvider.getSelection()', 'org.eclipse.egit.ui.internal.selection.MultiViewerSelectionProvider.getSelection()', 'org.eclipse.jface.viewers.AbstractListViewer.getLabelProvider()', 'org.eclipse.jface.viewers.AbstractListViewer.getSelectionFromWidget()', 'org.eclipse.swt.custom.CCombo.getAssociatedLabel()', 'org.eclipse.swt.custom.CCombo.getChildren()', 'org.eclipse.swt.custom.CCombo.getItems()', 'org.eclipse.swt.custom.CCombo.getMenu()', 'org.eclipse.swt.custom.CCombo.getSelection()', 'org.eclipse.swt.custom.CCombo.getShell()', 'org.eclipse.swt.custom.CCombo.getText()', 'org.eclipse.swt.widgets.Combo.getCaretLocation()', 'org.eclipse.swt.widgets.Combo.getCaretLocationInPixels()', 'org.eclipse.swt.widgets.Combo.getItems()', 'org.eclipse.swt.widgets.Combo.getNameText()', 'org.eclipse.swt.widgets.Combo.getSelection()', 'org.eclipse.swt.widgets.Combo.getText()', 'org.eclipse.swt.widgets.Combo.windowClass()', 'org.eclipse.jface.viewers.ComboViewer.getControl()', 'org.eclipse.jface.viewers.ComboViewer.getCCombo()', 'org.eclipse.jface.viewers.ComboViewer.getCombo()', 'org.eclipse.egit.ui.internal.components.BranchRebaseModeCombo.getLabel()', 'org.eclipse.egit.ui.internal.components.BranchRebaseModeCombo.getViewer()', 'org.eclipse.egit.ui.internal.components.UpstreamConfigComponent.getContainer()', 'org.eclipse.egit.ui.internal.components.RefSpecPage.getRefSpecs()', 'org.eclipse.egit.ui.internal.components.RefSpecPage.getTagOpt()', 'org.eclipse.egit.ui.internal.components.AsynchronousRefProposalProvider.getCandidates()', 'org.eclipse.egit.ui.internal.components.RepositoryMenuUtil.RepositoryToolbarAction.getMenuCreator()', 'org.eclipse.egit.ui.internal.components.RefSpecPanel.getControl()', 'org.eclipse.egit.ui.internal.components.RefSpecPanel.getRefSpecs()', 'org.eclipse.egit.ui.internal.components.RefSpecPanel.getErrorMessage()', 'org.eclipse.egit.ui.internal.components.RefContentAssistProvider.getRepository()', 'org.eclipse.egit.ui.internal.components.RefContentAssistProvider.getRemoteURI()', 'org.eclipse.egit.ui.internal.components.ComboLabelingSupport.getContent()', 'org.eclipse.egit.ui.internal.components.RefContentProposal.getContent()', 'org.eclipse.egit.ui.internal.components.RefContentProposal.getDescription()', 'org.eclipse.egit.ui.internal.components.RefContentProposal.getLabel()', 'org.eclipse.jface.viewers.CheckboxTreeViewer.getCheckedElements()', 'org.eclipse.jface.viewers.CheckboxTreeViewer.getGrayedElements()', 'org.eclipse.ui.dialogs.ContainerCheckedTreeViewer.getCheckedElements()', 'org.eclipse.egit.ui.internal.components.CachedCheckboxTreeViewer.getCheckedLeafElements()', 'org.eclipse.ui.dialogs.FilteredTree.doCreateRefreshJob()', 'org.eclipse.ui.dialogs.FilteredTree.getPatternFilter()', 'org.eclipse.ui.dialogs.FilteredTree.getViewer()', 'org.eclipse.ui.dialogs.FilteredTree.getFilterControl()', 'org.eclipse.ui.dialogs.FilteredTree.getFilterString()', 'org.eclipse.ui.dialogs.FilteredTree.getInitialText()', 'org.eclipse.egit.ui.internal.components.FilteredCheckboxTree.doCreateRefreshJob()', 'org.eclipse.egit.ui.internal.components.FilteredCheckboxTree.getFilterString()', 'org.eclipse.egit.ui.internal.components.FilteredCheckboxTree.getCheckboxTreeViewer()', 'org.eclipse.egit.ui.internal.components.RemoteSelectionCombo.getSelectedRemote()', 'org.eclipse.egit.ui.internal.components.ClickableCellEditor.doGetValue()', 'org.eclipse.egit.ui.internal.provisional.wizards.RepositoryServerInfo.getLabel()', 'org.eclipse.egit.ui.internal.provisional.wizards.RepositoryServerInfo.getUri()', 'org.eclipse.egit.ui.internal.provisional.wizards.RepositoryServerInfo.getCredentials()', 'org.eclipse.search.ui.ISearchQuery.getLabel()', 'org.eclipse.search.ui.ISearchQuery.getSearchResult()', 'org.eclipse.search.ui.ISearchResult.getLabel()', 'org.eclipse.search.ui.ISearchResult.getTooltip()', 'org.eclipse.search.ui.ISearchResult.getImageDescriptor()', 'org.eclipse.search.ui.ISearchResult.getQuery()', 'org.eclipse.search.ui.text.Match.getElement()', 'org.eclipse.search.ui.text.MatchFilter.getName()', 'org.eclipse.search.ui.text.MatchFilter.getDescription()', 'org.eclipse.search.ui.text.MatchFilter.getActionLabel()', 'org.eclipse.search.ui.text.MatchFilter.getID()', 'org.eclipse.search.ui.text.AbstractTextSearchResult.getElements()', 'org.eclipse.search.ui.text.AbstractTextSearchResult.getActiveMatchFilters()', 'org.eclipse.search.ui.text.AbstractTextSearchResult.getAllMatchFilters()', 'org.eclipse.search.ui.text.AbstractTextSearchResult.getEditorMatchAdapter()', 'org.eclipse.search.ui.text.AbstractTextSearchResult.getFileMatchAdapter()', 'org.eclipse.egit.ui.internal.search.CommitSearchResult.getLabel()', 'org.eclipse.egit.ui.internal.search.CommitSearchResult.getTooltip()', 'org.eclipse.egit.ui.internal.search.CommitSearchResult.getImageDescriptor()', 'org.eclipse.egit.ui.internal.search.CommitSearchResult.getQuery()', 'org.eclipse.egit.ui.internal.search.CommitSearchResult.getEditorMatchAdapter()', 'org.eclipse.egit.ui.internal.search.CommitSearchResult.getFileMatchAdapter()', 'org.eclipse.egit.ui.internal.search.CommitMatch.getCommit()', 'org.eclipse.ui.model.WorkbenchLabelProvider.getDecoratingWorkbenchLabelProvider()', 'org.eclipse.egit.ui.internal.search.CommitSearchSettings.getRepositories()', 'org.eclipse.egit.ui.internal.search.CommitSearchSettings.getTextPattern()', 'org.eclipse.egit.ui.internal.search.CommitSearchQuery.getPattern()', 'org.eclipse.egit.ui.internal.search.CommitSearchQuery.getLabel()', 'org.eclipse.egit.ui.internal.search.CommitSearchQuery.getSearchResult()', 'org.eclipse.egit.ui.internal.search.RepositoryMatch.getRepository()', 'org.eclipse.search.ui.ISearchResultPage.getUIState()', 'org.eclipse.search.ui.ISearchResultPage.getID()', 'org.eclipse.search.ui.ISearchResultPage.getLabel()', 'org.eclipse.search.ui.ISearchResultViewPart.getActivePage()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.SelectionProviderAdapter.getSelection()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getSettings()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getID()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getLabel()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getControl()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getUIState()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getViewer()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getInput()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getCurrentMatch()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.getViewPart()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceSaveableComparison.getName()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceSaveableComparison.getToolTipText()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceSaveableComparison.getImageDescriptor()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceSaveableComparison.getInput()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.getCompareInput()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.getSaveable()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.createSaveable()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.getActiveSaveables()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.getSaveables()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.getTitleImage()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.getImageDescriptor()', 'org.eclipse.egit.ui.internal.revision.StorageTypedElement.getContents()', 'org.eclipse.egit.ui.internal.revision.StorageTypedElement.getBufferedStorage()', 'org.eclipse.egit.ui.internal.revision.StorageTypedElement.getImage()', 'org.eclipse.egit.ui.internal.revision.StorageTypedElement.getType()', 'org.eclipse.egit.ui.internal.revision.StorageTypedElement.getCharset()', 'org.eclipse.egit.ui.internal.revision.StorageTypedElement.getLocalEncoding()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getName()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getContentIdentifier()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getTimestamp()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getFileRevision()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getPath()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getAuthor()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getRevision()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getCharset()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getImage()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getContents()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getType()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getLocalEncoding()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getBufferedStorage()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.EmptyTypedElement.getImage()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.EmptyTypedElement.getName()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.EmptyTypedElement.getType()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.getRightRevision()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.getLeftRevision()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.getAncestorRevision()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.getToolTipText()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.getTitle()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.createSaveable()', 'org.eclipse.egit.ui.internal.revision.EditableRevision.getContents()', 'org.eclipse.egit.ui.internal.revision.EditableRevision.getCharset()', 'org.eclipse.egit.ui.internal.revision.EditableRevision.getImage()', 'org.eclipse.egit.ui.internal.revision.EditableRevision.getType()', 'org.eclipse.egit.ui.internal.revision.EditableRevision.getBufferedStorage()', 'org.eclipse.egit.ui.internal.revision.EditableRevision.getLocalEncoding()', 'org.eclipse.compare.structuremergeviewer.DiffElement.getImage()', 'org.eclipse.compare.structuremergeviewer.DiffElement.getType()', 'org.eclipse.compare.structuremergeviewer.DiffElement.getParent()', 'org.eclipse.compare.structuremergeviewer.DiffContainer.getChildren()', 'org.eclipse.compare.structuremergeviewer.DiffNode.getId()', 'org.eclipse.compare.structuremergeviewer.DiffNode.getName()', 'org.eclipse.compare.structuremergeviewer.DiffNode.getImage()', 'org.eclipse.compare.structuremergeviewer.DiffNode.getType()', 'org.eclipse.compare.structuremergeviewer.DiffNode.getAncestor()', 'org.eclipse.compare.structuremergeviewer.DiffNode.getLeft()', 'org.eclipse.compare.structuremergeviewer.DiffNode.getRight()', 'org.eclipse.ui.IStorageEditorInput.getStorage()', 'org.eclipse.ui.IPathEditorInput.getPath()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getStorage()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getImageDescriptor()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getName()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getPersistable()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getToolTipText()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getFileRevision()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getURI()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getPath()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getContentIdentifier()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getAuthor()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getComment()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getTags()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getName()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getURI()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getFile()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getState()', 'org.eclipse.egit.ui.internal.revision.ResourceEditableRevision.getFile()', 'org.eclipse.egit.ui.internal.revision.ResourceEditableRevision.getCharset()', 'org.eclipse.egit.ui.internal.revision.ResourceEditableRevision.getImage()', 'org.eclipse.egit.ui.internal.revision.ResourceEditableRevision.getType()', 'org.eclipse.egit.ui.internal.revision.ResourceEditableRevision.getBufferedStorage()', 'org.eclipse.egit.ui.internal.revision.ResourceEditableRevision.getLocalEncoding()', 'org.eclipse.egit.ui.internal.revision.LocationEditableRevision.getCharset()', 'org.eclipse.egit.ui.internal.revision.LocationEditableRevision.getImage()', 'org.eclipse.egit.ui.internal.revision.LocationEditableRevision.getType()', 'org.eclipse.egit.ui.internal.revision.LocationEditableRevision.getBufferedStorage()', 'org.eclipse.egit.ui.internal.revision.LocationEditableRevision.getLocalEncoding()', 'org.eclipse.egit.ui.internal.gerrit.GerritConfigurationPage.getURI()', 'org.eclipse.egit.ui.internal.gerrit.GerritConfigurationPage.getBranch()', 'org.eclipse.egit.ui.internal.gerrit.GerritSelectRepositoryPage.getInitialRepositories()', 'org.eclipse.core.runtime.IAdapterFactory.getAdapterList()', 'org.eclipse.egit.ui.internal.factories.GitAdapterFactory.getAdapterList()', 'org.eclipse.egit.ui.internal.staging.StagingEntryAdapterFactory.getAdapterList()', 'org.eclipse.egit.ui.internal.staging.StagingFolderEntry.getContainer()', 'org.eclipse.egit.ui.internal.staging.StagingFolderEntry.getPath()', 'org.eclipse.egit.ui.internal.staging.StagingFolderEntry.getLocation()', 'org.eclipse.egit.ui.internal.staging.StagingFolderEntry.getNodePath()', 'org.eclipse.egit.ui.internal.staging.StagingFolderEntry.getParent()', 'org.eclipse.egit.ui.internal.staging.StagingFolderEntry.getChildren()', 'org.eclipse.egit.ui.internal.staging.StagingFolderEntry.toString()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.State.getAvailableActions()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getPath()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getParentPath()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getRepository()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getAvailableActions()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getFile()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getLocation()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getParent()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getName()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getRepositoryName()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getBranch()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getBranchStatus()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.getCommitMessage()', 'org.eclipse.egit.ui.internal.staging.StagingEntry.toString()', 'org.eclipse.egit.ui.internal.staging.StagingView.StagingDragSelection.getFirstElement()', 'org.eclipse.egit.ui.internal.staging.StagingView.StagingDragSelection.iterator()', 'org.eclipse.egit.ui.internal.staging.StagingView.StagingDragSelection.toArray()', 'org.eclipse.egit.ui.internal.staging.StagingView.StagingDragSelection.toList()', 'org.eclipse.egit.ui.internal.staging.StagingView.TreeDecoratingLabelProvider.getLabelProvider()', 'org.eclipse.egit.ui.internal.staging.StagingView.getCurrentRepository()', 'org.eclipse.egit.ui.internal.staging.StagingView.getShowInContext()', 'org.eclipse.egit.ui.internal.staging.StagingView.getFilterPattern()', 'org.eclipse.egit.ui.internal.staging.StagingViewContentProvider.getTreePresentationRoots()', 'org.eclipse.egit.ui.internal.staging.StagingViewContentProvider.getStagingEntries()', 'org.eclipse.egit.ui.internal.trace.ITraceLocation.getLocation()', 'org.eclipse.egit.ui.internal.trace.GitTraceLocation.getTrace()', 'org.eclipse.egit.ui.internal.trace.GitTraceLocation.getLocation()', 'org.eclipse.egit.ui.internal.trace.GitTraceLocation.values()', 'org.eclipse.debug.core.ILaunchConfigurationWorkingCopy.doSave()', 'org.eclipse.debug.core.ILaunchConfigurationWorkingCopy.getOriginal()', 'org.eclipse.debug.core.ILaunchConfigurationWorkingCopy.getParent()', 'org.eclipse.debug.core.model.IDebugElement.getModelIdentifier()', 'org.eclipse.debug.core.model.IDebugElement.getDebugTarget()', 'org.eclipse.debug.core.model.IDebugElement.getLaunch()', 'org.eclipse.debug.core.model.IStreamMonitor.getContents()', 'org.eclipse.debug.core.model.IStreamsProxy.getErrorStreamMonitor()', 'org.eclipse.debug.core.model.IStreamsProxy.getOutputStreamMonitor()', 'org.eclipse.debug.core.model.IProcess.getLabel()', 'org.eclipse.debug.core.model.IProcess.getLaunch()', 'org.eclipse.debug.core.model.IProcess.getStreamsProxy()', 'org.eclipse.debug.core.model.IValue.getReferenceTypeName()', 'org.eclipse.debug.core.model.IValue.getValueString()', 'org.eclipse.debug.core.model.IValue.getVariables()', 'org.eclipse.debug.core.model.IVariable.getValue()', 'org.eclipse.debug.core.model.IVariable.getName()', 'org.eclipse.debug.core.model.IVariable.getReferenceTypeName()', 'org.eclipse.debug.core.model.IRegister.getRegisterGroup()', 'org.eclipse.debug.core.model.IRegisterGroup.getName()', 'org.eclipse.debug.core.model.IRegisterGroup.getRegisters()', 'org.eclipse.debug.core.model.IStackFrame.getThread()', 'org.eclipse.debug.core.model.IStackFrame.getVariables()', 'org.eclipse.debug.core.model.IStackFrame.getName()', 'org.eclipse.debug.core.model.IStackFrame.getRegisterGroups()', 'org.eclipse.debug.core.model.IBreakpoint.getMarker()', 'org.eclipse.debug.core.model.IBreakpoint.getModelIdentifier()', 'org.eclipse.debug.core.model.IThread.getStackFrames()', 'org.eclipse.debug.core.model.IThread.getTopStackFrame()', 'org.eclipse.debug.core.model.IThread.getName()', 'org.eclipse.debug.core.model.IThread.getBreakpoints()', 'org.eclipse.debug.core.model.IDebugTarget.getProcess()', 'org.eclipse.debug.core.model.IDebugTarget.getThreads()', 'org.eclipse.debug.core.model.IDebugTarget.getName()', 'org.eclipse.debug.core.ILaunch.getChildren()', 'org.eclipse.debug.core.ILaunch.getDebugTarget()', 'org.eclipse.debug.core.ILaunch.getProcesses()', 'org.eclipse.debug.core.ILaunch.getDebugTargets()', 'org.eclipse.debug.core.ILaunch.getSourceLocator()', 'org.eclipse.debug.core.ILaunch.getLaunchMode()', 'org.eclipse.debug.core.ILaunch.getLaunchConfiguration()', 'org.eclipse.debug.core.ILaunchDelegate.getId()', 'org.eclipse.debug.core.ILaunchDelegate.getName()', 'org.eclipse.debug.core.ILaunchDelegate.getDescription()', 'org.eclipse.debug.core.ILaunchDelegate.getContributorName()', 'org.eclipse.debug.core.ILaunchDelegate.getDelegate()', 'org.eclipse.debug.core.ILaunchDelegate.getModes()', 'org.eclipse.debug.core.ILaunchDelegate.getPluginIdentifier()', 'org.eclipse.debug.core.sourcelookup.ISourceContainerType.getName()', 'org.eclipse.debug.core.sourcelookup.ISourceContainerType.getId()', 'org.eclipse.debug.core.sourcelookup.ISourceContainerType.getDescription()', 'org.eclipse.debug.core.sourcelookup.ISourceContainer.getName()', 'org.eclipse.debug.core.sourcelookup.ISourceContainer.getSourceContainers()', 'org.eclipse.debug.core.sourcelookup.ISourceContainer.getType()', 'org.eclipse.debug.core.sourcelookup.ISourcePathComputer.getId()', 'org.eclipse.debug.core.ILaunchConfigurationType.getCategory()', 'org.eclipse.debug.core.ILaunchConfigurationType.getDelegate()', 'org.eclipse.debug.core.ILaunchConfigurationType.getIdentifier()', 'org.eclipse.debug.core.ILaunchConfigurationType.getName()', 'org.eclipse.debug.core.ILaunchConfigurationType.getPluginIdentifier()', 'org.eclipse.debug.core.ILaunchConfigurationType.getSourceLocatorId()', 'org.eclipse.debug.core.ILaunchConfigurationType.getSourcePathComputer()', 'org.eclipse.debug.core.ILaunchConfigurationType.getSupportedModes()', 'org.eclipse.debug.core.ILaunchConfigurationType.getSupportedModeCombinations()', 'org.eclipse.debug.core.ILaunchConfigurationType.getContributorName()', 'org.eclipse.debug.core.ILaunchConfigurationType.getPrototypes()', 'org.eclipse.debug.core.ILaunchConfiguration.getAttributes()', 'org.eclipse.debug.core.ILaunchConfiguration.getCategory()', 'org.eclipse.debug.core.ILaunchConfiguration.getFile()', 'org.eclipse.debug.core.ILaunchConfiguration.getLocation()', 'org.eclipse.debug.core.ILaunchConfiguration.getMappedResources()', 'org.eclipse.debug.core.ILaunchConfiguration.getMemento()', 'org.eclipse.debug.core.ILaunchConfiguration.getName()', 'org.eclipse.debug.core.ILaunchConfiguration.getModes()', 'org.eclipse.debug.core.ILaunchConfiguration.getType()', 'org.eclipse.debug.core.ILaunchConfiguration.getWorkingCopy()', 'org.eclipse.debug.core.ILaunchConfiguration.getPrototype()', 'org.eclipse.debug.core.ILaunchConfiguration.getPrototypeChildren()', 'org.eclipse.debug.core.ILaunchConfiguration.getPrototypeVisibleAttributes()', 'org.eclipse.egit.ui.internal.branch.ProjectTrackerMemento.getSnapshots()', 'org.eclipse.egit.ui.internal.branch.ProjectTrackerPreferenceSnapshot.getRepository()', 'org.eclipse.egit.ui.internal.branch.ProjectTrackerPreferenceSnapshot.getBranch()', 'org.eclipse.egit.ui.internal.branch.ProjectTrackerPreferenceSnapshot.getAssociatedProjects()', 'org.eclipse.egit.ui.internal.branch.BranchProjectTracker.snapshot()', 'org.eclipse.egit.ui.internal.branch.BranchOperationUI.CheckoutJob.getCheckoutResult()', 'org.eclipse.egit.ui.internal.credentials.LoginDialog.getCredentials()', 'org.eclipse.jface.text.templates.TemplateContextType.getId()', 'org.eclipse.jface.text.templates.TemplateContextType.getName()', 'org.eclipse.jface.text.templates.TemplateContextType.resolvers()', 'org.eclipse.jface.text.templates.TemplateVariableType.getName()', 'org.eclipse.jface.text.templates.TemplateVariableType.getParams()', 'org.eclipse.jface.text.templates.TemplateVariableType.toString()', 'org.eclipse.jface.text.templates.TemplateVariable.getType()', 'org.eclipse.jface.text.templates.TemplateVariable.getVariableType()', 'org.eclipse.jface.text.templates.TemplateVariable.getName()', 'org.eclipse.jface.text.templates.TemplateVariable.getDefaultValue()', 'org.eclipse.jface.text.templates.TemplateVariable.getValues()', 'org.eclipse.jface.text.templates.TemplateBuffer.getString()', 'org.eclipse.jface.text.templates.TemplateBuffer.getVariables()', 'org.eclipse.jface.text.templates.Template.getDescription()', 'org.eclipse.jface.text.templates.Template.getContextTypeId()', 'org.eclipse.jface.text.templates.Template.getName()', 'org.eclipse.jface.text.templates.Template.getPattern()', 'org.eclipse.jface.text.templates.TemplateContext.getContextType()', 'org.eclipse.jface.text.templates.TemplateVariableResolver.getType()', 'org.eclipse.jface.text.templates.TemplateVariableResolver.getDescription()', 'org.eclipse.core.variables.IStringVariable.getName()', 'org.eclipse.core.variables.IStringVariable.getDescription()', 'org.eclipse.team.core.ScmUrlImportDescription.getProject()', 'org.eclipse.team.core.ScmUrlImportDescription.getUrl()', 'org.eclipse.team.core.ScmUrlImportDescription.getUri()', 'org.eclipse.team.ui.IScmUrlImportWizardPage.getSelection()', 'org.eclipse.egit.ui.internal.importing.GitScmUrlImportWizardPage.getSelection()', 'org.eclipse.jgit.lib.BranchTrackingStatus.getRemoteTrackingBranch()', 'org.eclipse.jface.resource.CompositeImageDescriptor.getImageData()', 'org.eclipse.jface.resource.CompositeImageDescriptor.getSize()', 'org.eclipse.egit.ui.internal.DecorationOverlayDescriptor.getSize()', 'org.eclipse.ui.internal.actions.CommandAction.getCommandListener()', 'org.eclipse.ui.internal.actions.CommandAction.getParameterizedCommand()', 'org.eclipse.ui.internal.actions.CommandAction.getActionDefinitionId()', 'org.eclipse.ui.actions.ActionFactory.getId()', 'org.eclipse.ui.actions.ActionFactory.getCommandId()', 'org.eclipse.ui.preferences.IWorkbenchPreferenceContainer.getWorkingCopyManager()', 'org.eclipse.ui.dialogs.PreferenceLinkArea.getControl()', 'org.eclipse.swt.widgets.Group.getClientAreaInPixels()', 'org.eclipse.swt.widgets.Group.getNameText()', 'org.eclipse.swt.widgets.Group.getText()', 'org.eclipse.swt.widgets.Group.windowClass()', 'org.eclipse.egit.ui.internal.SWTUtils.createHFillGridData()', 'org.eclipse.egit.ui.internal.SWTUtils.createHVFillGridData()', 'org.eclipse.egit.ui.internal.PreferenceBasedDateFormatter.create()', 'java.util.LinkedHashMap.LinkedEntryIterator.next()', 'java.util.LinkedHashMap.LinkedEntrySet.iterator()', 'java.util.LinkedHashMap.LinkedEntrySet.spliterator()', 'java.util.LinkedHashMap.LinkedKeyIterator.next()', 'java.util.LinkedHashMap.LinkedKeySet.iterator()', 'java.util.LinkedHashMap.LinkedKeySet.spliterator()', 'java.util.LinkedHashMap.LinkedValueIterator.next()', 'java.util.LinkedHashMap.LinkedValues.iterator()', 'java.util.LinkedHashMap.LinkedValues.spliterator()', 'java.util.LinkedHashMap.keySet()', 'java.util.LinkedHashMap.values()', 'java.util.LinkedHashMap.entrySet()', 'org.eclipse.ui.plugin.AbstractUIPlugin.createImageRegistry()', 'org.eclipse.ui.plugin.AbstractUIPlugin.getDialogSettings()', 'org.eclipse.ui.plugin.AbstractUIPlugin.getImageRegistry()', 'org.eclipse.ui.plugin.AbstractUIPlugin.getPreferenceStore()', 'org.eclipse.ui.plugin.AbstractUIPlugin.getWorkbench()', 'org.eclipse.osgi.service.debug.DebugOptions.getOptions()', 'org.eclipse.osgi.service.debug.DebugOptions.getFile()', 'org.eclipse.egit.core.RepositoryUtil.getDefaultRepositoryDir()', 'org.eclipse.egit.core.RepositoryUtil.getDefaultDefaultRepositoryDir()', 'org.eclipse.egit.core.RepositoryUtil.getPreferences()', 'org.eclipse.egit.core.RepositoryUtil.getRepositories()', 'org.eclipse.egit.core.RepositoryUtil.getConfiguredRepositories()', 'org.eclipse.jgit.events.WorkingTreeModifiedEvent.getModified()', 'org.eclipse.jgit.events.WorkingTreeModifiedEvent.getDeleted()', 'org.eclipse.jgit.events.WorkingTreeModifiedEvent.getListenerType()', 'org.eclipse.egit.ui.Activator.ResourceRefreshJob.WorkingTreeChanges.getWorkTree()', 'org.eclipse.egit.ui.Activator.ResourceRefreshJob.WorkingTreeChanges.getModified()', 'org.eclipse.egit.ui.Activator.ResourceRefreshJob.WorkingTreeChanges.getDeleted()', 'org.eclipse.egit.ui.Activator.getDefault()', 'org.eclipse.egit.ui.Activator.getPluginId()', 'org.eclipse.egit.ui.Activator.getTheme()', 'org.eclipse.egit.ui.Activator.getDebugOptions()', 'org.eclipse.egit.ui.Activator.getRepositoryUtil()', 'org.eclipse.egit.ui.Activator.getResourceManager()', 'org.eclipse.jface.fieldassist.ControlDecoration.Hover.getExtent()', 'org.eclipse.jface.fieldassist.ControlDecoration.getControl()', 'org.eclipse.jface.fieldassist.ControlDecoration.getDescriptionText()', 'org.eclipse.jface.fieldassist.ControlDecoration.getImage()', 'org.eclipse.jface.dialogs.PopupDialog.getFocusControl()', 'org.eclipse.jface.dialogs.PopupDialog.getDialogSettings()', 'org.eclipse.jface.dialogs.PopupDialog.getInitialSize()', 'org.eclipse.jface.dialogs.PopupDialog.getDefaultSize()', 'org.eclipse.jface.dialogs.PopupDialog.getForeground()', 'org.eclipse.jface.dialogs.PopupDialog.getBackground()', 'org.eclipse.jface.dialogs.PopupDialog.getForegroundColorExclusions()', 'org.eclipse.jface.dialogs.PopupDialog.getBackgroundColorExclusions()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.ContentProposalPopup.InfoPopupDialog.getForeground()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.ContentProposalPopup.InfoPopupDialog.getBackground()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.ContentProposalPopup.getForeground()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.ContentProposalPopup.getBackground()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.ContentProposalPopup.getTargetControlListener()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.getControl()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.getLabelProvider()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.getContentProposalProvider()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.getPopupSize()', 'org.eclipse.jface.fieldassist.ContentProposalAdapter.getControlContentAdapter()', 'org.eclipse.egit.ui.UIUtils.IContentProposalCandidateProvider.getCandidates()']"
java.lang.Object,['org.eclipse.egit.ui.UIUtils.IContentProposalFactory.getProposal()']
java.util.function.Function,"['java.util.concurrent.CompletableFuture.thenApply()', 'java.util.function.Function.compose()', 'java.util.function.Function.andThen()', 'java.util.Comparator.thenComparing()', 'java.util.Comparator.comparing()', 'java.util.function.BiFunction.andThen()', 'java.util.Optional.map()', 'java.util.Optional.flatMap()', 'java.util.stream.Stream.map()', 'java.util.stream.Stream.flatMap()', 'java.util.stream.Stream.flatMapToInt()', 'java.util.stream.Stream.flatMapToLong()', 'java.util.stream.Stream.flatMapToDouble()', 'java.util.concurrent.CompletionStage.thenApply()', 'java.util.concurrent.CompletionStage.thenApplyAsync()', 'java.util.concurrent.CompletionStage.thenCompose()', 'java.util.concurrent.CompletionStage.thenComposeAsync()', 'java.util.concurrent.CompletionStage.exceptionally()', 'java.util.concurrent.CompletableFuture.thenApply()', 'java.util.concurrent.CompletableFuture.thenApplyAsync()', 'java.util.concurrent.CompletableFuture.thenCompose()', 'java.util.concurrent.CompletableFuture.thenComposeAsync()', 'java.util.concurrent.CompletableFuture.exceptionally()', 'java.util.concurrent.CompletableFuture.exceptionally()', 'java.util.concurrent.CompletableFuture.thenComposeAsync()', 'java.util.concurrent.CompletableFuture.thenCompose()', 'java.util.concurrent.CompletableFuture.thenApplyAsync()']"
java.util.Comparator,"['org.eclipse.jgit.transport.PackParser.getSortedObjectList()', 'java.util.Comparator.thenComparing()', 'java.util.Comparator.nullsFirst()', 'java.util.Comparator.nullsLast()', 'java.util.function.BinaryOperator.minBy()', 'java.util.function.BinaryOperator.maxBy()', 'java.util.stream.Stream.sorted()', 'java.util.stream.Stream.min()', 'java.util.stream.Stream.max()', 'java.util.Map.Entry.comparingByKey()', 'java.util.Map.Entry.comparingByValue()']"
java.util.function.ToIntFunction,"['java.util.stream.Stream.mapToInt()', 'java.util.Comparator.thenComparingInt()', 'java.util.Comparator.comparingInt()']"
java.util.function.ToLongFunction,"['java.util.stream.Stream.mapToLong()', 'java.util.Comparator.thenComparingLong()', 'java.util.Comparator.comparingLong()']"
java.util.function.ToDoubleFunction,"['java.util.stream.Stream.mapToDouble()', 'java.util.Comparator.thenComparingDouble()', 'java.util.Comparator.comparingDouble()']"
java.lang.Runnable,['org.eclipse.egit.ui.internal.ActionUtils.createGlobalAction()']
java.util.function.IntPredicate,"['java.util.stream.IntStream.filter()', 'java.util.function.IntPredicate.and()', 'java.util.function.IntPredicate.or()']"
java.util.function.IntUnaryOperator,['java.util.stream.IntStream.iterate()']
java.util.function.Predicate,"['java.util.stream.Stream.filter()', 'java.util.function.Predicate.and()', 'java.util.function.Predicate.or()', 'java.util.Optional.filter()']"
java.util.function.LongPredicate,"['java.util.stream.LongStream.filter()', 'java.util.function.LongPredicate.and()', 'java.util.function.LongPredicate.or()']"
java.util.function.LongUnaryOperator,['java.util.stream.LongStream.iterate()']
long,"['org.eclipse.swt.widgets.Group.WM_WINDOWPOSCHANGING()', 'java.util.stream.LongStream.range()', 'java.util.stream.LongStream.range()', 'java.util.stream.LongStream.rangeClosed()', 'java.util.stream.LongStream.rangeClosed()', 'java.time.temporal.ValueRange.of()', 'java.time.temporal.ValueRange.of()', 'java.time.Duration.ofSeconds()', 'java.time.Duration.ofSeconds()', 'java.time.Instant.ofEpochSecond()', 'java.time.Instant.ofEpochSecond()', 'java.util.Random.longs()', 'java.util.Random.longs()', 'org.eclipse.swt.widgets.MenuItem.wmCommandChild()', 'org.eclipse.swt.widgets.MenuItem.wmCommandChild()', 'org.eclipse.swt.widgets.MenuItem.wmDrawChild()', 'org.eclipse.swt.widgets.MenuItem.wmDrawChild()', 'org.eclipse.swt.widgets.MenuItem.wmMeasureChild()', 'org.eclipse.swt.widgets.MenuItem.wmMeasureChild()', 'org.eclipse.swt.widgets.Menu.wmTimer()', 'org.eclipse.swt.widgets.Menu.wmTimer()', 'org.eclipse.swt.widgets.Display.findWidget()', 'org.eclipse.swt.widgets.Display.findWidget()', 'org.eclipse.swt.widgets.Control.WM_ACTIVATE()', 'org.eclipse.swt.widgets.Control.WM_ACTIVATE()', 'org.eclipse.swt.widgets.Control.WM_CAPTURECHANGED()', 'org.eclipse.swt.widgets.Control.WM_CAPTURECHANGED()', 'org.eclipse.swt.widgets.Control.WM_CHANGEUISTATE()', 'org.eclipse.swt.widgets.Control.WM_CHANGEUISTATE()', 'org.eclipse.swt.widgets.Control.WM_CHAR()', 'org.eclipse.swt.widgets.Control.WM_CHAR()', 'org.eclipse.swt.widgets.Control.WM_CLEAR()', 'org.eclipse.swt.widgets.Control.WM_CLEAR()', 'org.eclipse.swt.widgets.Control.WM_CLOSE()', 'org.eclipse.swt.widgets.Control.WM_CLOSE()', 'org.eclipse.swt.widgets.Control.WM_COMMAND()', 'org.eclipse.swt.widgets.Control.WM_COMMAND()', 'org.eclipse.swt.widgets.Control.WM_CONTEXTMENU()', 'org.eclipse.swt.widgets.Control.WM_CONTEXTMENU()', 'org.eclipse.swt.widgets.Control.WM_CTLCOLOR()', 'org.eclipse.swt.widgets.Control.WM_CTLCOLOR()', 'org.eclipse.swt.widgets.Control.WM_CUT()', 'org.eclipse.swt.widgets.Control.WM_CUT()', 'org.eclipse.swt.widgets.Control.WM_DESTROY()', 'org.eclipse.swt.widgets.Control.WM_DESTROY()', 'org.eclipse.swt.widgets.Control.WM_DPICHANGED()', 'org.eclipse.swt.widgets.Control.WM_DPICHANGED()', 'org.eclipse.swt.widgets.Control.WM_DRAWITEM()', 'org.eclipse.swt.widgets.Control.WM_DRAWITEM()', 'org.eclipse.swt.widgets.Control.WM_ENDSESSION()', 'org.eclipse.swt.widgets.Control.WM_ENDSESSION()', 'org.eclipse.swt.widgets.Control.WM_ENTERIDLE()', 'org.eclipse.swt.widgets.Control.WM_ENTERIDLE()', 'org.eclipse.swt.widgets.Control.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Control.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Control.WM_GESTURE()', 'org.eclipse.swt.widgets.Control.WM_GESTURE()', 'org.eclipse.swt.widgets.Control.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Control.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Control.WM_GETFONT()', 'org.eclipse.swt.widgets.Control.WM_GETFONT()', 'org.eclipse.swt.widgets.Control.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Control.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Control.WM_GETMINMAXINFO()', 'org.eclipse.swt.widgets.Control.WM_GETMINMAXINFO()', 'org.eclipse.swt.widgets.Control.WM_HOTKEY()', 'org.eclipse.swt.widgets.Control.WM_HOTKEY()', 'org.eclipse.swt.widgets.Control.WM_HELP()', 'org.eclipse.swt.widgets.Control.WM_HELP()', 'org.eclipse.swt.widgets.Control.WM_HSCROLL()', 'org.eclipse.swt.widgets.Control.WM_HSCROLL()', 'org.eclipse.swt.widgets.Control.WM_IME_CHAR()', 'org.eclipse.swt.widgets.Control.WM_IME_CHAR()', 'org.eclipse.swt.widgets.Control.WM_IME_COMPOSITION()', 'org.eclipse.swt.widgets.Control.WM_IME_COMPOSITION()', 'org.eclipse.swt.widgets.Control.WM_IME_COMPOSITION_START()', 'org.eclipse.swt.widgets.Control.WM_IME_COMPOSITION_START()', 'org.eclipse.swt.widgets.Control.WM_IME_ENDCOMPOSITION()', 'org.eclipse.swt.widgets.Control.WM_IME_ENDCOMPOSITION()', 'org.eclipse.swt.widgets.Control.WM_UNINITMENUPOPUP()', 'org.eclipse.swt.widgets.Control.WM_UNINITMENUPOPUP()', 'org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP()', 'org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP()', 'org.eclipse.swt.widgets.Control.WM_INPUTLANGCHANGE()', 'org.eclipse.swt.widgets.Control.WM_INPUTLANGCHANGE()', 'org.eclipse.swt.widgets.Control.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Control.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Control.WM_KEYUP()', 'org.eclipse.swt.widgets.Control.WM_KEYUP()', 'org.eclipse.swt.widgets.Control.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Control.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Control.WM_LBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Control.WM_LBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Control.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_LBUTTONUP()', 'org.eclipse.swt.widgets.Control.WM_LBUTTONUP()', 'org.eclipse.swt.widgets.Control.WM_MBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Control.WM_MBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Control.WM_MBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_MBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_MBUTTONUP()', 'org.eclipse.swt.widgets.Control.WM_MBUTTONUP()', 'org.eclipse.swt.widgets.Control.WM_MEASUREITEM()', 'org.eclipse.swt.widgets.Control.WM_MEASUREITEM()', 'org.eclipse.swt.widgets.Control.WM_MENUCHAR()', 'org.eclipse.swt.widgets.Control.WM_MENUCHAR()', 'org.eclipse.swt.widgets.Control.WM_MENUSELECT()', 'org.eclipse.swt.widgets.Control.WM_MENUSELECT()', 'org.eclipse.swt.widgets.Control.WM_MOUSEACTIVATE()', 'org.eclipse.swt.widgets.Control.WM_MOUSEACTIVATE()', 'org.eclipse.swt.widgets.Control.WM_MOUSEHOVER()', 'org.eclipse.swt.widgets.Control.WM_MOUSEHOVER()', 'org.eclipse.swt.widgets.Control.WM_MOUSELEAVE()', 'org.eclipse.swt.widgets.Control.WM_MOUSELEAVE()', 'org.eclipse.swt.widgets.Control.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.Control.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.Control.WM_MOUSEWHEEL()', 'org.eclipse.swt.widgets.Control.WM_MOUSEWHEEL()', 'org.eclipse.swt.widgets.Control.WM_MOUSEHWHEEL()', 'org.eclipse.swt.widgets.Control.WM_MOUSEHWHEEL()', 'org.eclipse.swt.widgets.Control.WM_MOVE()', 'org.eclipse.swt.widgets.Control.WM_MOVE()', 'org.eclipse.swt.widgets.Control.WM_NCACTIVATE()', 'org.eclipse.swt.widgets.Control.WM_NCACTIVATE()', 'org.eclipse.swt.widgets.Control.WM_NCCALCSIZE()', 'org.eclipse.swt.widgets.Control.WM_NCCALCSIZE()', 'org.eclipse.swt.widgets.Control.WM_NCHITTEST()', 'org.eclipse.swt.widgets.Control.WM_NCHITTEST()', 'org.eclipse.swt.widgets.Control.WM_NCLBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_NCLBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_NCPAINT()', 'org.eclipse.swt.widgets.Control.WM_NCPAINT()', 'org.eclipse.swt.widgets.Control.WM_NOTIFY()', 'org.eclipse.swt.widgets.Control.WM_NOTIFY()', 'org.eclipse.swt.widgets.Control.WM_PAINT()', 'org.eclipse.swt.widgets.Control.WM_PAINT()', 'org.eclipse.swt.widgets.Control.WM_PALETTECHANGED()', 'org.eclipse.swt.widgets.Control.WM_PALETTECHANGED()', 'org.eclipse.swt.widgets.Control.WM_PARENTNOTIFY()', 'org.eclipse.swt.widgets.Control.WM_PARENTNOTIFY()', 'org.eclipse.swt.widgets.Control.WM_PASTE()', 'org.eclipse.swt.widgets.Control.WM_PASTE()', 'org.eclipse.swt.widgets.Control.WM_PRINT()', 'org.eclipse.swt.widgets.Control.WM_PRINT()', 'org.eclipse.swt.widgets.Control.WM_PRINTCLIENT()', 'org.eclipse.swt.widgets.Control.WM_PRINTCLIENT()', 'org.eclipse.swt.widgets.Control.WM_QUERYENDSESSION()', 'org.eclipse.swt.widgets.Control.WM_QUERYENDSESSION()', 'org.eclipse.swt.widgets.Control.WM_QUERYNEWPALETTE()', 'org.eclipse.swt.widgets.Control.WM_QUERYNEWPALETTE()', 'org.eclipse.swt.widgets.Control.WM_QUERYOPEN()', 'org.eclipse.swt.widgets.Control.WM_QUERYOPEN()', 'org.eclipse.swt.widgets.Control.WM_RBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Control.WM_RBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Control.WM_RBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_RBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_RBUTTONUP()', 'org.eclipse.swt.widgets.Control.WM_RBUTTONUP()', 'org.eclipse.swt.widgets.Control.WM_SETCURSOR()', 'org.eclipse.swt.widgets.Control.WM_SETCURSOR()', 'org.eclipse.swt.widgets.Control.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Control.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Control.WM_SETTINGCHANGE()', 'org.eclipse.swt.widgets.Control.WM_SETTINGCHANGE()', 'org.eclipse.swt.widgets.Control.WM_SETFONT()', 'org.eclipse.swt.widgets.Control.WM_SETFONT()', 'org.eclipse.swt.widgets.Control.WM_SETREDRAW()', 'org.eclipse.swt.widgets.Control.WM_SETREDRAW()', 'org.eclipse.swt.widgets.Control.WM_SHOWWINDOW()', 'org.eclipse.swt.widgets.Control.WM_SHOWWINDOW()', 'org.eclipse.swt.widgets.Control.WM_SIZE()', 'org.eclipse.swt.widgets.Control.WM_SIZE()', 'org.eclipse.swt.widgets.Control.WM_SYSCHAR()', 'org.eclipse.swt.widgets.Control.WM_SYSCHAR()', 'org.eclipse.swt.widgets.Control.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Control.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Control.WM_SYSCOMMAND()', 'org.eclipse.swt.widgets.Control.WM_SYSCOMMAND()', 'org.eclipse.swt.widgets.Control.WM_SYSKEYDOWN()', 'org.eclipse.swt.widgets.Control.WM_SYSKEYDOWN()', 'org.eclipse.swt.widgets.Control.WM_SYSKEYUP()', 'org.eclipse.swt.widgets.Control.WM_SYSKEYUP()', 'org.eclipse.swt.widgets.Control.WM_TABLET_FLICK()', 'org.eclipse.swt.widgets.Control.WM_TABLET_FLICK()', 'org.eclipse.swt.widgets.Control.WM_TOUCH()', 'org.eclipse.swt.widgets.Control.WM_TOUCH()', 'org.eclipse.swt.widgets.Control.WM_TIMER()', 'org.eclipse.swt.widgets.Control.WM_TIMER()', 'org.eclipse.swt.widgets.Control.WM_UNDO()', 'org.eclipse.swt.widgets.Control.WM_UNDO()', 'org.eclipse.swt.widgets.Control.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Control.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Control.WM_VSCROLL()', 'org.eclipse.swt.widgets.Control.WM_VSCROLL()', 'org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGED()', 'org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGED()', 'org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Control.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Control.WM_XBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Control.WM_XBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Control.WM_XBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_XBUTTONDOWN()', 'org.eclipse.swt.widgets.Control.WM_XBUTTONUP()', 'org.eclipse.swt.widgets.Control.WM_XBUTTONUP()', 'org.eclipse.swt.widgets.Control.wmColorChild()', 'org.eclipse.swt.widgets.Control.wmColorChild()', 'org.eclipse.swt.widgets.Control.wmCommandChild()', 'org.eclipse.swt.widgets.Control.wmCommandChild()', 'org.eclipse.swt.widgets.Control.wmDrawChild()', 'org.eclipse.swt.widgets.Control.wmDrawChild()', 'org.eclipse.swt.widgets.Control.wmMeasureChild()', 'org.eclipse.swt.widgets.Control.wmMeasureChild()', 'org.eclipse.swt.widgets.Control.wmScrollChild()', 'org.eclipse.swt.widgets.Control.wmScrollChild()', 'org.eclipse.swt.widgets.ScrollBar.wmScrollChild()', 'org.eclipse.swt.widgets.ScrollBar.wmScrollChild()', 'org.eclipse.swt.widgets.Scrollable.WM_HSCROLL()', 'org.eclipse.swt.widgets.Scrollable.WM_HSCROLL()', 'org.eclipse.swt.widgets.Scrollable.WM_MOUSEWHEEL()', 'org.eclipse.swt.widgets.Scrollable.WM_MOUSEWHEEL()', 'org.eclipse.swt.widgets.Scrollable.WM_SIZE()', 'org.eclipse.swt.widgets.Scrollable.WM_SIZE()', 'org.eclipse.swt.widgets.Scrollable.WM_VSCROLL()', 'org.eclipse.swt.widgets.Scrollable.WM_VSCROLL()', 'org.eclipse.swt.widgets.Composite.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Composite.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Composite.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Composite.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Composite.WM_GETFONT()', 'org.eclipse.swt.widgets.Composite.WM_GETFONT()', 'org.eclipse.swt.widgets.Composite.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Composite.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Composite.WM_NCHITTEST()', 'org.eclipse.swt.widgets.Composite.WM_NCHITTEST()', 'org.eclipse.swt.widgets.Composite.WM_PARENTNOTIFY()', 'org.eclipse.swt.widgets.Composite.WM_PARENTNOTIFY()', 'org.eclipse.swt.widgets.Composite.WM_PAINT()', 'org.eclipse.swt.widgets.Composite.WM_PAINT()', 'org.eclipse.swt.widgets.Composite.WM_PRINTCLIENT()', 'org.eclipse.swt.widgets.Composite.WM_PRINTCLIENT()', 'org.eclipse.swt.widgets.Composite.WM_SETFONT()', 'org.eclipse.swt.widgets.Composite.WM_SETFONT()', 'org.eclipse.swt.widgets.Composite.WM_SIZE()', 'org.eclipse.swt.widgets.Composite.WM_SIZE()', 'org.eclipse.swt.widgets.Composite.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Composite.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Composite.WM_SYSCOMMAND()', 'org.eclipse.swt.widgets.Composite.WM_SYSCOMMAND()', 'org.eclipse.swt.widgets.Composite.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Composite.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.IME.WM_IME_COMPOSITION()', 'org.eclipse.swt.widgets.IME.WM_IME_COMPOSITION()', 'org.eclipse.swt.widgets.IME.WM_IME_COMPOSITION_START()', 'org.eclipse.swt.widgets.IME.WM_IME_COMPOSITION_START()', 'org.eclipse.swt.widgets.IME.WM_IME_ENDCOMPOSITION()', 'org.eclipse.swt.widgets.IME.WM_IME_ENDCOMPOSITION()', 'org.eclipse.swt.widgets.IME.WM_KEYDOWN()', 'org.eclipse.swt.widgets.IME.WM_KEYDOWN()', 'org.eclipse.swt.widgets.IME.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.IME.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.IME.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.IME.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Canvas.WM_CHAR()', 'org.eclipse.swt.widgets.Canvas.WM_CHAR()', 'org.eclipse.swt.widgets.Canvas.WM_IME_COMPOSITION()', 'org.eclipse.swt.widgets.Canvas.WM_IME_COMPOSITION()', 'org.eclipse.swt.widgets.Canvas.WM_IME_COMPOSITION_START()', 'org.eclipse.swt.widgets.Canvas.WM_IME_COMPOSITION_START()', 'org.eclipse.swt.widgets.Canvas.WM_IME_ENDCOMPOSITION()', 'org.eclipse.swt.widgets.Canvas.WM_IME_ENDCOMPOSITION()', 'org.eclipse.swt.widgets.Canvas.WM_INPUTLANGCHANGE()', 'org.eclipse.swt.widgets.Canvas.WM_INPUTLANGCHANGE()', 'org.eclipse.swt.widgets.Canvas.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Canvas.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Canvas.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Canvas.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Canvas.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Canvas.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Canvas.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Canvas.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Canvas.WM_SIZE()', 'org.eclipse.swt.widgets.Canvas.WM_SIZE()', 'org.eclipse.swt.widgets.Canvas.WM_WINDOWPOSCHANGED()', 'org.eclipse.swt.widgets.Canvas.WM_WINDOWPOSCHANGED()', 'org.eclipse.swt.widgets.Canvas.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Canvas.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Button.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Button.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Button.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Button.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Button.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Button.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Button.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Button.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Button.WM_LBUTTONUP()', 'org.eclipse.swt.widgets.Button.WM_LBUTTONUP()', 'org.eclipse.swt.widgets.Button.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Button.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Button.WM_SIZE()', 'org.eclipse.swt.widgets.Button.WM_SIZE()', 'org.eclipse.swt.widgets.Button.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Button.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Button.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Button.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Button.wmCommandChild()', 'org.eclipse.swt.widgets.Button.wmCommandChild()', 'org.eclipse.swt.widgets.Button.wmDrawChild()', 'org.eclipse.swt.widgets.Button.wmDrawChild()', 'org.eclipse.swt.widgets.Decorations.WM_ACTIVATE()', 'org.eclipse.swt.widgets.Decorations.WM_ACTIVATE()', 'org.eclipse.swt.widgets.Decorations.WM_CLOSE()', 'org.eclipse.swt.widgets.Decorations.WM_CLOSE()', 'org.eclipse.swt.widgets.Decorations.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Decorations.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Decorations.WM_MOVE()', 'org.eclipse.swt.widgets.Decorations.WM_MOVE()', 'org.eclipse.swt.widgets.Decorations.WM_NCACTIVATE()', 'org.eclipse.swt.widgets.Decorations.WM_NCACTIVATE()', 'org.eclipse.swt.widgets.Decorations.WM_QUERYOPEN()', 'org.eclipse.swt.widgets.Decorations.WM_QUERYOPEN()', 'org.eclipse.swt.widgets.Decorations.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Decorations.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Decorations.WM_SIZE()', 'org.eclipse.swt.widgets.Decorations.WM_SIZE()', 'org.eclipse.swt.widgets.Decorations.WM_SYSCOMMAND()', 'org.eclipse.swt.widgets.Decorations.WM_SYSCOMMAND()', 'org.eclipse.swt.widgets.Decorations.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Decorations.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.ToolItem.wmCommandChild()', 'org.eclipse.swt.widgets.ToolItem.wmCommandChild()', 'org.eclipse.swt.widgets.ToolBar.WM_CAPTURECHANGED()', 'org.eclipse.swt.widgets.ToolBar.WM_CAPTURECHANGED()', 'org.eclipse.swt.widgets.ToolBar.WM_CHAR()', 'org.eclipse.swt.widgets.ToolBar.WM_CHAR()', 'org.eclipse.swt.widgets.ToolBar.WM_COMMAND()', 'org.eclipse.swt.widgets.ToolBar.WM_COMMAND()', 'org.eclipse.swt.widgets.ToolBar.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.ToolBar.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.ToolBar.WM_KEYDOWN()', 'org.eclipse.swt.widgets.ToolBar.WM_KEYDOWN()', 'org.eclipse.swt.widgets.ToolBar.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.ToolBar.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.ToolBar.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.ToolBar.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.ToolBar.WM_LBUTTONUP()', 'org.eclipse.swt.widgets.ToolBar.WM_LBUTTONUP()', 'org.eclipse.swt.widgets.ToolBar.WM_MOUSELEAVE()', 'org.eclipse.swt.widgets.ToolBar.WM_MOUSELEAVE()', 'org.eclipse.swt.widgets.ToolBar.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.ToolBar.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.ToolBar.WM_NOTIFY()', 'org.eclipse.swt.widgets.ToolBar.WM_NOTIFY()', 'org.eclipse.swt.widgets.ToolBar.WM_SETFOCUS()', 'org.eclipse.swt.widgets.ToolBar.WM_SETFOCUS()', 'org.eclipse.swt.widgets.ToolBar.WM_SIZE()', 'org.eclipse.swt.widgets.ToolBar.WM_SIZE()', 'org.eclipse.swt.widgets.ToolBar.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.ToolBar.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.ToolBar.wmCommandChild()', 'org.eclipse.swt.widgets.ToolBar.wmCommandChild()', 'org.eclipse.swt.widgets.Shell.WM_ACTIVATE()', 'org.eclipse.swt.widgets.Shell.WM_ACTIVATE()', 'org.eclipse.swt.widgets.Shell.WM_DESTROY()', 'org.eclipse.swt.widgets.Shell.WM_DESTROY()', 'org.eclipse.swt.widgets.Shell.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Shell.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Shell.WM_ENTERIDLE()', 'org.eclipse.swt.widgets.Shell.WM_ENTERIDLE()', 'org.eclipse.swt.widgets.Shell.WM_GETMINMAXINFO()', 'org.eclipse.swt.widgets.Shell.WM_GETMINMAXINFO()', 'org.eclipse.swt.widgets.Shell.WM_MOUSEACTIVATE()', 'org.eclipse.swt.widgets.Shell.WM_MOUSEACTIVATE()', 'org.eclipse.swt.widgets.Shell.WM_MOVE()', 'org.eclipse.swt.widgets.Shell.WM_MOVE()', 'org.eclipse.swt.widgets.Shell.WM_NCHITTEST()', 'org.eclipse.swt.widgets.Shell.WM_NCHITTEST()', 'org.eclipse.swt.widgets.Shell.WM_NCLBUTTONDOWN()', 'org.eclipse.swt.widgets.Shell.WM_NCLBUTTONDOWN()', 'org.eclipse.swt.widgets.Shell.WM_PALETTECHANGED()', 'org.eclipse.swt.widgets.Shell.WM_PALETTECHANGED()', 'org.eclipse.swt.widgets.Shell.WM_QUERYNEWPALETTE()', 'org.eclipse.swt.widgets.Shell.WM_QUERYNEWPALETTE()', 'org.eclipse.swt.widgets.Shell.WM_SETCURSOR()', 'org.eclipse.swt.widgets.Shell.WM_SETCURSOR()', 'org.eclipse.swt.widgets.Shell.WM_SHOWWINDOW()', 'org.eclipse.swt.widgets.Shell.WM_SHOWWINDOW()', 'org.eclipse.swt.widgets.Shell.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Shell.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Table.WM_CHAR()', 'org.eclipse.swt.widgets.Table.WM_CHAR()', 'org.eclipse.swt.widgets.Table.WM_CONTEXTMENU()', 'org.eclipse.swt.widgets.Table.WM_CONTEXTMENU()', 'org.eclipse.swt.widgets.Table.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Table.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Table.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Table.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Table.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Table.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Table.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Table.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Table.WM_LBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Table.WM_LBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Table.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Table.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Table.WM_MOUSEHOVER()', 'org.eclipse.swt.widgets.Table.WM_MOUSEHOVER()', 'org.eclipse.swt.widgets.Table.WM_PAINT()', 'org.eclipse.swt.widgets.Table.WM_PAINT()', 'org.eclipse.swt.widgets.Table.WM_RBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Table.WM_RBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Table.WM_RBUTTONDOWN()', 'org.eclipse.swt.widgets.Table.WM_RBUTTONDOWN()', 'org.eclipse.swt.widgets.Table.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Table.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Table.WM_SETFONT()', 'org.eclipse.swt.widgets.Table.WM_SETFONT()', 'org.eclipse.swt.widgets.Table.WM_SETREDRAW()', 'org.eclipse.swt.widgets.Table.WM_SETREDRAW()', 'org.eclipse.swt.widgets.Table.WM_SIZE()', 'org.eclipse.swt.widgets.Table.WM_SIZE()', 'org.eclipse.swt.widgets.Table.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Table.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Table.WM_HSCROLL()', 'org.eclipse.swt.widgets.Table.WM_HSCROLL()', 'org.eclipse.swt.widgets.Table.WM_VSCROLL()', 'org.eclipse.swt.widgets.Table.WM_VSCROLL()', 'org.eclipse.swt.widgets.Table.wmMeasureChild()', 'org.eclipse.swt.widgets.Table.wmMeasureChild()', 'org.eclipse.swt.widgets.Label.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Label.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Label.WM_SIZE()', 'org.eclipse.swt.widgets.Label.WM_SIZE()', 'org.eclipse.swt.widgets.Label.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Label.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Label.wmDrawChild()', 'org.eclipse.swt.widgets.Label.wmDrawChild()', 'org.eclipse.swt.widgets.Tree.WM_CHAR()', 'org.eclipse.swt.widgets.Tree.WM_CHAR()', 'org.eclipse.swt.widgets.Tree.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Tree.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Tree.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Tree.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Tree.WM_HSCROLL()', 'org.eclipse.swt.widgets.Tree.WM_HSCROLL()', 'org.eclipse.swt.widgets.Tree.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Tree.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Tree.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Tree.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Tree.WM_LBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Tree.WM_LBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Tree.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.Tree.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.Tree.WM_MOUSEWHEEL()', 'org.eclipse.swt.widgets.Tree.WM_MOUSEWHEEL()', 'org.eclipse.swt.widgets.Tree.WM_MOVE()', 'org.eclipse.swt.widgets.Tree.WM_MOVE()', 'org.eclipse.swt.widgets.Tree.WM_RBUTTONDOWN()', 'org.eclipse.swt.widgets.Tree.WM_RBUTTONDOWN()', 'org.eclipse.swt.widgets.Tree.WM_PAINT()', 'org.eclipse.swt.widgets.Tree.WM_PAINT()', 'org.eclipse.swt.widgets.Tree.WM_SETCURSOR()', 'org.eclipse.swt.widgets.Tree.WM_SETCURSOR()', 'org.eclipse.swt.widgets.Tree.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Tree.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Tree.WM_SETFONT()', 'org.eclipse.swt.widgets.Tree.WM_SETFONT()', 'org.eclipse.swt.widgets.Tree.WM_SETREDRAW()', 'org.eclipse.swt.widgets.Tree.WM_SETREDRAW()', 'org.eclipse.swt.widgets.Tree.WM_SIZE()', 'org.eclipse.swt.widgets.Tree.WM_SIZE()', 'org.eclipse.swt.widgets.Tree.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Tree.WM_SYSCOLORCHANGE()', 'org.eclipse.swt.widgets.Tree.WM_VSCROLL()', 'org.eclipse.swt.widgets.Tree.WM_VSCROLL()', 'org.eclipse.swt.widgets.Tree.WM_TIMER()', 'org.eclipse.swt.widgets.Tree.WM_TIMER()', 'org.eclipse.swt.widgets.Tree.wmColorChild()', 'org.eclipse.swt.widgets.Tree.wmColorChild()', 'org.eclipse.swt.widgets.TabFolder.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.TabFolder.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.TabFolder.WM_GETOBJECT()', 'org.eclipse.swt.widgets.TabFolder.WM_GETOBJECT()', 'org.eclipse.swt.widgets.TabFolder.WM_KEYDOWN()', 'org.eclipse.swt.widgets.TabFolder.WM_KEYDOWN()', 'org.eclipse.swt.widgets.TabFolder.WM_MOUSELEAVE()', 'org.eclipse.swt.widgets.TabFolder.WM_MOUSELEAVE()', 'org.eclipse.swt.widgets.TabFolder.WM_NCHITTEST()', 'org.eclipse.swt.widgets.TabFolder.WM_NCHITTEST()', 'org.eclipse.swt.widgets.TabFolder.WM_NOTIFY()', 'org.eclipse.swt.widgets.TabFolder.WM_NOTIFY()', 'org.eclipse.swt.widgets.TabFolder.WM_PARENTNOTIFY()', 'org.eclipse.swt.widgets.TabFolder.WM_PARENTNOTIFY()', 'org.eclipse.swt.widgets.TabFolder.WM_SIZE()', 'org.eclipse.swt.widgets.TabFolder.WM_SIZE()', 'org.eclipse.swt.widgets.TabFolder.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.TabFolder.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Text.WM_CHAR()', 'org.eclipse.swt.widgets.Text.WM_CHAR()', 'org.eclipse.swt.widgets.Text.WM_CLEAR()', 'org.eclipse.swt.widgets.Text.WM_CLEAR()', 'org.eclipse.swt.widgets.Text.WM_CUT()', 'org.eclipse.swt.widgets.Text.WM_CUT()', 'org.eclipse.swt.widgets.Text.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Text.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Text.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Text.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Text.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Text.WM_GETOBJECT()', 'org.eclipse.swt.widgets.Text.WM_IME_CHAR()', 'org.eclipse.swt.widgets.Text.WM_IME_CHAR()', 'org.eclipse.swt.widgets.Text.WM_LBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Text.WM_LBUTTONDBLCLK()', 'org.eclipse.swt.widgets.Text.WM_PASTE()', 'org.eclipse.swt.widgets.Text.WM_PASTE()', 'org.eclipse.swt.widgets.Text.WM_UNDO()', 'org.eclipse.swt.widgets.Text.WM_UNDO()', 'org.eclipse.swt.widgets.Text.wmColorChild()', 'org.eclipse.swt.widgets.Text.wmColorChild()', 'org.eclipse.swt.widgets.Text.wmCommandChild()', 'org.eclipse.swt.widgets.Text.wmCommandChild()', 'org.eclipse.swt.widgets.Sash.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Sash.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Sash.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Sash.WM_KEYDOWN()', 'org.eclipse.swt.widgets.Sash.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Sash.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Sash.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Sash.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Sash.WM_LBUTTONUP()', 'org.eclipse.swt.widgets.Sash.WM_LBUTTONUP()', 'org.eclipse.swt.widgets.Sash.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.Sash.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.Sash.WM_SETCURSOR()', 'org.eclipse.swt.widgets.Sash.WM_SETCURSOR()', 'org.eclipse.swt.widgets.Combo.wmColorChild()', 'org.eclipse.swt.widgets.Combo.wmColorChild()', 'org.eclipse.swt.widgets.Combo.WM_CTLCOLOR()', 'org.eclipse.swt.widgets.Combo.WM_CTLCOLOR()', 'org.eclipse.swt.widgets.Combo.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Combo.WM_GETDLGCODE()', 'org.eclipse.swt.widgets.Combo.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Combo.WM_KILLFOCUS()', 'org.eclipse.swt.widgets.Combo.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Combo.WM_LBUTTONDOWN()', 'org.eclipse.swt.widgets.Combo.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Combo.WM_SETFOCUS()', 'org.eclipse.swt.widgets.Combo.WM_SIZE()', 'org.eclipse.swt.widgets.Combo.WM_SIZE()', 'org.eclipse.swt.widgets.Combo.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Combo.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Combo.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Combo.WM_WINDOWPOSCHANGING()', 'org.eclipse.swt.widgets.Combo.wmCommandChild()', 'org.eclipse.swt.widgets.Combo.wmCommandChild()', 'org.eclipse.debug.core.model.IMemoryBlockRetrieval.getMemoryBlock()', 'org.eclipse.debug.core.model.IMemoryBlockRetrieval.getMemoryBlock()', 'org.eclipse.swt.widgets.Group.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Group.WM_ERASEBKGND()', 'org.eclipse.swt.widgets.Group.WM_NCHITTEST()', 'org.eclipse.swt.widgets.Group.WM_NCHITTEST()', 'org.eclipse.swt.widgets.Group.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.Group.WM_MOUSEMOVE()', 'org.eclipse.swt.widgets.Group.WM_PAINT()', 'org.eclipse.swt.widgets.Group.WM_PAINT()', 'org.eclipse.swt.widgets.Group.WM_PRINTCLIENT()', 'org.eclipse.swt.widgets.Group.WM_PRINTCLIENT()', 'org.eclipse.swt.widgets.Group.WM_UPDATEUISTATE()', 'org.eclipse.swt.widgets.Group.WM_UPDATEUISTATE()']"
java.util.function.DoublePredicate,"['java.util.stream.DoubleStream.filter()', 'java.util.function.DoublePredicate.and()', 'java.util.function.DoublePredicate.or()']"
java.util.function.DoubleUnaryOperator,['java.util.stream.DoubleStream.iterate()']
double,['java.text.NumberFormat.format()']
java.util.function.DoubleConsumer,"['java.util.stream.DoubleStream.peek()', 'java.util.function.DoubleConsumer.andThen()']"
java.util.function.BiConsumer,"['java.util.concurrent.CompletableFuture.thenAcceptBoth()', 'java.util.concurrent.CompletionStage.thenAcceptBoth()', 'java.util.concurrent.CompletionStage.thenAcceptBoth()', 'java.util.concurrent.CompletionStage.thenAcceptBothAsync()', 'java.util.concurrent.CompletionStage.thenAcceptBothAsync()', 'java.util.concurrent.CompletableFuture.thenAcceptBoth()', 'java.util.concurrent.CompletableFuture.thenAcceptBoth()', 'java.util.concurrent.CompletableFuture.thenAcceptBothAsync()', 'java.util.concurrent.CompletableFuture.thenAcceptBothAsync()', 'java.util.concurrent.CompletableFuture.thenAcceptBothAsync()', 'java.util.concurrent.CompletableFuture.thenAcceptBothAsync()']"
java.util.function.DoubleFunction,"['java.util.stream.DoubleStream.flatMap()', 'java.util.stream.DoubleStream.mapToObj()']"
java.util.function.DoubleToIntFunction,['java.util.stream.DoubleStream.mapToInt()']
java.util.function.DoubleToLongFunction,['java.util.stream.DoubleStream.mapToLong()']
java.util.function.DoubleBinaryOperator,['java.util.stream.DoubleStream.reduce()']
java.util.function.Supplier,['java.util.concurrent.CompletableFuture.supplyAsync()']
java.util.function.ObjDoubleConsumer,['java.util.stream.DoubleStream.collect()']
double[],"['java.nio.DoubleBuffer.put()', 'java.util.stream.DoubleStream.of()', 'java.nio.DoubleBuffer.wrap()', 'java.nio.DoubleBuffer.get()']"
java.util.function.DoubleSupplier,['java.util.stream.DoubleStream.generate()']
java.util.stream.DoubleStream,['java.util.stream.DoubleStream.concat()']
java.util.function.LongConsumer,"['java.util.stream.LongStream.peek()', 'java.util.function.LongConsumer.andThen()']"
java.util.function.IntConsumer,"['java.util.stream.IntStream.peek()', 'java.util.function.IntConsumer.andThen()']"
java.util.function.LongFunction,"['java.util.stream.LongStream.flatMap()', 'java.util.stream.LongStream.mapToObj()']"
java.util.function.LongToIntFunction,['java.util.stream.LongStream.mapToInt()']
java.util.function.LongToDoubleFunction,['java.util.stream.LongStream.mapToDouble()']
java.util.function.LongBinaryOperator,['java.util.stream.LongStream.reduce()']
java.util.function.ObjLongConsumer,['java.util.stream.LongStream.collect()']
long[],"['java.nio.LongBuffer.put()', 'java.util.stream.LongStream.of()', 'java.nio.LongBuffer.wrap()', 'java.nio.LongBuffer.get()']"
java.util.function.LongSupplier,['java.util.stream.LongStream.generate()']
java.util.stream.LongStream,['java.util.stream.LongStream.concat()']
java.util.function.Consumer,['org.eclipse.egit.ui.internal.components.RepositoryMenuUtil.getRepositoryActions()']
int,"['org.eclipse.egit.ui.UIUtils.createSelectableLabel()', 'org.eclipse.jface.text.TextViewer.createTextWidget()', 'org.eclipse.jface.text.TextViewer.createTextWidget()', 'org.eclipse.ui.forms.widgets.FormToolkit.createComposite()', 'org.eclipse.ui.forms.widgets.FormToolkit.createComposite()', 'org.eclipse.ui.forms.widgets.FormToolkit.createImageHyperlink()', 'org.eclipse.ui.forms.widgets.FormToolkit.createImageHyperlink()', 'org.eclipse.ui.forms.widgets.FormToolkit.createSection()', 'org.eclipse.ui.forms.widgets.FormToolkit.createSection()', 'org.eclipse.ui.forms.widgets.FormToolkit.createExpandableComposite()', 'org.eclipse.ui.forms.widgets.FormToolkit.createExpandableComposite()', 'org.eclipse.ui.forms.widgets.FormToolkit.createSeparator()', 'org.eclipse.ui.forms.widgets.FormToolkit.createSeparator()', 'org.eclipse.ui.forms.widgets.FormToolkit.createTable()', 'org.eclipse.ui.forms.widgets.FormToolkit.createTable()', 'org.eclipse.ui.forms.widgets.FormToolkit.createTree()', 'org.eclipse.ui.forms.widgets.FormToolkit.createTree()', 'org.eclipse.ui.forms.widgets.FormToolkit.createPageBook()', 'org.eclipse.ui.forms.widgets.FormToolkit.createPageBook()', 'org.eclipse.compare.CompareEditorInput.createOutlineContents()', 'org.eclipse.compare.CompareEditorInput.createOutlineContents()', 'org.eclipse.ui.dialogs.FilteredTree.createTreeControl()', 'org.eclipse.ui.dialogs.FilteredTree.createTreeControl()', 'org.eclipse.ui.dialogs.FilteredTree.doCreateTreeViewer()', 'org.eclipse.ui.dialogs.FilteredTree.doCreateTreeViewer()', 'org.eclipse.egit.ui.internal.components.FilteredCheckboxTree.doCreateTreeViewer()', 'org.eclipse.egit.ui.internal.components.FilteredCheckboxTree.doCreateTreeViewer()', 'org.eclipse.egit.ui.internal.SWTUtils.createHFillComposite()', 'org.eclipse.egit.ui.internal.SWTUtils.createHFillComposite()', 'org.eclipse.egit.ui.internal.SWTUtils.createHVFillComposite()', 'org.eclipse.egit.ui.internal.SWTUtils.createHVFillComposite()', 'org.eclipse.egit.ui.internal.SWTUtils.createText()', 'org.eclipse.egit.ui.internal.SWTUtils.createText()', 'org.eclipse.egit.ui.internal.SWTUtils.createPlaceholder()', 'org.eclipse.egit.ui.internal.SWTUtils.createPlaceholder()']"
java.lang.Object[],"['org.eclipse.osgi.util.NLS.bind()', 'java.lang.String.format()', 'java.lang.String.format()', 'java.io.PrintStream.printf()', 'java.io.PrintStream.printf()', 'java.io.PrintStream.format()', 'java.io.PrintStream.format()', 'java.io.PrintWriter.printf()', 'java.io.PrintWriter.printf()', 'java.io.PrintWriter.format()', 'java.io.PrintWriter.format()', 'org.eclipse.core.expressions.IEvaluationContext.resolveVariable()', 'org.eclipse.core.expressions.IEvaluationContext.resolveVariable()']"
java.lang.Class,"['org.eclipse.egit.ui.UIUtils.getDialogBoundSettings()', 'java.nio.file.FileStore.getFileStoreAttributeView()', 'java.lang.Package.getPackage()', 'java.lang.Package.getAnnotation()', 'java.lang.Package.getAnnotationsByType()', 'java.lang.Package.getDeclaredAnnotation()', 'java.lang.Package.getDeclaredAnnotationsByType()', 'java.lang.ClassLoader.getClassLoader()', 'java.lang.reflect.AnnotatedElement.getAnnotation()', 'java.lang.reflect.AnnotatedElement.getAnnotationsByType()', 'java.lang.reflect.AnnotatedElement.getDeclaredAnnotation()', 'java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType()', 'java.lang.reflect.AccessibleObject.getAnnotation()', 'java.lang.reflect.AccessibleObject.getAnnotationsByType()', 'java.lang.reflect.AccessibleObject.getDeclaredAnnotation()', 'java.lang.reflect.AccessibleObject.getDeclaredAnnotationsByType()', 'java.lang.reflect.Parameter.getAnnotation()', 'java.lang.reflect.Parameter.getAnnotationsByType()', 'java.lang.reflect.Parameter.getDeclaredAnnotation()', 'java.lang.reflect.Parameter.getDeclaredAnnotationsByType()', 'java.lang.reflect.Executable.getAnnotation()', 'java.lang.reflect.Executable.getAnnotationsByType()', 'java.lang.reflect.Method.getAnnotation()', 'java.lang.reflect.Constructor.getAnnotation()', 'java.lang.reflect.Field.getAnnotation()', 'java.lang.reflect.Field.getAnnotationsByType()', 'sun.reflect.annotation.AnnotationType.getInstance()', 'sun.reflect.annotation.AnnotationType.invocationHandlerReturnType()', 'java.lang.Class.asSubclass()', 'java.lang.Class.getAnnotation()', 'java.lang.Class.getAnnotationsByType()', 'java.lang.Class.getDeclaredAnnotation()', 'java.lang.Class.getDeclaredAnnotationsByType()', 'org.eclipse.core.runtime.IAdaptable.getAdapter()', 'org.osgi.framework.BundleContext.getServiceReference()', 'org.osgi.framework.Bundle.adapt()', 'java.util.EnumSet.noneOf()', 'java.util.EnumSet.allOf()', 'org.eclipse.ui.services.IServiceLocator.getService()', 'org.eclipse.core.runtime.PlatformObject.getAdapter()', 'org.eclipse.jface.text.hyperlink.AbstractHyperlinkDetector.getAdapter()', 'org.eclipse.egit.ui.internal.history.SWTCommit.getAdapter()', 'org.eclipse.egit.ui.internal.history.GitHistoryPage.getAdapter()', 'org.eclipse.jgit.treewalk.TreeWalk.getTree()', 'org.eclipse.ui.Saveable.getAdapter()', 'org.eclipse.team.core.synchronize.SyncInfo.getAdapter()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceTypedElement.getAdapter()', 'org.eclipse.egit.ui.internal.synchronize.compare.LocalNonWorkspaceTypedElement.getAdapter()', 'org.eclipse.team.core.mapping.provider.MergeContext.getAdapter()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.getAdapter()', 'org.eclipse.team.core.subscribers.SubscriberMergeContext.getAdapter()', 'org.eclipse.team.internal.core.mapping.ResourceVariantFileRevision.getAdapter()', 'org.eclipse.ui.part.WorkbenchPart.getAdapter()', 'org.eclipse.egit.ui.internal.reflog.ReflogItem.getAdapter()', 'org.eclipse.ui.progress.PendingUpdateAdapter.getAdapter()', 'org.eclipse.ui.internal.navigator.extensions.NavigatorContentExtension.getAdapter()', 'org.eclipse.ui.navigator.CommonNavigator.getAdapter()', 'org.eclipse.egit.ui.internal.repository.RepositoriesView.getAdapter()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNode.getAdapter()', 'org.eclipse.ui.views.properties.PropertySheetPage.getAdapter()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommitNote.getAdapter()', 'org.eclipse.egit.ui.internal.commit.RepositoryCommit.getAdapter()', 'org.eclipse.ui.part.MultiPageEditorPart.getAdapter()', 'org.eclipse.ui.part.MultiPageEditorSite.getAdapter()', 'org.eclipse.ui.part.MultiPageEditorSite.getService()', 'org.eclipse.egit.ui.internal.commit.CommitEditor.getAdapter()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInput.getAdapter()', 'org.eclipse.ui.texteditor.AbstractTextEditor.TextEditorSavable.getAdapter()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getAdapter()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getAdapter()', 'org.eclipse.ui.editors.text.TextEditor.getAdapter()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getAdapter()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getAdapter()', 'org.eclipse.egit.ui.internal.blame.BlameOperation.BlameHistoryPageInput.getAdapter()', 'org.eclipse.compare.CompareViewerPane.getAdapter()', 'org.eclipse.compare.CompareViewerSwitchingPane.getAdapter()', 'org.eclipse.compare.CompareEditorInput.getAdapter()', 'org.eclipse.egit.ui.internal.merge.GitMergeEditorInput.getAdapter()', 'org.eclipse.team.internal.ui.synchronize.LocalResourceSaveableComparison.getAdapter()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.getAdapter()', 'org.eclipse.egit.ui.internal.revision.StorageTypedElement.getAdapter()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.getAdapter()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.getAdapter()', 'org.eclipse.egit.ui.internal.revision.EditableRevision.getAdapter()', 'org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput.getAdapter()', 'org.eclipse.egit.ui.internal.staging.StagingFolderEntry.getAdapter()', 'org.eclipse.jface.text.templates.TemplateContext.getAdapter()']"
java.lang.String,"['org.eclipse.egit.ui.UIUtils.getKeystrokeOfBestActiveBindingFor()', 'sun.util.locale.LocaleExtensions.getUnicodeLocaleType()', 'java.net.URI.create()', 'java.net.URI.resolve()', 'java.net.FileNameMap.getContentTypeFor()', 'java.net.URLConnection.getHeaderField()', 'java.net.URLConnection.getRequestProperty()', 'java.net.URLConnection.getDefaultRequestProperty()', 'java.net.URLConnection.guessContentTypeFromName()', 'java.net.InetAddressImpl.lookupAllHostAddr()', 'java.net.InetAddress.getByName()', 'java.net.InetAddress.getAllByName()', 'java.net.InetAddress.loadImpl()', 'java.net.URL.getURLStreamHandler()', 'java.time.format.ResolverStyle.valueOf()', 'java.time.format.TextStyle.valueOf()', 'java.time.format.FormatStyle.valueOf()', 'java.time.format.DecimalStyle.convertNumberToI18N()', 'java.lang.AbstractStringBuilder.append()', 'java.lang.StringBuffer.append()', 'java.lang.StringBuffer.append()', 'java.text.Format.parseObject()', 'java.text.Format.createAttributedCharacterIterator()', 'java.time.format.DateTimeFormatter.ClassicFormat.parseObject()', 'java.time.format.DateTimeFormatter.ofPattern()', 'java.time.Month.valueOf()', 'java.time.chrono.AbstractChronology.of()', 'java.time.DayOfWeek.valueOf()', 'java.time.chrono.IsoEra.valueOf()', 'java.time.temporal.ChronoField.valueOf()', 'java.time.chrono.Chronology.of()', 'java.time.ZoneOffset.of()', 'java.time.ZoneId.of()', 'sun.security.util.Debug.getInstance()', 'java.nio.CharBuffer.put()', 'java.util.jar.Attributes.getValue()', 'java.util.concurrent.TimeUnit.valueOf()', 'java.nio.file.FileStore.getAttribute()', 'java.nio.file.LinkOption.valueOf()', 'java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByName()', 'java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByGroupName()', 'java.nio.file.FileSystem.getPathMatcher()', 'java.nio.file.Path.resolve()', 'java.nio.file.Path.resolveSibling()', 'java.nio.charset.CharsetDecoder.replaceWith()', 'java.nio.charset.spi.CharsetProvider.charsetForName()', 'java.nio.charset.Charset.forName()', 'java.nio.charset.Charset.encode()', 'java.util.zip.ZipFile.getEntry()', 'java.util.jar.JarFile.getJarEntry()', 'java.util.jar.JarFile.getEntry()', 'java.util.jar.JarVerifier.getCerts()', 'java.util.jar.JarVerifier.getCodeSigners()', 'java.util.jar.Manifest.getAttributes()', 'java.util.jar.Manifest.getTrustedAttributes()', 'java.net.URLStreamHandlerFactory.createURLStreamHandler()', 'sun.misc.JarIndex.get()', 'sun.misc.URLClassPath.Loader.getResource()', 'sun.misc.URLClassPath.getResource()', 'sun.misc.URLClassPath.getResources()', 'sun.misc.URLClassPath.pathToURLs()', 'java.lang.Package.getPackage()', 'java.lang.Package.getSystemPackage()', 'java.lang.ClassLoader.loadClass()', 'java.lang.ClassLoader.getClassLoadingLock()', 'java.lang.ClassLoader.findClass()', 'java.lang.ClassLoader.findSystemClass()', 'java.lang.ClassLoader.findLoadedClass()', 'java.lang.ClassLoader.getResource()', 'java.lang.ClassLoader.getResources()', 'java.lang.ClassLoader.findResource()', 'java.lang.ClassLoader.findResources()', 'java.lang.ClassLoader.getSystemResource()', 'java.lang.ClassLoader.getSystemResources()', 'java.lang.ClassLoader.getResourceAsStream()', 'java.lang.ClassLoader.getSystemResourceAsStream()', 'java.lang.ClassLoader.getPackage()', 'java.lang.ClassLoader.findLibrary()', 'java.util.Locale.LanguageRange.parse()', 'java.util.Locale.getUnicodeLocaleType()', 'java.util.Locale.forLanguageTag()', 'java.lang.StringBuilder.append()', 'java.lang.StringBuilder.append()', 'java.lang.String.concat()', 'java.lang.String.split()', 'sun.reflect.generics.factory.GenericsFactory.findTypeVariable()', 'sun.reflect.generics.factory.GenericsFactory.makeNamedType()', 'sun.reflect.generics.repository.AbstractRepository.parse()', 'sun.reflect.generics.repository.ConstructorRepository.parse()', 'sun.reflect.generics.repository.ConstructorRepository.parse()', 'java.lang.annotation.RetentionPolicy.valueOf()', 'java.lang.Class.forName()', 'java.lang.Class.getField()', 'java.lang.Class.getDeclaredField()', 'java.lang.Class.getResourceAsStream()', 'java.lang.Class.getResource()', 'java.lang.Class.getPrimitiveClass()', 'org.eclipse.core.commands.IObjectWithState.getState()', 'org.eclipse.core.commands.NamedHandleObjectWithState.getState()', 'org.eclipse.core.commands.AbstractParameterValueConverter.convertToObject()', 'org.eclipse.core.commands.Command.getParameter()', 'org.eclipse.core.commands.Command.getParameterType()', 'org.eclipse.core.commands.ExecutionEvent.getObjectParameterForExecution()', 'org.eclipse.core.commands.ExecutionEvent.getParameter()', 'org.eclipse.core.resources.IMarker.getAttribute()', 'org.eclipse.core.runtime.IPath.addFileExtension()', 'org.eclipse.core.runtime.IPath.append()', 'org.eclipse.core.runtime.IPath.setDevice()', 'org.eclipse.core.resources.IPathVariableManager.getValue()', 'org.eclipse.core.resources.IPathVariableManager.getURIValue()', 'org.eclipse.core.resources.IPathVariableManager.validateName()', 'org.eclipse.core.runtime.IConfigurationElement.createExecutableExtension()', 'org.eclipse.core.runtime.IConfigurationElement.getAttribute()', 'org.eclipse.core.runtime.IConfigurationElement.getAttributeAsIs()', 'org.eclipse.core.runtime.IConfigurationElement.getChildren()', 'org.eclipse.core.runtime.IConfigurationElement.getValue()', 'org.eclipse.core.runtime.IExtension.getLabel()', 'org.eclipse.core.runtime.IExtensionPoint.getExtension()', 'org.eclipse.core.runtime.IExtensionPoint.getLabel()', 'org.eclipse.core.runtime.PluginVersionIdentifier.validateVersion()', 'java.util.ResourceBundle.Control.getFormats()', 'java.util.ResourceBundle.RBClassLoader.loadClass()', 'java.util.ResourceBundle.RBClassLoader.getResource()', 'java.util.ResourceBundle.RBClassLoader.getResourceAsStream()', 'java.util.ResourceBundle.SingleFormatControl.getFormats()', 'java.util.ResourceBundle.getString()', 'java.util.ResourceBundle.getStringArray()', 'java.util.ResourceBundle.getObject()', 'java.util.ResourceBundle.getBundle()', 'java.util.ResourceBundle.handleGetObject()', 'org.eclipse.core.runtime.IPluginDescriptor.getExtension()', 'org.eclipse.core.runtime.IPluginDescriptor.getExtensionPoint()', 'org.eclipse.core.runtime.IPluginDescriptor.getResourceString()', 'org.osgi.framework.ServiceReference.getProperty()', 'org.osgi.framework.BundleContext.getProperty()', 'org.osgi.framework.BundleContext.installBundle()', 'org.osgi.framework.BundleContext.getServiceReference()', 'org.osgi.framework.BundleContext.getDataFile()', 'org.osgi.framework.BundleContext.createFilter()', 'org.osgi.framework.BundleContext.getBundle()', 'org.osgi.framework.Version.parseVersion()', 'org.osgi.framework.Version.valueOf()', 'org.osgi.framework.Bundle.getResource()', 'org.osgi.framework.Bundle.getHeaders()', 'org.osgi.framework.Bundle.loadClass()', 'org.osgi.framework.Bundle.getResources()', 'org.osgi.framework.Bundle.getEntryPaths()', 'org.osgi.framework.Bundle.getEntry()', 'org.osgi.framework.Bundle.getDataFile()', 'org.eclipse.core.runtime.Preferences.getString()', 'org.eclipse.core.runtime.Preferences.getDefaultString()', 'org.osgi.service.prefs.Preferences.node()', 'org.eclipse.core.runtime.preferences.IEclipsePreferences.node()', 'org.eclipse.core.runtime.preferences.IScopeContext.getNode()', 'org.eclipse.core.resources.IWorkspaceRoot.getProject()', 'org.eclipse.core.resources.IProjectDescription.getBuildConfigReferences()', 'org.eclipse.core.resources.IWorkspace.getFilterMatcherDescriptor()', 'org.eclipse.core.resources.IWorkspace.getNatureDescriptor()', 'org.eclipse.core.resources.IWorkspace.newProjectDescription()', 'org.eclipse.core.resources.IResource.createMarker()', 'org.eclipse.core.resources.IFolder.getFile()', 'org.eclipse.core.resources.IFolder.getFolder()', 'org.eclipse.core.resources.IContainer.findMember()', 'org.eclipse.core.runtime.content.IContentTypeMatcher.findContentTypeFor()', 'org.eclipse.core.runtime.content.IContentTypeMatcher.findContentTypesFor()', 'org.eclipse.core.resources.IProject.getBuildConfig()', 'org.eclipse.core.resources.IProject.getFile()', 'org.eclipse.core.resources.IProject.getFolder()', 'org.eclipse.core.resources.IProject.getNature()', 'org.eclipse.core.resources.IProject.getWorkingLocation()', 'org.eclipse.jgit.lib.AbbreviatedObjectId.fromString()', 'org.eclipse.jgit.lib.ObjectId.fromString()', 'java.util.TimeZone.getTimeZone()', 'java.sql.Timestamp.valueOf()', 'org.eclipse.jgit.util.FS.normalize()', 'org.eclipse.jgit.transport.PushCertificateIdent.parse()', 'org.eclipse.jgit.lib.BatchRefUpdate.getPrefixes()', 'org.eclipse.jgit.lib.RefDatabase.getConflictingNames()', 'org.eclipse.jgit.lib.RefDatabase.getRef()', 'org.eclipse.jgit.lib.RefDatabase.exactRef()', 'org.eclipse.jgit.lib.RefDatabase.getRefs()', 'org.eclipse.jgit.lib.RefDatabase.getRefsByPrefix()', 'org.eclipse.jgit.lib.Config.escapeValue()', 'org.eclipse.jgit.lib.Config.escapeSubsection()', 'org.eclipse.jgit.lib.Config.getSubsections()', 'org.eclipse.jgit.lib.Config.getNames()', 'org.eclipse.jgit.revwalk.RevWalk.newFlag()', 'org.eclipse.jgit.revwalk.RevCommit.getFooterLines()', 'java.util.Properties.getProperty()', 'java.security.Provider.Service.getAttribute()', 'java.security.Provider.getProperty()', 'java.security.MessageDigest.getInstance()', 'org.eclipse.jgit.dircache.DirCache.getEntry()', 'org.eclipse.jgit.dircache.DirCache.getEntriesWithin()', 'org.eclipse.jgit.lib.RepositoryState.valueOf()', 'java.util.Currency.getInstance()', 'java.math.RoundingMode.valueOf()', 'java.text.NumberFormat.parse()', 'java.text.DateFormat.parse()', 'org.eclipse.jgit.util.SystemReader.Default.getenv()', 'org.eclipse.jgit.util.SystemReader.Default.getProperty()', 'org.eclipse.jgit.util.SystemReader.getenv()', 'org.eclipse.jgit.util.SystemReader.getProperty()', 'org.eclipse.jgit.util.SystemReader.getSimpleDateFormat()', 'org.eclipse.jgit.lib.Repository.updateRef()', 'org.eclipse.jgit.lib.Repository.resolve()', 'org.eclipse.jgit.lib.Repository.simplify()', 'org.eclipse.jgit.lib.Repository.exactRef()', 'org.eclipse.jgit.lib.Repository.findRef()', 'org.eclipse.jgit.lib.Repository.normalizeBranchName()', 'org.eclipse.jgit.lib.Repository.shortenRefName()', 'org.eclipse.jgit.lib.Repository.shortenRemoteBranchName()', 'org.eclipse.jgit.lib.Repository.getRemoteName()', 'org.eclipse.jgit.lib.Repository.getReflogReader()', 'org.eclipse.swt.widgets.Display.getData()', 'org.eclipse.swt.widgets.Display.withCrLf()', 'org.eclipse.swt.graphics.GC.stringExtent()', 'org.eclipse.swt.graphics.GC.stringExtentInPixels()', 'org.eclipse.swt.graphics.GC.textExtent()', 'org.eclipse.swt.widgets.Widget.getData()', 'org.eclipse.swt.accessibility.Accessible.colorFromString()', 'org.eclipse.swt.accessibility.Accessible.IIDFromString()', 'org.eclipse.ui.ISelectionService.getSelection()', 'org.eclipse.ui.IEditorRegistry.findEditor()', 'org.eclipse.ui.IEditorRegistry.getDefaultEditor()', 'org.eclipse.ui.IEditorRegistry.getEditors()', 'org.eclipse.ui.IEditorRegistry.getImageDescriptor()', 'org.eclipse.ui.IEditorRegistry.getSystemExternalEditorImageDescriptor()', 'org.eclipse.ui.IPerspectiveRegistry.findPerspectiveWithId()', 'org.eclipse.ui.IPerspectiveRegistry.findPerspectiveWithLabel()', 'org.eclipse.jface.preference.IPreferenceNode.findSubNode()', 'org.eclipse.jface.preference.IPreferenceNode.remove()', 'org.eclipse.jface.preference.PreferenceNode.findSubNode()', 'org.eclipse.jface.preference.PreferenceNode.remove()', 'org.eclipse.jface.preference.PreferenceManager.find()', 'org.eclipse.jface.preference.PreferenceManager.remove()', 'org.eclipse.jface.preference.IPreferenceStore.getDefaultString()', 'org.eclipse.jface.preference.IPreferenceStore.getString()', 'org.eclipse.ui.ISharedImages.getImage()', 'org.eclipse.ui.ISharedImages.getImageDescriptor()', 'org.eclipse.ui.IMemento.createChild()', 'org.eclipse.ui.IMemento.getChild()', 'org.eclipse.ui.IMemento.getChildren()', 'org.eclipse.ui.IMemento.getString()', 'org.eclipse.jface.dialogs.IDialogSettings.addNewSection()', 'org.eclipse.jface.dialogs.IDialogSettings.get()', 'org.eclipse.jface.dialogs.IDialogSettings.getArray()', 'org.eclipse.jface.dialogs.IDialogSettings.getSection()', 'org.eclipse.jface.wizard.IWizard.getPage()', 'org.eclipse.ui.IWorkingSetManager.getWorkingSet()', 'org.eclipse.ui.IDecoratorManager.getBaseLabelProvider()', 'org.eclipse.ui.IDecoratorManager.getLabelDecorator()', 'org.eclipse.ui.IDecoratorManager.getLightweightLabelDecorator()', 'org.eclipse.core.expressions.IEvaluationContext.removeVariable()', 'org.eclipse.core.expressions.IEvaluationContext.getVariable()', 'org.eclipse.ui.activities.IActivityManager.getActivity()', 'org.eclipse.ui.activities.IActivityManager.getCategory()', 'org.eclipse.ui.activities.IActivityManager.getIdentifier()', 'org.eclipse.ui.activities.ITriggerPoint.getStringHint()', 'org.eclipse.ui.activities.ITriggerPointManager.getTriggerPoint()', 'org.eclipse.ui.keys.KeyStroke.getInstance()', 'org.eclipse.jface.bindings.keys.KeyStroke.getInstance()', 'org.eclipse.jface.bindings.keys.KeySequence.getInstance()', 'org.eclipse.ui.keys.KeySequence.getInstance()', 'org.eclipse.ui.commands.ICommandManager.getCategory()', 'org.eclipse.ui.commands.ICommandManager.getCommand()', 'org.eclipse.ui.commands.ICommandManager.getKeyConfiguration()', 'org.eclipse.ui.contexts.IContextManager.getContext()', 'org.eclipse.jface.resource.ColorRegistry.get()', 'org.eclipse.jface.resource.ColorRegistry.getRGB()', 'org.eclipse.jface.resource.ColorRegistry.getColorDescriptor()', 'org.eclipse.jface.resource.FontRegistry.getDescriptor()', 'org.eclipse.jface.resource.FontRegistry.getFontData()', 'org.eclipse.jface.resource.FontRegistry.get()', 'org.eclipse.jface.resource.FontRegistry.getBold()', 'org.eclipse.jface.resource.FontRegistry.getItalic()', 'org.eclipse.ui.themes.ITheme.getString()', 'org.eclipse.ui.themes.IThemeManager.getTheme()', 'org.eclipse.jface.action.IContributionManager.find()', 'org.eclipse.jface.action.IContributionManager.remove()', 'org.eclipse.jface.action.IMenuManager.findMenuUsingPath()', 'org.eclipse.jface.action.IMenuManager.findUsingPath()', 'org.eclipse.ui.IActionBars.getGlobalActionHandler()', 'org.eclipse.ui.browser.IWorkbenchBrowserSupport.createBrowser()', 'org.eclipse.ui.views.IViewRegistry.find()', 'org.eclipse.ui.wizards.IWizardCategory.findWizard()', 'org.eclipse.ui.wizards.IWizardRegistry.findWizard()', 'org.eclipse.ui.wizards.IWizardRegistry.findCategory()', 'org.eclipse.ui.IWorkbench.getElementFactory()', 'org.eclipse.ui.IWorkbenchPartReference.getPartProperty()', 'org.eclipse.ui.IWorkbenchPage.findView()', 'org.eclipse.ui.IWorkbenchPage.findViewReference()', 'org.eclipse.ui.IWorkbenchPage.showView()', 'org.eclipse.jface.action.Action.removeAcceleratorText()', 'org.eclipse.jface.action.Action.removeMnemonics()', 'org.eclipse.jface.action.ContributionManager.find()', 'org.eclipse.jface.action.ContributionManager.remove()', 'org.eclipse.jface.action.MenuManager.findMenuUsingPath()', 'org.eclipse.jface.action.MenuManager.findUsingPath()', 'org.eclipse.swt.custom.StyledText.getModelDelimitedText()', 'org.eclipse.swt.custom.StyledText.getBlockSelectionText()', 'org.eclipse.swt.custom.StyledText.stripMnemonic()', 'org.eclipse.jface.text.IDocument.getPositions()', 'org.eclipse.jface.text.reconciler.IReconciler.getReconcilingStrategy()', 'org.eclipse.jface.text.presentation.IPresentationReconciler.getDamager()', 'org.eclipse.jface.text.presentation.IPresentationReconciler.getRepairer()', 'org.eclipse.jface.text.formatter.IContentFormatter.getFormattingStrategy()', 'org.eclipse.jface.text.contentassist.IContentAssistant.getContentAssistProcessor()', 'org.eclipse.jface.text.information.IInformationPresenter.getInformationProvider()', 'org.eclipse.jface.viewers.Viewer.getData()', 'java.text.Collator.getCollationKey()', 'org.eclipse.egit.ui.internal.history.RenameTracker.reset()', 'org.eclipse.jface.viewers.StyledString.append()', 'org.eclipse.jgit.attributes.Attributes.get()', 'org.eclipse.jgit.attributes.Attributes.getValue()', 'org.eclipse.jgit.treewalk.TreeWalk.getFilterCommand()', 'org.eclipse.jgit.diff.DiffEntry.modify()', 'org.eclipse.jface.dialogs.Dialog.getImage()', 'org.eclipse.jface.wizard.Wizard.getPage()', 'org.eclipse.jface.text.FindReplaceDocumentAdapter.escapeForRegExPattern()', 'org.eclipse.jface.text.source.ContentAssistantFacade.getHandler()', 'org.eclipse.jface.text.IDocumentExtension3.getLegalContentTypes()', 'org.eclipse.jface.text.IDocumentExtension3.getDocumentPartitioner()', 'org.eclipse.jface.text.AbstractDocument.getPositions()', 'org.eclipse.jface.text.AbstractDocument.getDocumentPartitioner()', 'org.eclipse.jface.text.AbstractDocument.getLegalContentTypes()', 'org.eclipse.core.resources.IMarkerDelta.getAttribute()', 'org.eclipse.core.resources.mapping.ModelProvider.getModelProviderDescriptor()', 'org.eclipse.ui.navigator.IExtensionStateModel.getStringProperty()', 'org.eclipse.ui.navigator.IExtensionStateModel.getProperty()', 'org.eclipse.ui.navigator.INavigatorViewerDescriptor.getStringConfigProperty()', 'org.eclipse.ui.navigator.OverridePolicy.get()', 'org.eclipse.ui.navigator.INavigatorContentService.findStateModel()', 'org.eclipse.ui.navigator.INavigatorContentService.getContentExtensionById()', 'org.eclipse.ui.navigator.INavigatorContentService.getContentDescriptorById()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getMappings()', 'org.eclipse.team.core.mapping.ISynchronizationScope.getTraversals()', 'org.eclipse.team.core.ICache.get()', 'org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration.getProperty()', 'org.eclipse.egit.core.synchronize.dto.GitSynchronizeDataSet.getData()', 'org.eclipse.egit.core.synchronize.GitSyncObjectCache.get()', 'org.eclipse.jgit.transport.URIish.setHost()', 'org.eclipse.jgit.transport.URIish.setScheme()', 'org.eclipse.jgit.transport.URIish.setPath()', 'org.eclipse.jgit.transport.URIish.setRawPath()', 'org.eclipse.jgit.transport.URIish.setUser()', 'org.eclipse.jgit.transport.URIish.setPass()', 'org.eclipse.jgit.transport.TagOpt.fromOption()', 'org.eclipse.jgit.transport.TagOpt.valueOf()', 'org.eclipse.egit.ui.internal.clone.GitUrlChecker.sanitizeAsGitUrl()', 'org.eclipse.ui.IWorkbenchPart3.getPartProperty()', 'org.eclipse.ui.part.WorkbenchPart.getPartProperty()', 'org.eclipse.ui.navigator.Priority.get()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.findStateModel()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getContentDescriptorById()', 'org.eclipse.ui.internal.navigator.NavigatorContentService.getContentExtensionById()', 'org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNodeType.valueOf()', 'org.eclipse.jface.viewers.IDecorationContext.getProperty()', 'org.eclipse.egit.ui.internal.repository.CreateBranchPage.getProposedTargetName()', 'org.eclipse.egit.ui.internal.preferences.GitDecoratorPreferencePage.GitModelCommitMockup.getMokeupText()', 'org.eclipse.ui.forms.widgets.Form.getHeadColor()', 'org.eclipse.ui.forms.FormColors.getColor()', 'org.eclipse.ui.forms.editor.FormEditor.setActivePage()', 'org.eclipse.ui.forms.editor.FormEditor.findPage()', 'org.eclipse.jgit.lib.IndexDiff.getIndexMode()', 'org.eclipse.ui.texteditor.ITextEditor.getAction()', 'org.eclipse.ui.internal.texteditor.rulers.RulerColumnTarget.createContentTypeTarget()', 'org.eclipse.ui.internal.texteditor.rulers.RulerColumnTarget.createEditorIdTarget()', 'org.eclipse.ui.internal.texteditor.rulers.RulerColumnTarget.createClassTarget()', 'org.eclipse.ui.texteditor.rulers.RulerColumnRegistry.getColumnDescriptor()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getAction()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getStatusField()', 'org.eclipse.jface.text.source.LineChangeHover.formatSource()', 'org.eclipse.ui.texteditor.IAnnotationImageProvider.getImageDescriptor()', 'org.eclipse.ui.texteditor.AnnotationPreferenceLookup.getAnnotationPreference()', 'org.eclipse.ui.texteditor.AnnotationPreferenceLookup.getAnnotationPreferenceFragment()', 'org.eclipse.jface.preference.PreferenceStore.getDefaultString()', 'org.eclipse.jface.preference.PreferenceStore.getString()', 'org.eclipse.egit.ui.internal.push.PushMode.valueOf()', 'java.util.regex.Matcher.group()', 'java.util.regex.Matcher.quoteReplacement()', 'java.util.regex.Matcher.replaceAll()', 'java.util.regex.Matcher.replaceFirst()', 'java.util.regex.UnicodeProp.valueOf()', 'java.util.regex.UnicodeProp.forName()', 'java.util.regex.UnicodeProp.forPOSIXName()', 'java.util.regex.Pattern.compile()', 'java.util.regex.Pattern.quote()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.formatIssuesInCommitMessage()', 'org.eclipse.core.commands.ParameterizedCommand.getName()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.wrapCommitMessage()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.hardWrap()', 'org.eclipse.jgit.transport.RefSpec.setSource()', 'org.eclipse.jgit.transport.RefSpec.setDestination()', 'org.eclipse.jgit.transport.RefSpec.expandFromSource()', 'org.eclipse.jgit.transport.RefSpec.expandFromDestination()', 'org.eclipse.jface.wizard.ProgressMonitorPart.escapeMetaCharacters()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractiveHandler.modifyCommitMessage()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractiveHandler.valueOf()', 'org.eclipse.egit.ui.internal.rebase.RebaseInteractivePlanContentProvider.valueOf()', 'org.eclipse.jgit.transport.OperationResult.getAdvertisedRef()', 'org.eclipse.jgit.transport.OperationResult.getTrackingRefUpdate()', 'org.eclipse.jgit.transport.PushResult.getRemoteUpdate()', 'org.eclipse.egit.ui.internal.push.RefUpdateElement.shortenRef()', 'org.eclipse.egit.ui.internal.fetch.FetchResultTable.FetchResultAdapter.shortenRef()', 'org.eclipse.jgit.merge.MergeStrategy.get()', 'org.eclipse.egit.ui.internal.blame.AuthorColors.getCommitterRGB()', 'java.nio.file.FileVisitResult.valueOf()', 'org.eclipse.compare.CompareConfiguration.getProperty()', 'org.eclipse.swt.custom.CCombo.stripMnemonic()', 'org.eclipse.swt.widgets.Combo.getSegments()', 'org.eclipse.compare.structuremergeviewer.DiffContainer.findChild()', 'org.eclipse.egit.ui.internal.gerrit.GerritDialogSettings.getSection()', 'org.eclipse.egit.ui.internal.staging.FixedJFaceToolTip.getData()', 'org.eclipse.egit.ui.internal.trace.GitTraceLocation.valueOf()', 'org.eclipse.debug.core.ILaunchConfigurationWorkingCopy.removeAttribute()', 'org.eclipse.debug.core.model.IProcess.getAttribute()', 'org.eclipse.debug.core.ILaunch.getAttribute()', 'org.eclipse.debug.core.sourcelookup.ISourceContainerTypeDelegate.createSourceContainer()', 'org.eclipse.debug.core.sourcelookup.ISourceContainer.findSourceElements()', 'org.eclipse.debug.core.ILaunchConfigurationType.getAttribute()', 'org.eclipse.debug.core.ILaunchConfigurationType.getDelegate()', 'org.eclipse.debug.core.ILaunchConfiguration.copy()', 'org.eclipse.jface.text.templates.TemplateContextType.getResolver()', 'org.eclipse.jface.text.templates.TemplateContext.getVariable()', 'org.eclipse.core.variables.IDynamicVariable.getValue()', 'org.eclipse.team.core.ScmUrlImportDescription.getProperty()', 'org.eclipse.egit.ui.internal.CompareUtils.truncatedRevision()', 'org.eclipse.jface.dialogs.IInputValidator.isValid()', 'org.eclipse.jface.resource.ImageRegistry.get()', 'org.eclipse.jface.resource.ImageRegistry.getDescriptor()', 'org.eclipse.osgi.service.debug.DebugOptions.getOption()', 'org.eclipse.osgi.service.debug.DebugOptions.newDebugTrace()', 'org.eclipse.egit.ui.Activator.createErrorStatus()', 'org.eclipse.egit.ui.Activator.getFont()', 'org.eclipse.egit.ui.Activator.getBoldFont()', 'org.eclipse.egit.ui.UIUtils.getFont()', 'org.eclipse.egit.ui.UIUtils.getBoldFont()', 'org.eclipse.egit.ui.UIUtils.getItalicFont()', 'org.eclipse.egit.ui.UIUtils.createProposalPattern()', 'org.eclipse.egit.ui.UIUtils.getEditorImage()', 'org.eclipse.egit.ui.UIUtils.getDialogSettings()']"
java.util.function.BinaryOperator,['java.util.stream.Stream.reduce()']
java.util.stream.Collector$Characteristics[],['java.util.stream.Collector.of()']
java.util.function.IntFunction,"['java.util.stream.IntStream.flatMap()', 'java.util.stream.Stream.toArray()', 'java.util.stream.IntStream.mapToObj()']"
java.util.function.BiFunction,"['java.util.concurrent.CompletableFuture.thenCombine()', 'java.util.concurrent.CompletionStage.thenCombine()', 'java.util.concurrent.CompletionStage.thenCombine()', 'java.util.concurrent.CompletionStage.thenCombineAsync()', 'java.util.concurrent.CompletionStage.thenCombineAsync()', 'java.util.concurrent.CompletableFuture.thenCombine()', 'java.util.concurrent.CompletableFuture.thenCombine()', 'java.util.concurrent.CompletableFuture.thenCombineAsync()', 'java.util.concurrent.CompletableFuture.thenCombineAsync()', 'java.util.concurrent.CompletableFuture.thenCombineAsync()', 'java.util.concurrent.CompletableFuture.thenCombineAsync()']"
java.util.stream.Collector,['java.util.stream.Stream.collect()']
java.util.function.UnaryOperator,['java.util.stream.Stream.iterate()']
java.util.stream.Stream,['java.util.stream.Stream.concat()']
java.util.function.IntToLongFunction,['java.util.stream.IntStream.mapToLong()']
java.util.function.IntToDoubleFunction,['java.util.stream.IntStream.mapToDouble()']
java.util.function.IntBinaryOperator,['java.util.stream.IntStream.reduce()']
java.util.function.ObjIntConsumer,['java.util.stream.IntStream.collect()']
int[],"['org.eclipse.egit.ui.UIPreferences.intArrayToString()', 'java.util.stream.IntStream.of()', 'java.nio.IntBuffer.wrap()', 'java.nio.IntBuffer.get()', 'java.nio.IntBuffer.put()', 'org.eclipse.jgit.lib.ObjectId.fromRaw()']"
java.util.function.IntSupplier,['java.util.stream.IntStream.generate()']
java.util.stream.IntStream,['java.util.stream.IntStream.concat()']
char,['org.eclipse.jface.viewers.StyledString.insert()']
java.lang.Character,"['sun.util.locale.LocaleExtensions.getExtensionValue()', 'sun.util.locale.LocaleExtensions.getExtension()']"
java.net.URI,['org.eclipse.core.resources.IWorkspace.validateProjectLocationURI()']
java.net.URLConnection,['java.net.ContentHandler.getContent()']
java.lang.Class[],"['java.lang.Class.getDeclaredConstructor()', 'java.net.URLConnection.getContent()', 'java.net.URL.getContent()', 'java.lang.Class.getConstructor()']"
java.io.InputStream,"['org.eclipse.jgit.lib.ObjectInserter.newPackParser()', 'java.net.URLConnection.guessContentTypeFromStream()', 'org.eclipse.core.resources.IWorkspace.loadProjectDescription()', 'org.eclipse.jgit.lib.ObjectInserter.Filter.newPackParser()', 'org.eclipse.jgit.lib.ObjectInserter.Formatter.newPackParser()']"
byte[],"['org.eclipse.jgit.treewalk.TreeWalk.pathOf()', 'java.nio.ByteBuffer.wrap()', 'java.nio.ByteBuffer.wrap()', 'java.nio.ByteBuffer.wrap()', 'java.nio.ByteBuffer.get()', 'java.nio.ByteBuffer.get()', 'java.nio.ByteBuffer.get()', 'java.nio.ByteBuffer.put()', 'java.nio.ByteBuffer.put()', 'java.nio.ByteBuffer.put()', 'java.lang.ClassLoader.defineClass()', 'java.lang.ClassLoader.defineClass()', 'java.lang.ClassLoader.defineClass()', 'org.eclipse.jgit.lib.AbbreviatedObjectId.fromString()', 'org.eclipse.jgit.lib.AbbreviatedObjectId.fromString()', 'org.eclipse.jgit.lib.AbbreviatedObjectId.fromString()']"
boolean,"['org.eclipse.egit.core.RepositoryUtil.mapCommitToRef()', 'org.eclipse.egit.ui.internal.branch.BranchOperationUI.checkout()', 'org.eclipse.egit.ui.internal.branch.BranchOperationUI.checkout()', 'org.eclipse.egit.ui.internal.branch.BranchOperationUI.checkout()', 'org.eclipse.egit.ui.internal.ValidationUtils.getRefNameInputValidator()', 'org.eclipse.egit.ui.internal.ValidationUtils.getRefNameInputValidator()', 'org.eclipse.egit.ui.internal.ValidationUtils.getRefNameInputValidator()']"
java.net.URL,"['org.eclipse.jface.resource.ImageDescriptor.createFromURL()', 'java.net.URLStreamHandler.openConnection()', 'java.net.URLStreamHandler.getHostAddress()', 'java.net.URLStreamHandler.toExternalForm()', 'java.util.jar.JarFile.getCodeSources()', 'java.util.jar.JarVerifier.getUnsignedCS()', 'sun.misc.URLClassPath.checkURL()']"
java.net.Proxy,['java.net.URL.openConnection()']
java.time.temporal.Temporal,"['java.time.Instant.adjustInto()', 'java.time.temporal.TemporalAmount.addTo()', 'java.time.temporal.TemporalAmount.subtractFrom()', 'java.time.Duration.addTo()', 'java.time.Duration.subtractFrom()', 'java.time.temporal.TemporalAdjuster.adjustInto()', 'java.time.chrono.Era.adjustInto()', 'java.time.chrono.ChronoPeriod.addTo()', 'java.time.chrono.ChronoPeriod.subtractFrom()', 'java.time.Month.adjustInto()', 'java.time.DayOfWeek.adjustInto()', 'java.time.OffsetTime.adjustInto()', 'java.time.OffsetDateTime.adjustInto()', 'java.time.Period.addTo()', 'java.time.Period.subtractFrom()', 'java.time.LocalDate.adjustInto()', 'java.time.LocalTime.adjustInto()', 'java.time.chrono.ChronoLocalDate.adjustInto()', 'java.time.chrono.ChronoLocalDateTime.adjustInto()', 'java.time.LocalDateTime.adjustInto()', 'java.time.ZoneOffset.adjustInto()']"
java.time.temporal.TemporalUnit,"['java.time.Instant.plus()', 'java.time.Duration.of()', 'java.time.Duration.of()', 'java.time.Duration.plus()', 'java.time.Duration.plus()', 'java.time.Duration.minus()', 'java.time.Duration.minus()', 'java.time.temporal.Temporal.plus()', 'java.time.temporal.Temporal.plus()', 'java.time.temporal.Temporal.minus()', 'java.time.temporal.Temporal.minus()', 'java.time.chrono.ChronoZonedDateTime.plus()', 'java.time.chrono.ChronoZonedDateTime.plus()', 'java.time.chrono.ChronoZonedDateTime.minus()', 'java.time.chrono.ChronoZonedDateTime.minus()', 'java.time.chrono.ChronoZonedDateTime.minus()', 'java.time.chrono.ChronoZonedDateTime.minus()', 'java.time.chrono.ChronoZonedDateTime.plus()', 'java.time.chrono.ChronoZonedDateTime.plus()', 'java.time.OffsetTime.plus()', 'java.time.OffsetTime.plus()', 'java.time.OffsetTime.minus()', 'java.time.OffsetTime.minus()', 'java.time.OffsetTime.minus()', 'java.time.OffsetTime.minus()', 'java.time.OffsetTime.plus()', 'java.time.OffsetTime.plus()', 'java.time.OffsetDateTime.plus()', 'java.time.OffsetDateTime.plus()', 'java.time.OffsetDateTime.minus()', 'java.time.OffsetDateTime.minus()', 'java.time.OffsetDateTime.minus()', 'java.time.OffsetDateTime.minus()', 'java.time.OffsetDateTime.plus()', 'java.time.OffsetDateTime.plus()', 'java.time.ZonedDateTime.plus()', 'java.time.ZonedDateTime.plus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.plus()', 'java.time.ZonedDateTime.plus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.plus()', 'java.time.ZonedDateTime.plus()', 'java.time.LocalDate.plus()', 'java.time.LocalDate.plus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.plus()', 'java.time.LocalDate.plus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.plus()', 'java.time.LocalDate.plus()', 'java.time.LocalTime.plus()', 'java.time.LocalTime.plus()', 'java.time.LocalTime.minus()', 'java.time.LocalTime.minus()', 'java.time.LocalTime.minus()', 'java.time.LocalTime.minus()', 'java.time.LocalTime.plus()', 'java.time.LocalTime.plus()', 'java.time.chrono.ChronoLocalDate.plus()', 'java.time.chrono.ChronoLocalDate.plus()', 'java.time.chrono.ChronoLocalDate.minus()', 'java.time.chrono.ChronoLocalDate.minus()', 'java.time.chrono.ChronoLocalDate.minus()', 'java.time.chrono.ChronoLocalDate.minus()', 'java.time.chrono.ChronoLocalDate.plus()', 'java.time.chrono.ChronoLocalDate.plus()', 'java.time.chrono.ChronoLocalDateTime.plus()', 'java.time.chrono.ChronoLocalDateTime.plus()', 'java.time.chrono.ChronoLocalDateTime.minus()', 'java.time.chrono.ChronoLocalDateTime.minus()', 'java.time.chrono.ChronoLocalDateTime.minus()', 'java.time.chrono.ChronoLocalDateTime.minus()', 'java.time.chrono.ChronoLocalDateTime.plus()', 'java.time.chrono.ChronoLocalDateTime.plus()', 'java.time.LocalDateTime.plus()', 'java.time.LocalDateTime.plus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.plus()', 'java.time.LocalDateTime.plus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.plus()', 'java.time.LocalDateTime.plus()', 'java.time.Instant.plus()', 'java.time.Instant.plus()', 'java.time.Instant.minus()', 'java.time.Instant.minus()', 'java.time.Instant.minus()', 'java.time.Instant.minus()']"
java.time.temporal.TemporalAmount,"['java.time.Instant.plus()', 'java.time.Duration.from()', 'java.time.temporal.Temporal.plus()', 'java.time.temporal.Temporal.minus()', 'java.time.chrono.ChronoPeriod.plus()', 'java.time.chrono.ChronoPeriod.minus()', 'java.time.chrono.ChronoZonedDateTime.plus()', 'java.time.chrono.ChronoZonedDateTime.minus()', 'java.time.chrono.ChronoZonedDateTime.minus()', 'java.time.chrono.ChronoZonedDateTime.plus()', 'java.time.OffsetTime.plus()', 'java.time.OffsetTime.minus()', 'java.time.OffsetTime.minus()', 'java.time.OffsetTime.plus()', 'java.time.OffsetDateTime.plus()', 'java.time.OffsetDateTime.minus()', 'java.time.OffsetDateTime.minus()', 'java.time.OffsetDateTime.plus()', 'java.time.ZonedDateTime.plus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.plus()', 'java.time.ZonedDateTime.minus()', 'java.time.ZonedDateTime.plus()', 'java.time.Period.from()', 'java.time.Period.plus()', 'java.time.Period.minus()', 'java.time.Period.minus()', 'java.time.Period.plus()', 'java.time.LocalDate.plus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.plus()', 'java.time.LocalDate.minus()', 'java.time.LocalDate.plus()', 'java.time.LocalTime.plus()', 'java.time.LocalTime.minus()', 'java.time.LocalTime.minus()', 'java.time.LocalTime.plus()', 'java.time.chrono.ChronoLocalDate.plus()', 'java.time.chrono.ChronoLocalDate.minus()', 'java.time.chrono.ChronoLocalDate.minus()', 'java.time.chrono.ChronoLocalDate.plus()', 'java.time.chrono.ChronoLocalDateTime.plus()', 'java.time.chrono.ChronoLocalDateTime.minus()', 'java.time.chrono.ChronoLocalDateTime.minus()', 'java.time.chrono.ChronoLocalDateTime.plus()', 'java.time.LocalDateTime.plus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.plus()', 'java.time.LocalDateTime.minus()', 'java.time.LocalDateTime.plus()', 'java.time.Instant.plus()', 'java.time.Instant.minus()', 'java.time.Instant.minus()']"
java.lang.CharSequence,"['java.util.regex.Pattern.splitAsStream()', 'java.time.Duration.parse()', 'java.lang.Appendable.append()', 'java.lang.AbstractStringBuilder.append()', 'java.lang.AbstractStringBuilder.append()', 'java.lang.StringBuffer.append()', 'java.lang.StringBuffer.append()', 'java.lang.StringBuffer.append()', 'java.time.format.DateTimeFormatter.parse()', 'java.time.OffsetTime.parse()', 'java.time.OffsetDateTime.parse()', 'java.time.ZonedDateTime.parse()', 'java.time.Period.parse()', 'java.time.LocalDate.parse()', 'java.time.LocalTime.parse()', 'java.time.LocalDateTime.parse()', 'java.time.Instant.parse()', 'java.nio.CharBuffer.wrap()', 'java.nio.CharBuffer.append()', 'java.nio.CharBuffer.append()', 'java.lang.StringBuilder.append()', 'java.lang.StringBuilder.append()', 'java.lang.StringBuilder.append()', 'java.io.PrintStream.append()', 'java.io.PrintStream.append()', 'java.io.Writer.append()', 'java.io.Writer.append()', 'java.io.PrintWriter.append()', 'java.io.PrintWriter.append()', 'java.io.PrintWriter.append()', 'java.util.regex.Matcher.reset()', 'java.util.regex.Pattern.matcher()', 'java.util.regex.Pattern.split()']"
java.time.Duration,"['java.time.Clock.offset()', 'java.time.Clock.tick()', 'java.time.Clock.tick()']"
java.io.DataInput,"['java.time.Instant.readExternal()', 'java.time.Duration.readExternal()', 'java.time.chrono.AbstractChronology.readExternal()', 'java.time.Period.readExternal()', 'java.time.LocalDate.readExternal()', 'java.time.LocalTime.readExternal()', 'java.time.LocalDateTime.readExternal()', 'java.time.zone.ZoneOffsetTransition.readExternal()', 'java.time.zone.ZoneRules.readExternal()', 'java.time.ZoneOffset.readExternal()']"
java.util.Locale,"['java.text.Collator.getInstance()', 'java.time.temporal.TemporalField.getDisplayName()', 'java.time.format.DecimalStyle.of()', 'java.time.format.DateTimeFormatter.withLocale()', 'java.time.chrono.AbstractChronology.ofLocale()', 'java.time.temporal.ChronoField.getDisplayName()', 'java.time.chrono.Chronology.ofLocale()', 'java.nio.charset.Charset.displayName()', 'java.util.Locale.getDisplayLanguage()', 'java.util.Locale.getDisplayScript()', 'java.util.Locale.getDisplayCountry()', 'java.util.Locale.getDisplayVariant()', 'java.util.Locale.getDisplayName()', 'java.lang.String.toLowerCase()', 'java.lang.String.toUpperCase()', 'java.util.TimeZone.getDisplayName()', 'java.util.Calendar.getInstance()', 'java.util.Currency.getInstance()', 'java.util.Currency.getSymbol()', 'java.util.Currency.getDisplayName()', 'java.text.NumberFormat.getInstance()', 'java.text.NumberFormat.getNumberInstance()', 'java.text.NumberFormat.getIntegerInstance()', 'java.text.NumberFormat.getCurrencyInstance()', 'java.text.NumberFormat.getPercentInstance()', 'java.text.NumberFormat.getScientificInstance()', 'java.text.DateFormatSymbols.getInstance()', 'java.text.DateFormatSymbols.getInstanceRef()']"
java.time.temporal.TemporalAccessor,"['java.time.Instant.from()', 'java.time.temporal.TemporalField.rangeRefinedBy()', 'java.time.temporal.TemporalQuery.queryFrom()', 'java.time.format.DateTimeFormatter.format()', 'java.time.Month.from()', 'java.time.chrono.ChronoZonedDateTime.from()', 'java.time.DayOfWeek.from()', 'java.time.OffsetTime.from()', 'java.time.OffsetDateTime.from()', 'java.time.ZonedDateTime.from()', 'java.time.temporal.ChronoField.rangeRefinedBy()', 'java.time.chrono.IsoChronology.date()', 'java.time.chrono.IsoChronology.localDateTime()', 'java.time.chrono.IsoChronology.zonedDateTime()', 'java.time.chrono.IsoChronology.zonedDateTime()', 'java.time.chrono.IsoChronology.localDateTime()', 'java.time.chrono.IsoChronology.date()', 'java.time.LocalDate.from()', 'java.time.LocalTime.from()', 'java.time.chrono.ChronoLocalDate.from()', 'java.time.chrono.Chronology.from()', 'java.time.chrono.Chronology.date()', 'java.time.chrono.Chronology.localDateTime()', 'java.time.chrono.Chronology.zonedDateTime()', 'java.time.chrono.ChronoLocalDateTime.from()', 'java.time.LocalDateTime.from()', 'java.time.ZoneOffset.from()', 'java.time.ZoneId.from()']"
java.util.Map,"['org.eclipse.debug.core.ILaunchConfiguration.getAttribute()', 'java.time.ZoneId.of()', 'java.time.ZoneId.of()', 'java.util.Locale.LanguageRange.parse()', 'java.util.Locale.LanguageRange.parse()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetLabelProvider.formatName()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetLabelProvider.formatName()']"
java.time.format.ResolverStyle,"['java.time.chrono.Chronology.resolveDate()', 'java.time.chrono.AbstractChronology.resolveDate()', 'java.time.chrono.AbstractChronology.resolveDate()', 'java.time.chrono.AbstractChronology.resolveYearOfEra()', 'java.time.chrono.AbstractChronology.resolveYearOfEra()', 'java.time.chrono.AbstractChronology.resolveYMD()', 'java.time.chrono.AbstractChronology.resolveYMD()', 'java.time.chrono.AbstractChronology.resolveYD()', 'java.time.chrono.AbstractChronology.resolveYD()', 'java.time.chrono.AbstractChronology.resolveYMAA()', 'java.time.chrono.AbstractChronology.resolveYMAA()', 'java.time.chrono.AbstractChronology.resolveYMAD()', 'java.time.chrono.AbstractChronology.resolveYMAD()', 'java.time.chrono.AbstractChronology.resolveYAA()', 'java.time.chrono.AbstractChronology.resolveYAA()', 'java.time.chrono.AbstractChronology.resolveYAD()', 'java.time.chrono.AbstractChronology.resolveYAD()', 'java.time.chrono.IsoChronology.resolveDate()', 'java.time.chrono.IsoChronology.resolveDate()', 'java.time.chrono.IsoChronology.resolveYearOfEra()', 'java.time.chrono.IsoChronology.resolveYearOfEra()', 'java.time.chrono.IsoChronology.resolveYMD()', 'java.time.chrono.IsoChronology.resolveYMD()', 'java.time.chrono.IsoChronology.resolveYMD()', 'java.time.chrono.IsoChronology.resolveYMD()', 'java.time.chrono.IsoChronology.resolveYearOfEra()', 'java.time.chrono.IsoChronology.resolveYearOfEra()', 'java.time.chrono.IsoChronology.resolveDate()', 'java.time.chrono.IsoChronology.resolveDate()']"
java.time.temporal.TemporalField,"['java.time.Instant.with()', 'java.time.temporal.Temporal.with()', 'java.time.temporal.Temporal.with()', 'java.time.chrono.ChronoZonedDateTime.with()', 'java.time.chrono.ChronoZonedDateTime.with()', 'java.time.chrono.ChronoZonedDateTime.with()', 'java.time.chrono.ChronoZonedDateTime.with()', 'java.time.OffsetTime.with()', 'java.time.OffsetTime.with()', 'java.time.OffsetTime.with()', 'java.time.OffsetTime.with()', 'java.time.OffsetDateTime.with()', 'java.time.OffsetDateTime.with()', 'java.time.OffsetDateTime.with()', 'java.time.OffsetDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.LocalDate.with()', 'java.time.LocalDate.with()', 'java.time.LocalDate.with()', 'java.time.LocalDate.with()', 'java.time.LocalDate.with()', 'java.time.LocalDate.with()', 'java.time.LocalTime.with()', 'java.time.LocalTime.with()', 'java.time.LocalTime.with()', 'java.time.LocalTime.with()', 'java.time.chrono.ChronoLocalDate.with()', 'java.time.chrono.ChronoLocalDate.with()', 'java.time.chrono.ChronoLocalDate.with()', 'java.time.chrono.ChronoLocalDate.with()', 'java.time.chrono.ChronoLocalDateTime.with()', 'java.time.chrono.ChronoLocalDateTime.with()', 'java.time.chrono.ChronoLocalDateTime.with()', 'java.time.chrono.ChronoLocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.Instant.with()', 'java.time.Instant.with()']"
java.time.temporal.TemporalQuery,"['java.time.Instant.query()', 'java.time.temporal.TemporalAccessor.query()', 'java.time.chrono.Era.query()', 'java.time.format.DateTimeFormatter.toFormat()', 'java.time.Month.query()', 'java.time.chrono.ChronoZonedDateTime.query()', 'java.time.DayOfWeek.query()', 'java.time.OffsetTime.query()', 'java.time.OffsetDateTime.query()', 'java.time.ZonedDateTime.query()', 'java.time.LocalDate.query()', 'java.time.LocalTime.query()', 'java.time.chrono.ChronoLocalDate.query()', 'java.time.chrono.ChronoLocalDateTime.query()', 'java.time.LocalDateTime.query()', 'java.time.ZoneOffset.query()']"
java.time.temporal.TemporalAdjuster,"['java.time.Instant.with()', 'java.time.temporal.Temporal.with()', 'java.time.chrono.ChronoZonedDateTime.with()', 'java.time.chrono.ChronoZonedDateTime.with()', 'java.time.OffsetTime.with()', 'java.time.OffsetTime.with()', 'java.time.OffsetDateTime.with()', 'java.time.OffsetDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.ZonedDateTime.with()', 'java.time.LocalDate.with()', 'java.time.LocalDate.with()', 'java.time.LocalDate.with()', 'java.time.LocalTime.with()', 'java.time.LocalTime.with()', 'java.time.chrono.ChronoLocalDate.with()', 'java.time.chrono.ChronoLocalDate.with()', 'java.time.chrono.ChronoLocalDateTime.with()', 'java.time.chrono.ChronoLocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.LocalDateTime.with()', 'java.time.Instant.with()']"
java.time.format.TextStyle,"['java.time.ZoneId.getDisplayName()', 'java.time.chrono.Era.getDisplayName()', 'java.time.chrono.Era.getDisplayName()', 'java.time.Month.getDisplayName()', 'java.time.Month.getDisplayName()', 'java.time.DayOfWeek.getDisplayName()', 'java.time.DayOfWeek.getDisplayName()', 'java.time.chrono.Chronology.getDisplayName()', 'java.time.chrono.Chronology.getDisplayName()']"
java.time.chrono.ChronoLocalDate,"['java.time.chrono.ChronoLocalDate.until()', 'java.time.LocalDate.until()', 'java.time.LocalDate.until()']"
java.lang.StringBuffer,"['java.util.regex.Matcher.appendTail()', 'java.lang.AbstractStringBuilder.append()', 'java.lang.StringBuffer.append()', 'java.lang.StringBuffer.append()', 'java.lang.StringBuilder.append()', 'java.lang.StringBuilder.append()']"
java.lang.AbstractStringBuilder,"['java.lang.StringBuffer.append()', 'java.lang.AbstractStringBuilder.append()', 'java.lang.StringBuffer.append()']"
char[],['org.eclipse.jface.viewers.StyledString.append()']
float,['org.eclipse.swt.graphics.FontData.win32_new()']
java.text.AttributedCharacterIterator$Attribute,['java.text.Format.createAttributedCharacterIterator()']
java.text.FieldPosition,"['java.text.SimpleDateFormat.format()', 'java.text.DateFormat.format()', 'java.text.DateFormat.format()', 'java.text.DateFormat.format()']"
java.text.ParsePosition,"['java.text.SimpleDateFormat.parse()', 'java.text.Format.parseObject()', 'java.text.Format.parseObject()', 'java.time.format.DateTimeFormatter.ClassicFormat.parseObject()', 'java.time.format.DateTimeFormatter.ClassicFormat.parseObject()', 'java.text.NumberFormat.parseObject()', 'java.text.NumberFormat.parseObject()', 'java.text.NumberFormat.parse()', 'java.text.NumberFormat.parse()', 'java.text.DateFormat.parse()', 'java.text.DateFormat.parse()', 'java.text.DateFormat.parseObject()', 'java.text.DateFormat.parseObject()']"
java.text.AttributedCharacterIterator[],['java.text.Format.createAttributedCharacterIterator()']
java.text.AttributedCharacterIterator,['java.text.Format.createAttributedCharacterIterator()']
java.time.format.FormatStyle,['java.time.format.DateTimeFormatter.ofLocalizedDateTime()']
java.time.format.DecimalStyle,['java.time.format.DateTimeFormatter.withDecimalStyle()']
java.time.chrono.Chronology,['java.time.chrono.AbstractChronology.registerChrono()']
java.time.ZoneId,"['java.util.TimeZone.getTimeZone()', 'java.time.format.DateTimeFormatter.withZone()', 'java.time.chrono.ChronoZonedDateTime.withZoneSameLocal()', 'java.time.chrono.ChronoZonedDateTime.withZoneSameInstant()', 'java.time.OffsetTime.now()', 'java.time.OffsetDateTime.now()', 'java.time.OffsetDateTime.atZoneSameInstant()', 'java.time.OffsetDateTime.atZoneSimilarLocal()', 'java.time.ZonedDateTime.now()', 'java.time.ZonedDateTime.withZoneSameLocal()', 'java.time.ZonedDateTime.withZoneSameInstant()', 'java.time.ZonedDateTime.withZoneSameInstant()', 'java.time.ZonedDateTime.withZoneSameLocal()', 'java.time.chrono.IsoChronology.dateNow()', 'java.time.chrono.IsoChronology.dateNow()', 'java.time.LocalDate.now()', 'java.time.LocalDate.atStartOfDay()', 'java.time.LocalTime.now()', 'java.time.chrono.Chronology.dateNow()', 'java.time.chrono.ChronoLocalDateTime.atZone()', 'java.time.LocalDateTime.now()', 'java.time.LocalDateTime.atZone()', 'java.time.LocalDateTime.atZone()', 'java.time.Clock.FixedClock.withZone()', 'java.time.Clock.OffsetClock.withZone()', 'java.time.Clock.SystemClock.withZone()', 'java.time.Clock.TickClock.withZone()', 'java.time.Clock.system()', 'java.time.Clock.tickSeconds()', 'java.time.Clock.tickMinutes()', 'java.time.Clock.withZone()', 'java.time.Instant.atZone()']"
java.time.temporal.TemporalField[],['java.time.format.DateTimeFormatter.withResolverFields()']
java.util.Set,"['org.eclipse.debug.core.ILaunchConfiguration.getPreferredDelegate()', 'java.time.format.DateTimeFormatter.withResolverFields()', 'org.eclipse.debug.core.ILaunchDelegate.getPerspectiveId()', 'org.eclipse.debug.core.ILaunchConfigurationType.getDelegates()', 'org.eclipse.debug.core.ILaunchConfigurationType.getPreferredDelegate()']"
java.time.temporal.TemporalQuery[],['java.time.format.DateTimeFormatter.parseBest()']
java.time.format.DateTimeFormatter,"['java.time.LocalDateTime.format()', 'java.time.chrono.ChronoZonedDateTime.format()', 'java.time.OffsetTime.format()', 'java.time.OffsetDateTime.format()', 'java.time.ZonedDateTime.format()', 'java.time.LocalDate.format()', 'java.time.LocalTime.format()', 'java.time.chrono.ChronoLocalDate.format()', 'java.time.chrono.ChronoLocalDateTime.format()']"
java.time.Clock,"['java.time.Instant.now()', 'java.time.OffsetTime.now()', 'java.time.OffsetDateTime.now()', 'java.time.ZonedDateTime.now()', 'java.time.chrono.IsoChronology.dateNow()', 'java.time.chrono.IsoChronology.dateNow()', 'java.time.LocalDate.now()', 'java.time.LocalTime.now()', 'java.time.chrono.Chronology.dateNow()', 'java.time.LocalDateTime.now()']"
java.time.LocalTime,['java.time.LocalDateTime.of()']
java.time.ZoneOffset,"['java.time.Instant.atOffset()', 'java.time.OffsetTime.withOffsetSameLocal()', 'java.time.OffsetTime.withOffsetSameInstant()', 'java.time.OffsetDateTime.withOffsetSameLocal()', 'java.time.OffsetDateTime.withOffsetSameInstant()', 'java.time.LocalTime.atOffset()', 'java.time.chrono.ChronoLocalDateTime.toInstant()', 'java.time.LocalDateTime.atOffset()', 'java.time.zone.ZoneRules.of()']"
java.time.Instant,"['java.sql.Timestamp.from()', 'java.time.zone.ZoneRules.getOffset()', 'java.time.zone.ZoneRules.getStandardOffset()', 'java.time.zone.ZoneRules.getDaylightSavings()', 'java.time.zone.ZoneRules.nextTransition()', 'java.time.zone.ZoneRules.previousTransition()', 'java.util.Date.from()', 'java.nio.file.attribute.FileTime.from()']"
java.time.LocalDate,['java.time.LocalDateTime.of()']
java.io.ObjectInput,"['java.time.ZonedDateTime.readExternal()', 'java.time.OffsetTime.readExternal()', 'java.time.OffsetDateTime.readExternal()']"
java.time.LocalDateTime,"['java.sql.Timestamp.valueOf()', 'java.time.zone.ZoneRules.getOffset()', 'java.time.zone.ZoneRules.getValidOffsets()', 'java.time.zone.ZoneRules.getTransition()']"
java.time.chrono.Era,"['java.time.chrono.Chronology.dateYearDay()', 'java.time.chrono.IsoChronology.dateYearDay()', 'java.time.chrono.IsoChronology.dateYearDay()', 'java.time.chrono.IsoChronology.dateYearDay()', 'java.time.chrono.IsoChronology.dateYearDay()', 'java.time.chrono.IsoChronology.dateYearDay()', 'java.time.chrono.IsoChronology.dateYearDay()']"
java.time.temporal.ChronoField,"['java.time.chrono.Chronology.range()', 'java.time.chrono.IsoChronology.range()']"
java.time.Month,['java.time.LocalDateTime.of()']
java.time.OffsetTime,['java.time.LocalDate.atTime()']
java.util.List,['org.eclipse.debug.core.ILaunchConfiguration.getAttribute()']
java.util.Random,['java.math.BigInteger.probablePrime()']
java.math.BigInteger,"['sun.security.util.Debug.toHexString()', 'java.math.BigInteger.add()', 'java.math.BigInteger.subtract()', 'java.math.BigInteger.multiply()', 'java.math.BigInteger.divide()', 'java.math.BigInteger.divideAndRemainder()', 'java.math.BigInteger.remainder()', 'java.math.BigInteger.gcd()', 'java.math.BigInteger.mod()', 'java.math.BigInteger.modInverse()', 'java.math.BigInteger.and()', 'java.math.BigInteger.or()', 'java.math.BigInteger.xor()', 'java.math.BigInteger.andNot()', 'java.math.BigInteger.min()', 'java.math.BigInteger.max()']"
java.security.ProtectionDomain[],['java.security.DomainCombiner.combine()']
java.security.PrivilegedAction,"['java.security.ProtectionDomain.JavaSecurityAccessImpl.doIntersectionPrivilege()', 'sun.misc.JavaSecurityAccess.doIntersectionPrivilege()', 'sun.misc.JavaSecurityAccess.doIntersectionPrivilege()']"
java.security.AccessControlContext,"['java.security.ProtectionDomain.JavaSecurityAccessImpl.doIntersectionPrivilege()', 'sun.misc.JavaSecurityAccess.doIntersectionPrivilege()', 'sun.misc.JavaSecurityAccess.doIntersectionPrivilege()']"
java.nio.CharBuffer,"['java.nio.charset.Charset.encode()', 'java.nio.CharBuffer.put()', 'java.nio.charset.CharsetDecoder.flush()', 'java.nio.charset.CharsetDecoder.implFlush()', 'java.nio.charset.CharsetEncoder.encode()']"
short[],"['java.nio.ShortBuffer.put()', 'java.nio.ShortBuffer.wrap()', 'java.nio.ShortBuffer.get()']"
short,['org.eclipse.swt.widgets.IME.getDisplayAttribute()']
java.nio.ShortBuffer,['java.nio.ShortBuffer.put()']
java.nio.IntBuffer,['java.nio.IntBuffer.put()']
java.nio.LongBuffer,['java.nio.LongBuffer.put()']
float[],"['java.nio.FloatBuffer.put()', 'java.nio.FloatBuffer.wrap()', 'java.nio.FloatBuffer.get()']"
java.nio.FloatBuffer,['java.nio.FloatBuffer.put()']
java.nio.DoubleBuffer,['java.nio.DoubleBuffer.put()']
byte,['java.nio.ByteBuffer.put()']
java.nio.ByteBuffer,['java.lang.ClassLoader.defineClass()']
java.nio.ByteOrder,['java.nio.ByteBuffer.order()']
java.util.jar.Attributes$Name,['java.util.jar.Attributes.getValue()']
java.util.concurrent.TimeUnit,"['java.util.concurrent.CompletableFuture.get()', 'java.nio.file.attribute.FileTime.from()', 'java.nio.file.attribute.FileTime.from()', 'java.nio.file.WatchService.poll()', 'java.nio.file.WatchService.poll()', 'java.util.concurrent.Future.get()', 'java.util.concurrent.Future.get()', 'java.util.concurrent.ForkJoinTask.get()', 'java.util.concurrent.ForkJoinTask.get()']"
java.nio.file.attribute.FileTime,"['java.util.zip.ZipEntry.setCreationTime()', 'java.util.zip.ZipEntry.setLastModifiedTime()', 'java.util.zip.ZipEntry.setLastAccessTime()']"
java.nio.file.WatchService,"['java.nio.file.Path.register()', 'java.nio.file.Watchable.register()', 'java.nio.file.Watchable.register()']"
java.nio.file.WatchEvent$Kind[],"['java.nio.file.Path.register()', 'java.nio.file.Watchable.register()', 'java.nio.file.Watchable.register()']"
java.nio.file.WatchEvent$Modifier[],"['java.nio.file.Path.register()', 'java.nio.file.Watchable.register()', 'java.nio.file.Watchable.register()', 'java.nio.file.Watchable.register()']"
java.util.concurrent.Callable,"['java.util.concurrent.ForkJoinTask.adapt()', 'java.util.concurrent.ExecutorService.submit()', 'java.util.concurrent.AbstractExecutorService.newTaskFor()', 'java.util.concurrent.AbstractExecutorService.submit()', 'java.util.concurrent.ForkJoinPool.submit()', 'java.util.concurrent.ForkJoinPool.newTaskFor()', 'java.util.concurrent.ForkJoinPool.submit()']"
java.util.Collection,['org.eclipse.egit.ui.internal.branch.LaunchFinder.getRunningLaunchConfiguration()']
java.nio.file.Path,"['org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.postVisitDirectory()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.visitFileFailed()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.visitFileFailed()']"
java.util.concurrent.ExecutorService,"['java.nio.file.spi.FileSystemProvider.newAsynchronousFileChannel()', 'java.nio.channels.AsynchronousFileChannel.open()', 'java.nio.channels.AsynchronousFileChannel.open()', 'java.nio.channels.AsynchronousFileChannel.open()', 'java.nio.channels.AsynchronousFileChannel.open()']"
java.nio.file.attribute.FileAttribute[],"['java.nio.file.spi.FileSystemProvider.newByteChannel()', 'java.nio.channels.FileChannel.open()', 'java.nio.channels.FileChannel.open()', 'java.nio.channels.FileChannel.open()', 'java.nio.file.spi.FileSystemProvider.newFileChannel()', 'java.nio.file.spi.FileSystemProvider.newFileChannel()', 'java.nio.file.spi.FileSystemProvider.newFileChannel()']"
java.nio.file.OpenOption[],"['java.nio.file.spi.FileSystemProvider.newOutputStream()', 'java.nio.channels.AsynchronousFileChannel.open()', 'java.nio.channels.AsynchronousFileChannel.open()', 'java.nio.channels.FileChannel.open()', 'java.nio.channels.FileChannel.open()', 'java.nio.file.spi.FileSystemProvider.newInputStream()', 'java.nio.file.spi.FileSystemProvider.newInputStream()']"
java.nio.channels.FileChannel$MapMode,['java.nio.channels.FileChannel.map()']
java.nio.file.DirectoryStream$Filter,['java.nio.file.spi.FileSystemProvider.newDirectoryStream()']
java.nio.file.LinkOption[],['java.nio.file.Path.toRealPath()']
java.lang.String[],"['org.eclipse.ui.internal.navigator.NavigatorContentService.bindExtensions()', 'org.eclipse.ui.navigator.INavigatorActivationService.activateExtensions()', 'org.eclipse.ui.navigator.INavigatorActivationService.activateExtensions()', 'org.eclipse.ui.navigator.INavigatorActivationService.deactivateExtensions()', 'org.eclipse.ui.navigator.INavigatorActivationService.deactivateExtensions()', 'org.eclipse.ui.navigator.INavigatorContentService.bindExtensions()', 'org.eclipse.ui.navigator.INavigatorContentService.bindExtensions()']"
java.io.File,['org.eclipse.egit.ui.internal.EgitUiEditorUtils.openEditor()']
java.io.FilenameFilter,"['java.io.File.listFiles()', 'java.io.File.list()']"
java.io.FileFilter,['java.io.File.listFiles()']
java.nio.charset.CodingErrorAction,"['java.nio.charset.CharsetEncoder.onUnmappableCharacter()', 'java.nio.charset.CharsetDecoder.onMalformedInput()', 'java.nio.charset.CharsetDecoder.onUnmappableCharacter()', 'java.nio.charset.CharsetEncoder.onMalformedInput()']"
java.util.zip.ZipEntry,"['java.util.jar.JarFile.newEntry()', 'java.util.zip.ZipFile.getInputStream()', 'java.util.jar.JarFile.getInputStream()']"
java.security.CodeSource[],['java.util.jar.JarVerifier.entryNames()']
java.util.jar.JarFile,"['sun.misc.URLClassPath.JarLoader.checkJar()', 'sun.misc.JarIndex.getJarIndex()']"
java.util.jar.JarEntry,['sun.misc.URLClassPath.JarLoader.checkResource()']
java.util.Enumeration,['java.util.jar.JarVerifier.entries2()']
java.util.LinkedList$Node,['java.util.LinkedList.unlink()']
sun.misc.MetaIndex,['sun.misc.JarIndex.getJarIndex()']
java.security.ProtectionDomain,['java.lang.ClassLoader.defineClass()']
sun.util.locale.BaseLocale$Key,['sun.util.locale.BaseLocale.Cache.createObject()']
java.util.Locale$LocaleKey,['java.util.Locale.Cache.createObject()']
java.util.spi.LocaleNameProvider,['java.util.Locale.LocaleNameGetter.getObject()']
java.util.spi.LocaleServiceProvider,"['java.util.Currency.CurrencyNameGetter.getObject()', 'java.util.Locale.LocaleNameGetter.getObject()', 'java.util.Locale.LocaleNameGetter.getObject()', 'java.util.Locale.LocaleNameGetter.getObject()', 'java.util.Locale.LocaleNameGetter.getObject()']"
sun.util.locale.LocaleExtensions,['java.util.Locale.getInstance()']
sun.util.locale.BaseLocale,['java.util.ResourceBundle.Control.CandidateListCache.createObject()']
java.util.Locale$Category,['java.util.Locale.getDefault()']
java.util.Locale$FilteringMode,"['java.util.Locale.filterTags()', 'java.util.Locale.filter()', 'java.util.Locale.filter()', 'java.util.Locale.filter()']"
java.lang.CharSequence[],['java.lang.String.join()']
java.lang.Iterable,['org.eclipse.egit.ui.internal.CommonUtils.getResourceNames()']
sun.reflect.generics.tree.FieldTypeSignature[],['sun.reflect.generics.tree.MethodTypeSignature.make()']
java.lang.reflect.Type,"['java.lang.reflect.Executable.getAnnotatedReturnType0()', 'sun.reflect.generics.factory.GenericsFactory.makeArrayType()']"
java.lang.reflect.Type[],['sun.reflect.generics.factory.GenericsFactory.makeParameterizedType()']
sun.reflect.generics.factory.GenericsFactory,"['sun.reflect.generics.repository.MethodRepository.make()', 'sun.reflect.generics.repository.ConstructorRepository.make()', 'sun.reflect.generics.repository.ConstructorRepository.make()']"
sun.reflect.generics.tree.FormalTypeParameter[],['sun.reflect.generics.tree.MethodTypeSignature.make()']
sun.reflect.generics.tree.TypeSignature[],['sun.reflect.generics.tree.MethodTypeSignature.make()']
sun.reflect.generics.tree.ReturnType,['sun.reflect.generics.tree.MethodTypeSignature.make()']
java.lang.ClassLoader,['java.util.ResourceBundle.getBundle()']
org.eclipse.core.commands.ExecutionEvent,"['org.eclipse.egit.ui.internal.commands.ShareSingleProjectCommand.execute()', 'org.eclipse.core.commands.Command.execute()', 'org.eclipse.core.commands.Command.executeWithChecks()', 'org.eclipse.core.commands.IHandler.execute()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getProjectsForSelectedResources()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getRepositories()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getSelection()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getSelectedResources()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getSelectedLocations()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getShell()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getPartPage()', 'org.eclipse.egit.ui.internal.actions.RepositoryActionHandler.getPart()', 'org.eclipse.egit.ui.internal.actions.PullFromUpstreamActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ApplyPatchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.SimpleFetchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ShowBlameActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.RepositoryAction.execute()', 'org.eclipse.egit.ui.internal.actions.PushTagsActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.UntrackActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.DiscardChangesActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.DiscardChangesActionHandler.gatherResourceToOperateOn()', 'org.eclipse.egit.ui.internal.actions.DiscardChangesActionHandler.gatherRevision()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithRefActionHandler.gatherRevision()', 'org.eclipse.egit.ui.internal.actions.SynchronizeWorkspaceActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CompareWithIndexActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.AddToIndexActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.RenameBranchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CompareWithCommitActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CompareIndexWithHeadActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.DeleteBranchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.PushUpstreamOrBranchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.StashCreateHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ResetActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.SimplePushActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CompareWithRefActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CleanActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ConfigureFetchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.FetchActionHandler.execute()', 'org.eclipse.egit.ui.internal.commands.shared.AbstractSharedCommandHandler.getRepository()', 'org.eclipse.egit.ui.internal.commands.shared.AbstractSharedCommandHandler.getShell()', 'org.eclipse.egit.ui.internal.commands.shared.AbstractRebaseCommandHandler.execute()', 'org.eclipse.egit.ui.internal.actions.DisconnectActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CompareWithHeadActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CreatePatchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.TagActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.PushBranchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithCommitActionHandler.gatherRevision()', 'org.eclipse.egit.ui.internal.actions.BranchActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ConfigurePushActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.MergeActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.PullWithOptionsActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithHeadActionHandler.gatherRevision()', 'org.eclipse.egit.ui.internal.actions.RemoveFromIndexActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithPreviousActionHandler.gatherRevision()', 'org.eclipse.egit.ui.internal.actions.RebaseActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.PushActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.MergeToolActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CommitActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.IgnoreActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.AssumeUnchangedActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ShowHistoryActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.NoAssumeUnchangedActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.CompareWithPreviousActionHandler.execute()', 'org.eclipse.egit.ui.internal.actions.ShowRepositoriesViewActionHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getPart()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getRepository()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getRevTags()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getPage()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getSelection()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getSelectedCommitId()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getSelectedCommit()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getSelectedCommits()', 'org.eclipse.egit.ui.internal.history.command.RenameBranchOnCommitHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.MergeHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.EditHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.CreateTagOnCommitHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.CreateBranchOnCommitHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.DeleteTagOnCommitHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.PushCommitHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.OpenInCommitViewerHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.RevertHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.ShowVersionsHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.CompareVersionsHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.CherryPickHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.CompareWithWorkingTreeHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.AbstractRebaseHistoryCommandHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.CompareVersionsInTreeHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.SetQuickdiffBaselineHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.RewordHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.ResetQuickdiffBaselineHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.CreatePatchHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.CheckoutCommitHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.ResetHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.RebaseInteractiveCurrentHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.ShowBlameHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.ImportChangedProjectsCommand.execute()', 'org.eclipse.egit.ui.internal.history.command.DeleteBranchOnCommitHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.OpenInTextEditorHandler.execute()', 'org.eclipse.egit.ui.internal.history.command.SquashHandler.execute()', 'org.eclipse.egit.ui.internal.reflog.command.AbstractReflogCommandHandler.getPart()', 'org.eclipse.egit.ui.internal.reflog.command.AbstractReflogCommandHandler.getRepository()', 'org.eclipse.egit.ui.internal.reflog.command.CopyHandler.execute()', 'org.eclipse.egit.ui.internal.reflog.command.OpenInCommitViewerHandler.execute()', 'org.eclipse.egit.ui.internal.reflog.command.CheckoutHandler.execute()', 'org.eclipse.egit.ui.internal.reflog.command.ResetHandler.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.RepositoriesViewCommandHandler.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.RepositoriesViewCommandHandler.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RepositoriesViewCommandHandler.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.RepositoriesViewCommandHandler.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RepositoriesViewCommandHandler.getSelectedFileAndFolderPaths()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleAddCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleAddCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleAddCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleAddCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleAddCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleSyncCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleSyncCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleSyncCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleSyncCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleSyncCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFileCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFileCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFileCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFileCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFileCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CheckoutCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.CheckoutCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.CheckoutCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CheckoutCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.CheckoutCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenInEditorCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenInEditorCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenInEditorCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenInEditorCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenInEditorCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ChangeCredentialsCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ChangeCredentialsCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ChangeCredentialsCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ChangeCredentialsCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ChangeCredentialsCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureRemoteCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureRemoteCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureRemoteCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureRemoteCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureRemoteCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddToIndexCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddToIndexCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddToIndexCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddToIndexCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddToIndexCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigurePushCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigurePushCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigurePushCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigurePushCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigurePushCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CloneCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.CloneCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.CloneCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CloneCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.CloneCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.PasteCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.PasteCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.PasteCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.PasteCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.PasteCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.LinkWithSelectionCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.LinkWithSelectionCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.LinkWithSelectionCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.LinkWithSelectionCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.LinkWithSelectionCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ClearCredentialsCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ClearCredentialsCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ClearCredentialsCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ClearCredentialsCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ClearCredentialsCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.MergeCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.MergeCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.MergeCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.MergeCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.MergeCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleUpdateCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleUpdateCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleUpdateCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleUpdateCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.SubmoduleUpdateCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.AbstractToggleCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.AbstractToggleCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.AbstractToggleCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.AbstractToggleCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.AbstractToggleCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ToggleBranchCommitCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ToggleBranchCommitCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ToggleBranchCommitCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ToggleBranchCommitCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ResetCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ResetCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ResetCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ResetCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ResetCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteTagCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteTagCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteTagCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteTagCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteTagCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashApplyCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashApplyCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashApplyCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashApplyCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashApplyCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateBranchCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateBranchCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateBranchCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateBranchCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateBranchCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.AddCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RenameBranchCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.RenameBranchCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.RenameBranchCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RenameBranchCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.RenameBranchCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ToggleBranchHierarchyCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ToggleBranchHierarchyCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ToggleBranchHierarchyCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ToggleBranchHierarchyCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashDropCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashDropCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashDropCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashDropCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.StashDropCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFetchCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFetchCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFetchCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFetchCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteFetchCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RefreshCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.RefreshCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.RefreshCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RefreshCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.RefreshCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureGerritRemoteCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureGerritRemoteCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureGerritRemoteCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureGerritRemoteCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureGerritRemoteCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.OpenCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeletePushCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeletePushCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeletePushCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeletePushCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeletePushCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveRemoteCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveRemoteCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveRemoteCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveRemoteCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveRemoteCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SynchronizeCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.SynchronizeCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.SynchronizeCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.SynchronizeCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.SynchronizeCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveOrDeleteRepositoryCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveOrDeleteRepositoryCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveOrDeleteRepositoryCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveOrDeleteRepositoryCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.RemoveOrDeleteRepositoryCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureFetchCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureFetchCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureFetchCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureFetchCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureFetchCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateRepositoryCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateRepositoryCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateRepositoryCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateRepositoryCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.CreateRepositoryCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteBranchCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteBranchCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteBranchCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteBranchCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.DeleteBranchCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CopyPathCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.CopyPathCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.CopyPathCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.CopyPathCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.CopyPathCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchConfiguredRemoteCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchConfiguredRemoteCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchConfiguredRemoteCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchConfiguredRemoteCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.FetchConfiguredRemoteCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureBranchCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureBranchCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureBranchCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureBranchCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ConfigureBranchCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushConfiguredRemoteCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushConfiguredRemoteCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushConfiguredRemoteCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushConfiguredRemoteCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.PushConfiguredRemoteCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ImportProjectsCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.ImportProjectsCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.ImportProjectsCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.ImportProjectsCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.ImportProjectsCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.InstallLfsLocalCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.InstallLfsLocalCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.InstallLfsLocalCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.InstallLfsLocalCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.InstallLfsLocalCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.GarbageCollectCommand.execute()', 'org.eclipse.egit.ui.internal.repository.tree.command.GarbageCollectCommand.getView()', 'org.eclipse.egit.ui.internal.repository.tree.command.GarbageCollectCommand.getShell()', 'org.eclipse.egit.ui.internal.repository.tree.command.GarbageCollectCommand.getSelectedNodes()', 'org.eclipse.egit.ui.internal.repository.tree.command.GarbageCollectCommand.getActiveShell()', 'org.eclipse.egit.ui.internal.handler.SelectionHandler.getSelection()', 'org.eclipse.egit.ui.internal.handler.SelectionHandler.getPart()', 'org.eclipse.egit.ui.internal.commit.command.SquashHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.StashApplyHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.EditHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.CherryPickHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.CommitCommandHandler.getCommits()', 'org.eclipse.egit.ui.internal.commit.command.RevertHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.CheckoutHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.CreateTagHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.RewordHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.StashDropHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.CreateBranchHandler.execute()', 'org.eclipse.egit.ui.internal.commit.command.ShowInHistoryHandler.execute()', 'org.eclipse.egit.ui.internal.commands.shared.PushHeadToGerritCommand.execute()', 'org.eclipse.egit.ui.internal.commands.shared.FetchChangeFromGerritCommand.execute()', 'org.eclipse.egit.ui.internal.commands.shared.RebaseCurrentRefCommand.execute()', 'org.eclipse.egit.ui.internal.commands.ConfigureDebugTraceCommand.execute()']"
org.eclipse.core.runtime.IPath,['org.eclipse.egit.ui.internal.synchronize.model.TreeBuilder.TreeModelFactory.createTreeModel()']
org.eclipse.core.runtime.QualifiedName,"['org.eclipse.core.runtime.jobs.Job.getProperty()', 'org.eclipse.core.resources.IResourceProxy.getSessionProperty()', 'org.eclipse.core.runtime.content.IContentDescription.getProperty()', 'org.eclipse.core.resources.IResource.getPersistentProperty()', 'org.eclipse.core.resources.IResource.getSessionProperty()', 'org.eclipse.core.internal.jobs.InternalJob.getProperty()']"
java.lang.Throwable,['org.eclipse.egit.ui.Activator.createErrorStatus()']
java.util.ResourceBundle$Control,['java.util.ResourceBundle.getBundle()']
java.util.ResourceBundle,['org.eclipse.ui.texteditor.ResourceAction.getString()']
org.osgi.framework.Bundle,['org.osgi.framework.ServiceFactory.getService()']
org.osgi.framework.ServiceRegistration,['org.osgi.framework.ServiceFactory.getService()']
java.util.Dictionary,['org.osgi.framework.BundleContext.registerService()']
org.osgi.framework.ServiceFactory,['org.osgi.framework.BundleContext.registerService()']
org.osgi.framework.ServiceReference,"['org.osgi.framework.BundleContext.getServiceObjects()', 'org.osgi.framework.BundleContext.getService()']"
org.eclipse.core.runtime.QualifiedName[],['org.eclipse.core.runtime.content.IContentTypeMatcher.getDescriptionFor()']
java.io.Reader,['org.eclipse.core.runtime.content.IContentTypeMatcher.getDescriptionFor()']
org.eclipse.core.runtime.preferences.IScopeContext,['org.eclipse.core.runtime.content.IContentType.getSettings()']
org.eclipse.core.runtime.IProgressMonitor,"['org.eclipse.egit.ui.Activator.ResourceRefreshJob.run()', 'org.eclipse.core.resources.IFile.getHistory()', 'org.eclipse.core.internal.jobs.InternalJob.run()', 'org.eclipse.core.internal.jobs.InternalJob.yieldRule()', 'org.eclipse.core.runtime.jobs.IJobFunction.run()', 'org.eclipse.core.runtime.jobs.Job.run()', 'org.eclipse.core.runtime.jobs.Job.yieldRule()', 'org.eclipse.core.internal.resources.InternalWorkspaceJob.run()', 'org.eclipse.core.internal.resources.InternalWorkspaceJob.runInWorkspace()', 'org.eclipse.core.resources.WorkspaceJob.runInWorkspace()', 'org.eclipse.egit.ui.internal.actions.ReplaceWithOursTheirsMenu.ReplaceAction.1.runInWorkspace()', 'org.eclipse.egit.ui.internal.history.FileDiffContentProvider.FileDiffLoader.run()', 'org.eclipse.ui.progress.UIJob.run()', 'org.eclipse.ui.progress.UIJob.runInUIThread()', 'org.eclipse.egit.ui.internal.history.FileDiffContentProvider.UpdateJob.runInUIThread()', 'org.eclipse.egit.ui.internal.history.FindToolbarJob.run()', 'org.eclipse.egit.ui.internal.history.FormatJob.run()', 'org.eclipse.egit.ui.internal.history.GenerateHistoryJob.run()', 'org.eclipse.ui.progress.IJobRunnable.run()', 'org.eclipse.team.core.variants.IResourceVariant.getStorage()', 'org.eclipse.team.core.synchronize.SyncInfo.getLocalAuthor()', 'org.eclipse.team.internal.ui.actions.JobRunnableContext.BasicJob.run()', 'org.eclipse.team.internal.ui.actions.JobRunnableContext.ResourceJob.runInWorkspace()', 'org.eclipse.team.core.history.IFileRevision.getStorage()', 'org.eclipse.team.core.history.IFileRevision.withAllProperties()', 'org.eclipse.team.core.history.provider.FileRevision.LocalFileRevision.getStorage()', 'org.eclipse.team.core.history.provider.FileRevision.LocalFileRevision.withAllProperties()', 'org.eclipse.team.internal.core.mapping.ResourceVariantFileRevision.getStorage()', 'org.eclipse.team.internal.core.mapping.ResourceVariantFileRevision.withAllProperties()', 'org.eclipse.egit.ui.internal.synchronize.SynchronizeFetchJob.runInWorkspace()', 'org.eclipse.ui.navigator.CommonNavigatorManager.UpdateActionBarsJob.runInUIThread()', 'org.eclipse.egit.ui.internal.repository.RepositoriesView.RefreshUiJob.runInUIThread()', 'org.eclipse.egit.ui.internal.decorators.GitDecorator.EventJob.run()', 'org.eclipse.ui.texteditor.AbstractDocumentProvider.getOperationRunner()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.DiffDocumentProvider.getOperationRunner()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.FilterHistoryJob.run()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.FilterJob.run()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.RefreshCacheJob.run()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.RefreshJob.runInUIThread()', 'org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.RefreshProgressMessageJob.runInUIThread()', 'org.eclipse.egit.ui.internal.commit.CommitJob.run()', 'org.eclipse.egit.ui.internal.dialogs.NonBlockingWizardDialog.BackgroundJob.run()', 'org.eclipse.ui.texteditor.quickdiff.IQuickDiffReferenceProvider.getReference()', 'org.eclipse.egit.ui.internal.decorators.GitQuickDiffProvider.getReference()', 'org.eclipse.egit.ui.internal.push.PushOperationUI.execute()', 'org.eclipse.egit.ui.internal.jobs.RepositoryJob.run()', 'org.eclipse.egit.ui.internal.jobs.RepositoryJob.performJob()', 'org.eclipse.egit.ui.internal.push.PushJob.performJob()', 'org.eclipse.egit.ui.internal.fetch.FetchOperationUI.execute()', 'org.eclipse.egit.core.internal.storage.GitFileRevision.withAllProperties()', 'org.eclipse.egit.core.internal.storage.CommitFileRevision.getStorage()', 'org.eclipse.compare.CompareEditorInput.prepareInput()', 'org.eclipse.egit.ui.internal.merge.GitCompareEditorInput.prepareInput()', 'org.eclipse.egit.ui.internal.merge.GitMergeEditorInput.prepareInput()', 'org.eclipse.search.ui.ISearchQuery.run()', 'org.eclipse.egit.ui.internal.search.CommitSearchQuery.run()', 'org.eclipse.search.ui.text.AbstractTextSearchViewPage.UpdateUIJob.runInUIThread()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.prepareInput()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.prepareCompareInput()', 'org.eclipse.egit.ui.internal.revision.StorageTypedElement.fetchContents()', 'org.eclipse.egit.ui.internal.revision.FileRevisionTypedElement.fetchContents()', 'org.eclipse.egit.ui.internal.revision.GitCompareFileRevisionEditorInput.prepareCompareInput()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.getStorage()', 'org.eclipse.egit.ui.internal.revision.LocalFileRevision.withAllProperties()', 'org.eclipse.egit.ui.internal.branch.BranchOperationUI.CheckoutJob.run()', 'org.eclipse.egit.ui.Activator.RepositoryChangeScanner.run()']"
org.eclipse.core.resources.IResource,['org.eclipse.egit.ui.internal.resources.ResourceStateFactory.get()']
org.eclipse.core.resources.IResource[],"['org.eclipse.egit.ui.ICommitMessageProvider2.getCommitMessageWithPosition()', 'org.eclipse.core.resources.IResourceRuleFactory.validateEditRule()', 'org.eclipse.core.resources.mapping.IModelProviderDescriptor.getMatchingResources()', 'org.eclipse.egit.ui.ICommitMessageProvider.getMessage()']"
org.eclipse.core.runtime.Plugin,['org.eclipse.core.resources.IWorkspace.addSaveParticipant()']
org.eclipse.core.resources.ISaveParticipant,['org.eclipse.core.resources.IWorkspace.addSaveParticipant()']
org.eclipse.core.resources.IProject[],['org.eclipse.egit.ui.internal.commit.CommitUI.getIndexDiff()']
org.eclipse.core.resources.IFile[],['org.eclipse.core.resources.IWorkspace.validateEdit()']
org.eclipse.core.resources.IProject,['org.eclipse.egit.core.synchronize.dto.GitSynchronizeDataSet.getData()']
org.eclipse.core.resources.FileInfoMatcherDescription,['org.eclipse.core.resources.IContainer.createFilter()']
org.eclipse.core.runtime.IPluginDescriptor,['org.eclipse.core.resources.IProject.getPluginWorkingLocation()']
org.eclipse.jgit.events.WorkingTreeModifiedListener,['org.eclipse.jgit.events.ListenerList.addWorkingTreeModifiedListener()']
org.eclipse.jgit.events.IndexChangedListener,['org.eclipse.jgit.dircache.DirCache.lock()']
org.eclipse.jgit.events.RefsChangedListener,['org.eclipse.jgit.events.ListenerList.addRefsChangedListener()']
org.eclipse.jgit.events.ConfigChangedListener,"['org.eclipse.jgit.lib.Config.addChangeListener()', 'org.eclipse.jgit.events.ListenerList.addConfigChangedListener()']"
org.eclipse.jgit.events.RepositoryListener,['org.eclipse.jgit.events.ListenerList.addListener()']
org.eclipse.jgit.lib.AnyObjectId,"['org.eclipse.jgit.merge.Merger.openTree()', 'org.eclipse.jgit.lib.AbbreviatedObjectId.fromObjectId()', 'org.eclipse.jgit.lib.ObjectIdSubclassMap.get()', 'org.eclipse.jgit.lib.ObjectReader.Filter.abbreviate()', 'org.eclipse.jgit.lib.ObjectReader.Filter.open()', 'org.eclipse.jgit.lib.ObjectReader.abbreviate()', 'org.eclipse.jgit.lib.ObjectReader.open()', 'org.eclipse.jgit.lib.ObjectDatabase.open()', 'org.eclipse.jgit.revwalk.RevWalk.lookupBlob()', 'org.eclipse.jgit.revwalk.RevWalk.lookupTree()', 'org.eclipse.jgit.revwalk.RevWalk.lookupCommit()', 'org.eclipse.jgit.revwalk.RevWalk.lookupTag()', 'org.eclipse.jgit.revwalk.RevWalk.lookupOrNull()', 'org.eclipse.jgit.revwalk.RevWalk.parseCommit()', 'org.eclipse.jgit.revwalk.RevWalk.parseTree()', 'org.eclipse.jgit.revwalk.RevWalk.parseTag()', 'org.eclipse.jgit.revwalk.RevWalk.parseAny()', 'org.eclipse.jgit.revwalk.RevWalk.createCommit()', 'org.eclipse.jgit.lib.Repository.open()', 'org.eclipse.jgit.lib.Repository.parseCommit()', 'org.eclipse.jgit.revplot.PlotWalk.createCommit()', 'org.eclipse.egit.ui.internal.history.SWTWalk.createCommit()']"
org.eclipse.jgit.lib.ObjectId,['org.eclipse.egit.ui.internal.CompareUtils.getFileRevisionTypedElementForCommonAncestor()']
org.eclipse.jgit.lib.ObjectInserter,['org.eclipse.jgit.merge.MergeStrategy.newMerger()']
java.lang.ProcessBuilder$Redirect,"['java.lang.ProcessBuilder.redirectError()', 'java.lang.ProcessBuilder.redirectInput()', 'java.lang.ProcessBuilder.redirectOutput()']"
java.lang.Boolean,"['org.eclipse.core.expressions.EvaluationResult.valueOf()', 'org.eclipse.jgit.util.FS.FSFactory.detect()', 'org.eclipse.jgit.util.FS.detect()']"
org.eclipse.jgit.lib.Repository,"['org.eclipse.egit.core.RepositoryUtil.parseHeadCommit()', 'org.eclipse.jgit.dircache.DirCache.read()', 'org.eclipse.egit.ui.internal.commands.shared.AbstractRebaseCommandHandler.createRebaseOperation()', 'org.eclipse.egit.ui.internal.history.command.AbstractRebaseHistoryCommandHandler.getCurrentBranch()', 'org.eclipse.egit.core.synchronize.GitSyncCache.get()', 'org.eclipse.egit.ui.internal.dialogs.AbstractBranchSelectionDialog.getMergeTarget()', 'org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory.getWorkingTreeIterator()', 'org.eclipse.egit.ui.internal.dialogs.CommitMessageComponentStateManager.loadState()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResourceHelper.getRepositoryName()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResourceHelper.getShortBranch()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResourceHelper.getHeadCommit()', 'org.eclipse.egit.ui.internal.decorators.DecoratableResourceHelper.getBranchStatus()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.getPlan()', 'org.eclipse.egit.ui.internal.push.SimpleConfigurePushDialog.getConfiguredRemote()', 'org.eclipse.egit.ui.internal.fetch.SimpleConfigureFetchDialog.getConfiguredRemote()', 'org.eclipse.jgit.merge.MergeStrategy.newMerger()', 'org.eclipse.egit.ui.internal.commands.shared.ProcessStepsRebaseCommand.createRebaseOperation()', 'org.eclipse.egit.ui.internal.commands.shared.AbortRebaseCommand.createRebaseOperation()', 'org.eclipse.egit.ui.internal.commands.shared.SkipRebaseCommand.createRebaseOperation()', 'org.eclipse.egit.ui.internal.commands.shared.RebaseCurrentRefCommand.createRebaseOperation()', 'org.eclipse.egit.ui.internal.commands.shared.ContinueRebaseCommand.createRebaseOperation()', 'org.eclipse.egit.ui.internal.blame.BlameRevision.setRepository()', 'org.eclipse.egit.ui.internal.GitLabels.getChangedPrefix()', 'org.eclipse.egit.ui.internal.GitLabels.getStyledLabel()', 'org.eclipse.egit.ui.internal.GitLabels.getStyledLabelSafe()', 'org.eclipse.egit.core.RepositoryUtil.getRepositoryName()', 'org.eclipse.egit.core.RepositoryUtil.getShortBranch()']"
java.io.PrintStream,"['org.eclipse.jgit.util.FS.internalRunHookIfPresent()', 'org.eclipse.jgit.util.FS.runHookIfPresent()', 'org.eclipse.jgit.util.FS.runHookIfPresent()', 'org.eclipse.jgit.util.FS.runHookIfPresent()', 'org.eclipse.jgit.util.FS.runHookIfPresent()', 'org.eclipse.jgit.util.FS.runHookIfPresent()', 'org.eclipse.jgit.util.FS.runHookIfPresent()']"
org.eclipse.jgit.lib.ProgressMonitor,['org.eclipse.jgit.diff.RenameDetector.compute()']
org.eclipse.jgit.transport.PackParser$UnresolvedDelta,['org.eclipse.jgit.transport.PackParser.newInfo()']
org.eclipse.jgit.lib.AbbreviatedObjectId,"['org.eclipse.jgit.lib.ObjectReader.resolve()', 'org.eclipse.jgit.lib.ObjectReader.Filter.resolve()']"
org.eclipse.jgit.lib.TreeFormatter,"['org.eclipse.jgit.lib.ObjectInserter.insert()', 'org.eclipse.jgit.lib.ObjectInserter.Filter.idFor()', 'org.eclipse.jgit.lib.ObjectInserter.idFor()']"
org.eclipse.jgit.lib.CommitBuilder,['org.eclipse.jgit.lib.ObjectInserter.insert()']
org.eclipse.jgit.lib.TagBuilder,['org.eclipse.jgit.lib.ObjectInserter.insert()']
org.eclipse.jgit.transport.ReceiveCommand$Result,['org.eclipse.jgit.transport.ReceiveCommand.filter()']
org.eclipse.jgit.lib.PersonIdent,"['org.eclipse.egit.ui.internal.PreferenceBasedDateFormatter.formatDate()', 'org.eclipse.jgit.lib.BatchRefUpdate.setRefLogIdent()', 'org.eclipse.jgit.util.GitDateFormatter.formatDate()']"
org.eclipse.jgit.transport.ReceiveCommand,"['org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage()', 'org.eclipse.jgit.lib.BatchRefUpdate.addCommand()', 'org.eclipse.jgit.lib.BatchRefUpdate.newUpdate()']"
org.eclipse.jgit.transport.ReceiveCommand[],['org.eclipse.jgit.lib.BatchRefUpdate.addCommand()']
org.eclipse.jgit.util.time.ProposedTimestamp,['org.eclipse.jgit.lib.BatchRefUpdate.addProposedTimestamp()']
org.eclipse.jgit.lib.Ref,"['org.eclipse.egit.ui.internal.GitLabels.getRefDescription()', 'org.eclipse.jgit.lib.RefDatabase.peel()', 'org.eclipse.jgit.lib.Repository.peel()', 'org.eclipse.egit.ui.internal.history.SWTPlotRenderer.getRefHSpan()', 'org.eclipse.jgit.transport.RefSpec.expandFromSource()', 'org.eclipse.jgit.transport.RefSpec.expandFromDestination()']"
org.eclipse.jgit.lib.Config,['org.eclipse.jgit.merge.MergeStrategy.newMerger()']
java.lang.Enum,"['java.util.EnumSet.range()', 'java.util.EnumSet.of()', 'java.util.EnumSet.of()']"
java.lang.Enum[],['java.util.EnumSet.of()']
org.eclipse.jgit.lib.Config$SectionParser,['org.eclipse.jgit.lib.Config.get()']
java.util.EnumSet,"['java.util.EnumSet.complementOf()', 'java.util.EnumSet.copyOf()']"
org.eclipse.jgit.revwalk.RevWalk,"['org.eclipse.jgit.revwalk.RevCommit.parse()', 'org.eclipse.jgit.revwalk.RevTag.parse()', 'org.eclipse.jgit.revwalk.RevTag.parse()']"
org.eclipse.jgit.revwalk.RevObject,['org.eclipse.jgit.revwalk.RevObjectList.set()']
org.eclipse.jgit.revwalk.FooterKey,['org.eclipse.jgit.revwalk.RevCommit.getFooterLines()']
java.security.Provider,['java.security.MessageDigest.getInstance()']
org.eclipse.jgit.dircache.DirCacheEntry[],['org.eclipse.jgit.dircache.DirCacheTree.writeTree()']
org.eclipse.jgit.lib.ObjectReader,['org.eclipse.jgit.diff.RenameDetector.compute()']
org.eclipse.jgit.util.FS,['org.eclipse.jgit.lib.BaseRepositoryBuilder.setFS()']
java.util.TimeZone,['org.eclipse.egit.ui.internal.PreferenceBasedDateFormatter.formatDate()']
java.util.spi.CurrencyNameProvider,['java.util.Currency.CurrencyNameGetter.getObject()']
java.util.Date,['org.eclipse.egit.ui.internal.PreferenceBasedDateFormatter.formatDate()']
java.io.File[],"['org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories()', 'org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories()']"
org.eclipse.jgit.util.SystemReader,['org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment()']
org.eclipse.swt.graphics.Rectangle,"['org.eclipse.jface.window.Window.getConstrainedShellBounds()', 'org.eclipse.swt.graphics.Rectangle.intersection()', 'org.eclipse.swt.graphics.Rectangle.union()']"
org.eclipse.swt.internal.win32.LOGFONT,['org.eclipse.swt.widgets.Display.getFontName()']
org.eclipse.swt.graphics.Device,"['org.eclipse.jface.resource.ImageRegistry.OriginalImageDescriptor.createResource()', 'org.eclipse.jface.resource.DeviceResourceDescriptor.createResource()', 'org.eclipse.jface.resource.ImageDescriptor.createResource()', 'org.eclipse.jface.resource.ImageDescriptor.createImage()', 'org.eclipse.jface.resource.ColorDescriptor.createColor()', 'org.eclipse.jface.resource.ColorDescriptor.createResource()', 'org.eclipse.jface.resource.FontDescriptor.createFont()', 'org.eclipse.jface.resource.FontDescriptor.createResource()']"
org.eclipse.swt.graphics.PaletteData,['org.eclipse.swt.graphics.ImageData.internal_new()']
org.eclipse.swt.graphics.ImageData,"['org.eclipse.jface.resource.ImageDescriptor.createFromImageData()', 'org.eclipse.swt.graphics.ImageData.convertMask()']"
org.eclipse.swt.graphics.RGB,"['org.eclipse.jface.text.source.ISharedTextColors.getColor()', 'org.eclipse.jface.resource.ColorDescriptor.createFrom()', 'org.eclipse.jface.resource.ResourceManager.createColor()']"
org.eclipse.swt.widgets.Control,['org.eclipse.egit.ui.UIUtils.addBulbDecorator()']
org.eclipse.swt.widgets.Menu,"['org.eclipse.egit.ui.internal.components.RepositoryMenuUtil.RepositoryToolbarAction.getMenu()', 'org.eclipse.swt.widgets.Menu.checkNull()', 'org.eclipse.jface.action.IMenuCreator.getMenu()']"
org.eclipse.swt.widgets.MenuItem,['org.eclipse.swt.widgets.Menu.checkNull()']
org.eclipse.swt.widgets.Shell,"['org.eclipse.egit.ui.internal.credentials.LoginService.changeCredentials()', 'org.eclipse.egit.ui.internal.credentials.LoginService.login()', 'org.eclipse.egit.ui.internal.credentials.LoginService.login()']"
org.eclipse.swt.graphics.Image,"['org.eclipse.compare.CompareConfiguration.getImage()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeLabelProvider.getCompareImage()', 'org.eclipse.team.ui.synchronize.AbstractSynchronizeLabelProvider.getCompareImage()']"
org.eclipse.swt.widgets.Widget,"['org.eclipse.jface.viewers.TreeViewer.getViewerRowFromItem()', 'org.eclipse.jface.viewers.ColumnViewer.getViewerRowFromItem()', 'org.eclipse.jface.viewers.TableViewer.getViewerRowFromItem()', 'org.eclipse.jface.layout.TableColumnLayout.getComposite()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getChildren()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getViewerRowFromItem()', 'org.eclipse.jface.viewers.TreeViewer.getChildren()']"
java.lang.Thread,['org.eclipse.swt.widgets.Display.findDisplay()']
org.eclipse.swt.widgets.Monitor,['org.eclipse.swt.widgets.Display.findTouchSource()']
org.eclipse.swt.graphics.Point,"['org.eclipse.jface.dialogs.PopupDialog.getInitialLocation()', 'org.eclipse.swt.widgets.Control.toControl()', 'org.eclipse.swt.widgets.Control.toDisplay()', 'org.eclipse.swt.widgets.ToolBar.getItem()', 'org.eclipse.swt.widgets.ToolBar.getItemInPixels()', 'org.eclipse.swt.widgets.Table.getItem()', 'org.eclipse.swt.widgets.Table.getItemInPixels()', 'org.eclipse.jface.viewers.ViewerRow.getCell()', 'org.eclipse.jface.viewers.ColumnViewer.getCell()', 'org.eclipse.jface.viewers.ColumnViewer.getViewerRow()', 'org.eclipse.jface.viewers.ColumnViewer.getItemAt()', 'org.eclipse.jface.viewers.TableViewer.getItemAt()', 'org.eclipse.jface.window.Window.getInitialLocation()', 'org.eclipse.jface.dialogs.Dialog.getInitialLocation()', 'org.eclipse.jface.text.TextViewer.widgetSelection2ModelSelection()', 'org.eclipse.jface.text.TextViewer.modelSelection2WidgetSelection()', 'org.eclipse.jface.text.source.projection.ProjectionViewer.widgetSelection2ModelSelection()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getItemAt()', 'org.eclipse.swt.widgets.Tree.getItem()', 'org.eclipse.swt.widgets.Tree.getItemInPixels()', 'org.eclipse.jface.viewers.TreeViewer.getItemAt()', 'org.eclipse.swt.widgets.TabFolder.getItem()', 'org.eclipse.jface.dialogs.PopupDialog.getDefaultLocation()']"
org.eclipse.swt.internal.win32.TEXTMETRIC,['org.eclipse.swt.graphics.GC.drawText()']
org.eclipse.swt.graphics.Drawable,['org.eclipse.swt.graphics.GC.win32_new()']
org.eclipse.swt.graphics.GCData,"['org.eclipse.swt.widgets.Control.new_GC()', 'org.eclipse.swt.widgets.Widget.new_GC()']"
org.eclipse.swt.accessibility.Accessible,['org.eclipse.swt.accessibility.Accessible.checkNull()']
org.eclipse.swt.internal.ole.win32.GUID,['org.eclipse.swt.accessibility.Accessible.guidString()']
org.eclipse.swt.internal.win32.NMHDR,"['org.eclipse.swt.widgets.TabFolder.wmNotifyChild()', 'org.eclipse.swt.widgets.Control.wmNotify()', 'org.eclipse.swt.widgets.Control.wmNotify()', 'org.eclipse.swt.widgets.Control.wmNotify()', 'org.eclipse.swt.widgets.Control.wmNotifyChild()', 'org.eclipse.swt.widgets.Control.wmNotifyChild()', 'org.eclipse.swt.widgets.Control.wmNotifyChild()', 'org.eclipse.swt.widgets.Composite.wmNotify()', 'org.eclipse.swt.widgets.Composite.wmNotify()', 'org.eclipse.swt.widgets.Composite.wmNotify()', 'org.eclipse.swt.widgets.Button.wmNotifyChild()', 'org.eclipse.swt.widgets.Button.wmNotifyChild()', 'org.eclipse.swt.widgets.Button.wmNotifyChild()', 'org.eclipse.swt.widgets.ToolBar.wmNotifyChild()', 'org.eclipse.swt.widgets.ToolBar.wmNotifyChild()', 'org.eclipse.swt.widgets.ToolBar.wmNotifyChild()', 'org.eclipse.swt.widgets.Table.wmNotify()', 'org.eclipse.swt.widgets.Table.wmNotify()', 'org.eclipse.swt.widgets.Table.wmNotify()', 'org.eclipse.swt.widgets.Table.wmNotifyChild()', 'org.eclipse.swt.widgets.Table.wmNotifyChild()', 'org.eclipse.swt.widgets.Table.wmNotifyChild()', 'org.eclipse.swt.widgets.Table.wmNotifyHeader()', 'org.eclipse.swt.widgets.Table.wmNotifyHeader()', 'org.eclipse.swt.widgets.Table.wmNotifyHeader()', 'org.eclipse.swt.widgets.Table.wmNotifyToolTip()', 'org.eclipse.swt.widgets.Table.wmNotifyToolTip()', 'org.eclipse.swt.widgets.Table.wmNotifyToolTip()', 'org.eclipse.swt.widgets.Tree.wmNotify()', 'org.eclipse.swt.widgets.Tree.wmNotify()', 'org.eclipse.swt.widgets.Tree.wmNotify()', 'org.eclipse.swt.widgets.Tree.wmNotifyChild()', 'org.eclipse.swt.widgets.Tree.wmNotifyChild()', 'org.eclipse.swt.widgets.Tree.wmNotifyChild()', 'org.eclipse.swt.widgets.Tree.wmNotifyHeader()', 'org.eclipse.swt.widgets.Tree.wmNotifyHeader()', 'org.eclipse.swt.widgets.Tree.wmNotifyHeader()', 'org.eclipse.swt.widgets.Tree.wmNotifyToolTip()', 'org.eclipse.swt.widgets.Tree.wmNotifyToolTip()', 'org.eclipse.swt.widgets.Tree.wmNotifyToolTip()']"
org.eclipse.swt.widgets.ScrollBar,['org.eclipse.swt.widgets.Scrollable.wmScroll()']
org.eclipse.swt.widgets.Composite,"['org.eclipse.egit.ui.UIUtils.createSelectableLabel()', 'org.eclipse.jface.text.TextViewer.createTextWidget()', 'org.eclipse.jface.text.TextViewer.createTextWidget()', 'org.eclipse.ui.forms.widgets.FormToolkit.createComposite()', 'org.eclipse.ui.forms.widgets.FormToolkit.createComposite()', 'org.eclipse.ui.forms.widgets.FormToolkit.createImageHyperlink()', 'org.eclipse.ui.forms.widgets.FormToolkit.createImageHyperlink()', 'org.eclipse.ui.forms.widgets.FormToolkit.createSection()', 'org.eclipse.ui.forms.widgets.FormToolkit.createSection()', 'org.eclipse.ui.forms.widgets.FormToolkit.createExpandableComposite()', 'org.eclipse.ui.forms.widgets.FormToolkit.createExpandableComposite()', 'org.eclipse.ui.forms.widgets.FormToolkit.createSeparator()', 'org.eclipse.ui.forms.widgets.FormToolkit.createSeparator()', 'org.eclipse.ui.forms.widgets.FormToolkit.createTable()', 'org.eclipse.ui.forms.widgets.FormToolkit.createTable()', 'org.eclipse.ui.forms.widgets.FormToolkit.createTree()', 'org.eclipse.ui.forms.widgets.FormToolkit.createTree()', 'org.eclipse.ui.forms.widgets.FormToolkit.createPageBook()', 'org.eclipse.ui.forms.widgets.FormToolkit.createPageBook()', 'org.eclipse.compare.CompareEditorInput.createOutlineContents()', 'org.eclipse.compare.CompareEditorInput.createOutlineContents()', 'org.eclipse.ui.dialogs.FilteredTree.createTreeControl()', 'org.eclipse.ui.dialogs.FilteredTree.createTreeControl()', 'org.eclipse.ui.dialogs.FilteredTree.doCreateTreeViewer()', 'org.eclipse.ui.dialogs.FilteredTree.doCreateTreeViewer()', 'org.eclipse.egit.ui.internal.components.FilteredCheckboxTree.doCreateTreeViewer()', 'org.eclipse.egit.ui.internal.components.FilteredCheckboxTree.doCreateTreeViewer()', 'org.eclipse.egit.ui.internal.SWTUtils.createHFillComposite()', 'org.eclipse.egit.ui.internal.SWTUtils.createHFillComposite()', 'org.eclipse.egit.ui.internal.SWTUtils.createHVFillComposite()', 'org.eclipse.egit.ui.internal.SWTUtils.createHVFillComposite()', 'org.eclipse.egit.ui.internal.SWTUtils.createText()', 'org.eclipse.egit.ui.internal.SWTUtils.createText()', 'org.eclipse.egit.ui.internal.SWTUtils.createPlaceholder()', 'org.eclipse.egit.ui.internal.SWTUtils.createPlaceholder()']"
org.eclipse.swt.internal.win32.NMTTDISPINFO,"['org.eclipse.swt.widgets.TabFolder.toolTipText()', 'org.eclipse.swt.widgets.Composite.toolTipText()', 'org.eclipse.swt.widgets.ToolBar.toolTipText()', 'org.eclipse.swt.widgets.Table.toolTipText()', 'org.eclipse.swt.widgets.Tree.toolTipText()']"
org.eclipse.swt.widgets.Display,"['org.eclipse.jface.text.source.LineNumberRulerColumn.getBackground()', 'org.eclipse.ui.forms.editor.FormEditor.createToolkit()']"
org.eclipse.core.runtime.jobs.IJobFunction,"['org.eclipse.core.runtime.jobs.Job.createSystem()', 'org.eclipse.core.runtime.jobs.Job.create()', 'org.eclipse.core.runtime.jobs.Job.create()']"
org.eclipse.core.runtime.ICoreRunnable,['org.eclipse.core.runtime.jobs.Job.createSystem()']
org.eclipse.core.runtime.jobs.Job,['org.eclipse.ui.progress.IProgressService.getIconFor()']
org.eclipse.swt.graphics.ImageDataProvider,['org.eclipse.jface.resource.ImageDescriptor.createFromImageDataProvider()']
org.eclipse.jface.resource.ImageDescriptor,"['org.eclipse.egit.ui.UIUtils.getSize()', 'org.eclipse.jface.resource.ResourceManager.createImage()', 'org.eclipse.jface.resource.ResourceManager.createImageWithDefault()']"
org.eclipse.core.runtime.content.IContentType,"['org.eclipse.ui.IEditorRegistry.getImageDescriptor()', 'org.eclipse.ui.IEditorRegistry.getDefaultEditor()', 'org.eclipse.ui.IEditorRegistry.getDefaultEditor()', 'org.eclipse.ui.IEditorRegistry.getEditors()', 'org.eclipse.ui.IEditorRegistry.getEditors()']"
org.eclipse.core.runtime.IAdaptable,"['org.eclipse.core.commands.operations.IOperationApprover.proceedUndoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()']"
org.eclipse.core.commands.operations.IUndoableOperation,"['org.eclipse.core.commands.operations.IOperationApprover.proceedUndoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()']"
org.eclipse.core.commands.operations.IUndoContext,"['org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getUndoRedoOperationApprover()', 'org.eclipse.core.commands.operations.IOperationHistory.getRedoHistory()', 'org.eclipse.core.commands.operations.IOperationHistory.getRedoOperation()', 'org.eclipse.core.commands.operations.IOperationHistory.getUndoHistory()', 'org.eclipse.core.commands.operations.IOperationHistory.getUndoOperation()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getUndoRedoOperationApprover()']"
org.eclipse.ui.IPerspectiveDescriptor,['org.eclipse.ui.IPerspectiveRegistry.clonePerspective()']
org.eclipse.jface.preference.IPreferenceNode,['org.eclipse.jface.preference.PreferenceManager.find()']
org.eclipse.core.runtime.IAdaptable[],['org.eclipse.ui.IWorkingSetManager.createWorkingSet()']
org.eclipse.jface.wizard.IWizardPage,"['org.eclipse.egit.ui.internal.push.PushTagsWizard.getNextPage()', 'org.eclipse.jface.wizard.IWizard.getNextPage()', 'org.eclipse.jface.wizard.IWizard.getPreviousPage()', 'org.eclipse.jface.wizard.Wizard.getNextPage()', 'org.eclipse.jface.wizard.Wizard.getPreviousPage()', 'org.eclipse.egit.ui.internal.clone.AbstractGitCloneWizard.getNextPage()', 'org.eclipse.egit.ui.internal.clone.GitImportWizard.getNextPage()', 'org.eclipse.egit.ui.internal.clone.GitCreateProjectViaWizardWizard.getNextPage()']"
org.eclipse.ui.IWorkingSet[],['org.eclipse.ui.IWorkingSetManager.createAggregateWorkingSet()']
org.eclipse.ui.IMemento,"['org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.SelectionHistory.restoreItemFromMemento()', 'org.eclipse.ui.IWorkingSetManager.createWorkingSet()', 'org.eclipse.ui.IElementFactory.createElement()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInputFactory.getRepository()', 'org.eclipse.egit.ui.internal.commit.CommitEditorInputFactory.createElement()']"
org.eclipse.ui.IWorkingSet,['org.eclipse.ui.IWorkingSetManager.createWorkingSetEditWizard()']
org.eclipse.core.expressions.EvaluationResult,"['org.eclipse.core.expressions.EvaluationResult.or()', 'org.eclipse.core.expressions.EvaluationResult.and()']"
org.eclipse.core.expressions.IEvaluationContext,"['org.eclipse.egit.ui.internal.selection.SelectionUtils.getSelection()', 'org.eclipse.core.expressions.Expression.evaluate()', 'org.eclipse.egit.ui.internal.selection.SelectionUtils.getRepositories()', 'org.eclipse.egit.ui.internal.selection.SelectionUtils.getRepository()']"
org.eclipse.ui.activities.IActivity,['org.eclipse.ui.activities.IWorkbenchActivitySupport.getImageDescriptor()']
org.eclipse.ui.activities.ICategory,['org.eclipse.ui.activities.IWorkbenchActivitySupport.getImageDescriptor()']
org.eclipse.ui.keys.ModifierKey,['org.eclipse.ui.keys.KeyStroke.getInstance()']
org.eclipse.ui.keys.NaturalKey,['org.eclipse.ui.keys.KeyStroke.getInstance()']
org.eclipse.ui.keys.ModifierKey[],['org.eclipse.ui.keys.KeyStroke.getInstance()']
java.util.SortedSet,['org.eclipse.ui.keys.KeyStroke.getInstance()']
org.eclipse.jface.bindings.keys.KeySequence,['org.eclipse.ui.keys.KeySequence.getInstance()']
org.eclipse.jface.bindings.keys.KeyStroke,['org.eclipse.jface.bindings.keys.KeySequence.getInstance()']
org.eclipse.jface.bindings.keys.KeyStroke[],['org.eclipse.jface.bindings.keys.KeySequence.getInstance()']
org.eclipse.ui.keys.KeySequence,"['org.eclipse.ui.commands.ICommandManager.getPerfectMatch()', 'org.eclipse.ui.commands.ICommandManager.getPartialMatches()']"
org.eclipse.ui.keys.KeyStroke,['org.eclipse.ui.keys.KeySequence.getInstance()']
org.eclipse.ui.keys.KeyStroke[],['org.eclipse.ui.keys.KeySequence.getInstance()']
org.eclipse.swt.graphics.Color,['org.eclipse.jface.resource.ColorDescriptor.createFrom()']
org.eclipse.jface.resource.ColorDescriptor,['org.eclipse.jface.resource.ResourceManager.createColor()']
org.eclipse.swt.graphics.Font,"['org.eclipse.ui.forms.widgets.FormToolkit.BoldFontHolder.getBoldFont()', 'org.eclipse.jface.resource.FontDescriptor.createFrom()']"
org.eclipse.swt.graphics.FontData[],"['org.eclipse.jface.resource.FontRegistry.filterData()', 'org.eclipse.jface.resource.FontRegistry.bestData()', 'org.eclipse.jface.resource.FontRegistry.bestData()', 'org.eclipse.jface.resource.FontRegistry.bestDataArray()', 'org.eclipse.jface.resource.FontRegistry.bestDataArray()']"
org.eclipse.swt.graphics.FontData,"['org.eclipse.jface.resource.FontDescriptor.copy()', 'org.eclipse.jface.resource.FontDescriptor.createFrom()']"
org.eclipse.jface.action.IContributionItem,"['org.eclipse.jface.action.ContributionManager.remove()', 'org.eclipse.jface.action.IContributionManagerOverrides.getAcceleratorText()', 'org.eclipse.jface.action.IContributionManagerOverrides.getText()', 'org.eclipse.jface.action.IContributionManager.remove()']"
org.eclipse.ui.IWorkbenchWindow,['org.eclipse.egit.ui.UIUtils.createShowInMenu()']
org.eclipse.core.runtime.IExtension,"['org.eclipse.core.runtime.dynamichelpers.IExtensionTracker.getObjects()', 'org.eclipse.core.runtime.dynamichelpers.IExtensionTracker.unregisterObject()']"
org.eclipse.jface.viewers.IStructuredSelection,"['org.eclipse.egit.ui.internal.selection.SelectionUtils.getSelectedProjects()', 'org.eclipse.ui.wizards.IWizardDescriptor.adaptedSelection()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getBranchesOfCommit()', 'org.eclipse.egit.ui.internal.selection.SelectionUtils.getRepository()', 'org.eclipse.egit.ui.internal.selection.SelectionUtils.getRepositories()', 'org.eclipse.egit.ui.internal.selection.SelectionUtils.getSelectedLocations()', 'org.eclipse.egit.ui.internal.selection.SelectionUtils.getSelectedResources()']"
org.eclipse.ui.IEditorInput,"['org.eclipse.ui.part.MultiPageEditorPart.findEditors()', 'org.eclipse.ui.IWorkbenchPage.findEditor()', 'org.eclipse.ui.navigator.ILinkHelper.findSelection()', 'org.eclipse.ui.navigator.LinkHelperService.getLinkHelpersFor()', 'org.eclipse.ui.navigator.LinkHelperService.getSelectionFor()', 'org.eclipse.egit.ui.internal.repository.tree.LinkHelper.findSelection()']"
org.eclipse.ui.IViewPart,['org.eclipse.ui.IWorkbenchPage.getViewStack()']
org.eclipse.ui.IWorkbenchPart,['org.eclipse.egit.ui.internal.patch.PatchOperationUI.createPatch()']
org.eclipse.ui.IEditorInput[],['org.eclipse.ui.IWorkbenchPage.openEditors()']
org.eclipse.ui.IMemento[],['org.eclipse.ui.IWorkbenchPage.openEditors()']
org.eclipse.ui.IEditorReference[],['org.eclipse.ui.IWorkbenchPage.getEditorState()']
org.eclipse.jgit.revwalk.RevCommit,"['org.eclipse.egit.ui.internal.CompareUtils.getFileRevision()', 'org.eclipse.egit.ui.internal.CompareUtils.getFileRevisionTypedElement()', 'org.eclipse.egit.ui.internal.CompareUtils.getFileRevisionTypedElement()', 'org.eclipse.egit.ui.internal.CompareUtils.getFileRevisionTypedElement()', 'org.eclipse.egit.ui.internal.CompareUtils.getFileRevisionTypedElement()']"
org.eclipse.jgit.api.RebaseResult$Status,['org.eclipse.egit.ui.internal.rebase.RebaseResultDialog.getStatusText()']
org.eclipse.swt.widgets.Decorations,['org.eclipse.jface.action.MenuManager.createMenuBar()']
org.eclipse.ui.IWorkbenchSite,['org.eclipse.egit.ui.internal.actions.ResetMenu.createMenu()']
org.eclipse.swt.printing.PrinterData,['org.eclipse.swt.printing.Printer.checkNull()']
org.eclipse.swt.custom.StyledTextContent,['org.eclipse.swt.custom.StyledText.Printing.copyContent()']
org.eclipse.swt.custom.StyledText$TextWriter,['org.eclipse.swt.custom.StyledText.getPlatformDelimitedText()']
org.eclipse.swt.printing.Printer,['org.eclipse.swt.custom.StyledText.print()']
org.eclipse.swt.custom.StyledTextPrintOptions,['org.eclipse.swt.custom.StyledText.print()']
org.eclipse.jface.text.source.Annotation,"['org.eclipse.ui.texteditor.AnnotationPreferenceLookup.getAnnotationPreference()', 'org.eclipse.jface.text.source.IAnnotationModel.getPosition()', 'org.eclipse.jface.text.source.AnnotationModelEvent.getPositionOfRemovedAnnotation()', 'org.eclipse.jface.text.source.AnnotationModel.getPosition()', 'org.eclipse.jface.text.source.IAnnotationAccess.getType()', 'org.eclipse.ui.texteditor.IAnnotationImageProvider.getManagedImage()', 'org.eclipse.ui.texteditor.IAnnotationImageProvider.getImageDescriptorId()']"
org.eclipse.jface.text.ITypedRegion,['org.eclipse.jface.text.presentation.IPresentationDamager.getDamageRegion()']
org.eclipse.jface.text.DocumentEvent,['org.eclipse.jface.text.presentation.IPresentationDamager.getDamageRegion()']
org.eclipse.jface.text.IDocument,"['org.eclipse.jface.text.TextViewer.createSlaveDocument()', 'org.eclipse.jface.text.contentassist.ICompletionProposal.getSelection()', 'org.eclipse.jface.text.ISlaveDocumentManager.createSlaveDocument()', 'org.eclipse.jface.text.ISlaveDocumentManager.createMasterSlaveMapping()', 'org.eclipse.jface.text.ISlaveDocumentManager.getMasterDocument()']"
org.eclipse.jface.text.ITextViewer,"['org.eclipse.egit.ui.internal.commit.CommitProposalProcessor.computeContextInformation()', 'org.eclipse.jface.text.contentassist.IContentAssistProcessor.computeCompletionProposals()', 'org.eclipse.jface.text.contentassist.IContentAssistProcessor.computeCompletionProposals()', 'org.eclipse.jface.text.contentassist.IContentAssistProcessor.computeContextInformation()', 'org.eclipse.jface.text.contentassist.IContentAssistProcessor.computeContextInformation()', 'org.eclipse.jface.text.ITextHover.getHoverRegion()', 'org.eclipse.jface.text.ITextHover.getHoverRegion()', 'org.eclipse.jface.text.information.IInformationProvider.getSubject()', 'org.eclipse.jface.text.information.IInformationProvider.getSubject()', 'org.eclipse.jface.text.DefaultTextHover.getHoverRegion()', 'org.eclipse.jface.text.DefaultTextHover.getHoverRegion()', 'org.eclipse.egit.ui.internal.commit.CommitProposalProcessor.computeCompletionProposals()', 'org.eclipse.egit.ui.internal.commit.CommitProposalProcessor.computeCompletionProposals()']"
org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext,['org.eclipse.jface.text.quickassist.IQuickAssistProcessor.computeQuickAssistProposals()']
org.eclipse.jface.text.source.ISourceViewer,"['org.eclipse.egit.ui.internal.dialogs.CommitMessageArea.createContentAssistant()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getUndoManager()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getReconciler()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getPresentationReconciler()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getContentFormatter()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getContentAssistant()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getQuickAssistAssistant()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getAnnotationHover()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getOverviewRulerAnnotationHover()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getInformationControlCreator()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getInformationPresenter()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getConfiguredContentTypes()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getConfiguredDocumentPartitioning()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getHyperlinkDetectors()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getHyperlinkPresenter()', 'org.eclipse.jface.text.source.SourceViewerConfiguration.getCodeMiningProviders()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getAnnotationHover()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getOverviewRulerAnnotationHover()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getHyperlinkDetectors()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getRegisteredHyperlinkDetectors()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getHyperlinkDetectorTargets()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getHyperlinkPresenter()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getUndoManager()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getReconciler()', 'org.eclipse.ui.editors.text.TextSourceViewerConfiguration.getQuickAssistAssistant()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkSourceViewer.Configuration.getHyperlinkDetectors()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkSourceViewer.Configuration.internalGetHyperlinkDetectors()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkSourceViewer.Configuration.getHyperlinkDetectorTargets()', 'org.eclipse.ui.texteditor.AbstractTextEditor.getCoverage()', 'org.eclipse.jface.text.source.AnnotationPainter.findAnnotationModel()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.getSourceViewerDecorationSupport()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.Configuration.internalGetHyperlinkDetectors()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.Configuration.getConfiguredContentTypes()', 'org.eclipse.egit.ui.internal.commit.DiffViewer.Configuration.getPresentationReconciler()', 'org.eclipse.egit.ui.internal.dialogs.SpellcheckableMessageArea.createContentAssistant()']"
org.eclipse.jface.text.IRegion,"['org.eclipse.egit.ui.internal.commit.DiffViewer.HyperlinkDetector.detectHyperlinks()', 'org.eclipse.jface.text.hyperlink.IHyperlinkDetector.detectHyperlinks()', 'org.eclipse.jface.text.hyperlink.IHyperlinkDetector.detectHyperlinks()', 'org.eclipse.jface.text.hyperlink.IHyperlinkDetector.detectHyperlinks()', 'org.eclipse.jface.text.hyperlink.URLHyperlinkDetector.detectHyperlinks()', 'org.eclipse.jface.text.hyperlink.URLHyperlinkDetector.detectHyperlinks()', 'org.eclipse.jface.text.hyperlink.URLHyperlinkDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkTokenScanner.MultiURLHyperlinkDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkTokenScanner.MultiURLHyperlinkDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkTokenScanner.MultiURLHyperlinkDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkSourceViewer.InternalHyperlinkDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkSourceViewer.InternalHyperlinkDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.dialogs.HyperlinkSourceViewer.InternalHyperlinkDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.KnownHyperlinksDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.KnownHyperlinksDetector.detectHyperlinks()', 'org.eclipse.egit.ui.internal.history.CommitMessageViewer.KnownHyperlinksDetector.detectHyperlinks()']"
java.util.concurrent.Executor,"['java.util.concurrent.CompletableFuture.thenApplyAsync()', 'java.util.concurrent.CompletionStage.thenApplyAsync()', 'java.util.concurrent.CompletionStage.thenApplyAsync()', 'java.util.concurrent.CompletionStage.thenComposeAsync()', 'java.util.concurrent.CompletionStage.thenComposeAsync()', 'java.util.concurrent.CompletableFuture.thenApplyAsync()', 'java.util.concurrent.CompletableFuture.thenApplyAsync()', 'java.util.concurrent.CompletableFuture.thenComposeAsync()', 'java.util.concurrent.CompletableFuture.thenComposeAsync()', 'java.util.concurrent.CompletableFuture.thenComposeAsync()', 'java.util.concurrent.CompletableFuture.thenComposeAsync()']"
java.util.concurrent.CompletionStage,"['java.util.concurrent.CompletableFuture.thenCombine()', 'java.util.concurrent.CompletionStage.thenCombine()', 'java.util.concurrent.CompletionStage.thenCombine()', 'java.util.concurrent.CompletionStage.thenCombineAsync()', 'java.util.concurrent.CompletionStage.thenCombineAsync()', 'java.util.concurrent.CompletableFuture.thenCombine()', 'java.util.concurrent.CompletableFuture.thenCombine()', 'java.util.concurrent.CompletableFuture.thenCombineAsync()', 'java.util.concurrent.CompletableFuture.thenCombineAsync()', 'java.util.concurrent.CompletableFuture.thenCombineAsync()', 'java.util.concurrent.CompletableFuture.thenCombineAsync()']"
java.util.concurrent.ForkJoinPool,"['java.util.concurrent.ForkJoinPool.InnocuousForkJoinWorkerThreadFactory.newThread()', 'java.util.concurrent.ForkJoinPool.DefaultForkJoinWorkerThreadFactory.newThread()', 'java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory.newThread()']"
java.util.concurrent.CountedCompleter,['java.util.concurrent.ForkJoinPool.WorkQueue.popCC()']
java.util.concurrent.ForkJoinPool$WorkQueue,['java.util.concurrent.ForkJoinPool.nextTaskFor()']
java.util.concurrent.ForkJoinTask,"['java.util.concurrent.ForkJoinPool.submit()', 'java.util.concurrent.ForkJoinPool.invoke()']"
java.util.concurrent.CompletableFuture,['java.util.concurrent.CompletableFuture.postFire()']
java.util.concurrent.CompletableFuture[],"['java.util.concurrent.CompletableFuture.anyOf()', 'java.util.concurrent.CompletableFuture.allOf()']"
org.eclipse.swt.widgets.Table,['org.eclipse.swt.widgets.TableItem.checkNull()']
org.eclipse.swt.internal.win32.NMLVCUSTOMDRAW,"['org.eclipse.swt.widgets.Table.CDDS_SUBITEMPREPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_ITEMPOSTPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_ITEMPOSTPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_ITEMPOSTPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_ITEMPREPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_ITEMPREPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_ITEMPREPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_POSTPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_POSTPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_POSTPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_PREPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_PREPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_PREPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_SUBITEMPOSTPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_SUBITEMPOSTPAINT()', 'org.eclipse.swt.widgets.Table.CDDS_SUBITEMPOSTPAINT()']"
org.eclipse.swt.widgets.TableItem,"['org.eclipse.swt.widgets.Table.sendPaintItemEvent()', 'org.eclipse.swt.widgets.Table.sendEraseItemEvent()', 'org.eclipse.swt.widgets.Table.sendEraseItemEvent()', 'org.eclipse.swt.widgets.Table.sendEraseItemEvent()', 'org.eclipse.swt.widgets.Table.sendEraseItemEvent()']"
org.eclipse.swt.internal.win32.NMTTCUSTOMDRAW,"['org.eclipse.swt.widgets.Tree.wmNotifyToolTip()', 'org.eclipse.swt.widgets.Table.wmNotifyToolTip()', 'org.eclipse.swt.widgets.Table.wmNotifyToolTip()']"
org.eclipse.swt.internal.win32.RECT,"['org.eclipse.swt.widgets.Tree.toolTipRect()', 'org.eclipse.swt.widgets.Table.toolTipInset()', 'org.eclipse.swt.widgets.Table.toolTipRect()', 'org.eclipse.swt.widgets.Tree.toolTipInset()']"
org.eclipse.jface.viewers.Viewer,"['org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.findContentViewer()', 'org.eclipse.compare.CompareEditorInput.findStructureViewer()', 'org.eclipse.compare.CompareEditorInput.findStructureViewer()', 'org.eclipse.compare.CompareEditorInput.findStructureViewer()', 'org.eclipse.compare.CompareEditorInput.findContentViewer()', 'org.eclipse.compare.CompareEditorInput.findContentViewer()', 'org.eclipse.compare.CompareEditorInput.findContentViewer()']"
org.eclipse.jface.viewers.TreePath,"['org.eclipse.ui.internal.navigator.extensions.SafeDelegateTreeContentProvider.getChildren()', 'org.eclipse.jface.viewers.ITreePathContentProvider.getChildren()']"
org.eclipse.jface.viewers.ColumnViewer,['org.eclipse.jface.viewers.CellLabelProvider.createViewerLabelProvider()']
org.eclipse.jface.viewers.IBaseLabelProvider,['org.eclipse.jface.viewers.CellLabelProvider.createViewerLabelProvider()']
org.eclipse.jface.viewers.ViewerRow,['org.eclipse.jface.viewers.ColumnViewer.updateCell()']
org.eclipse.jface.resource.DeviceResourceDescriptor,"['org.eclipse.jface.resource.ResourceManager.find()', 'org.eclipse.jface.resource.ResourceManager.create()', 'org.eclipse.jface.resource.ResourceManager.get()']"
org.eclipse.jface.resource.FontDescriptor,['org.eclipse.jface.resource.ResourceManager.createFont()']
org.eclipse.swt.widgets.Scrollable,"['org.eclipse.jface.layout.TreeColumnLayout.getLayoutData()', 'org.eclipse.jface.layout.AbstractColumnLayout.getLayoutData()', 'org.eclipse.jface.layout.AbstractColumnLayout.getLayoutData()', 'org.eclipse.jface.layout.TableColumnLayout.getLayoutData()', 'org.eclipse.jface.layout.TableColumnLayout.getLayoutData()', 'org.eclipse.egit.ui.internal.history.CommitGraphTable.CommitGraphTableLayout.getLayoutData()', 'org.eclipse.egit.ui.internal.history.CommitGraphTable.CommitGraphTableLayout.getLayoutData()']"
org.eclipse.egit.ui.internal.history.GitHistoryPage,"['org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getRepository()', 'org.eclipse.egit.ui.internal.history.command.AbstractHistoryCommandHandler.getSelection()']"
org.eclipse.jgit.revplot.PlotCommit,['org.eclipse.egit.ui.internal.history.command.AbstractRebaseHistoryCommandHandler.getRef()']
org.eclipse.jface.viewers.StyledString,['org.eclipse.jface.viewers.StyledCellLabelProvider.styleDecoratedString()']
org.eclipse.jface.viewers.StyledString$Styler,['org.eclipse.jface.viewers.StyledCellLabelProvider.styleDecoratedString()']
org.eclipse.jgit.lib.MutableObjectId,['org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator()']
org.eclipse.jgit.lib.AnyObjectId[],['org.eclipse.jgit.treewalk.TreeWalk.forPath()']
org.eclipse.jgit.revwalk.RevTree,['org.eclipse.jgit.diff.DiffFormatter.scan()']
org.eclipse.jgit.treewalk.AbstractTreeIterator,['org.eclipse.jgit.diff.DiffFormatter.scan()']
org.eclipse.jgit.treewalk.TreeWalk,['org.eclipse.egit.core.synchronize.ThreeWayDiffEntry.scan()']
org.eclipse.jgit.treewalk.filter.TreeFilter[],['org.eclipse.egit.ui.internal.history.FileDiff.compute()']
org.eclipse.jgit.diff.DiffEntry,"['org.eclipse.jgit.diff.DiffFormatter.toFileHeader()', 'org.eclipse.jgit.diff.DiffEntry.breakModify()']"
org.eclipse.jgit.diff.DiffEntry$ChangeType,['org.eclipse.jgit.diff.DiffEntry.pair()']
org.eclipse.jgit.diff.DiffEntry$Side,"['org.eclipse.egit.ui.internal.commit.DiffDocument.getPathPattern()', 'org.eclipse.jgit.diff.DiffEntry.getPath()', 'org.eclipse.jgit.diff.DiffEntry.getMode()', 'org.eclipse.jgit.diff.DiffEntry.getId()']"
org.eclipse.jgit.revwalk.RevCommit[],['org.eclipse.egit.ui.internal.commit.RepositoryCommit.getDiffs()']
org.eclipse.jface.text.IInformationControl,['org.eclipse.jface.text.AbstractInformationControlManager.computeSizeConstraints()']
org.eclipse.jface.text.AbstractInformationControlManager$Anchor,['org.eclipse.jface.text.AbstractInformationControlManager.computeAvailableArea()']
org.eclipse.jgit.revplot.PlotLane,"['org.eclipse.egit.ui.internal.history.SWTPlotRenderer.laneColor()', 'org.eclipse.jgit.revplot.AbstractPlotRenderer.laneColor()']"
org.eclipse.egit.ui.internal.history.SWTCommitList$SWTLane,['org.eclipse.egit.ui.internal.history.SWTPlotRenderer.laneColor()']
org.eclipse.swt.widgets.Button,['org.eclipse.jface.dialogs.DialogPage.setButtonLayoutData()']
org.eclipse.swt.custom.StyleRange,['org.eclipse.jface.viewers.StyledCellLabelProvider.prepareStyleRange()']
org.eclipse.jface.text.Position,['org.eclipse.ui.texteditor.AbstractTextEditor.findAnnotation()']
org.eclipse.swt.events.VerifyEvent,['org.eclipse.jface.text.TextViewer.event2ModelRange()']
org.eclipse.jface.text.source.IAnnotationModel,"['org.eclipse.jface.text.source.projection.ProjectionViewer.createVisualAnnotationModel()', 'org.eclipse.jface.text.source.SourceViewer.createVisualAnnotationModel()']"
org.eclipse.jface.text.DocumentRewriteSessionType,"['org.eclipse.jface.text.AbstractDocument.startRewriteSession()', 'org.eclipse.jface.text.IDocumentExtension4.startRewriteSession()']"
org.eclipse.core.resources.mapping.ResourceTraversal[],['org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.addMappingToScope()']
org.eclipse.core.resources.mapping.ResourceMappingContext,"['org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.getMappingsFromProviders()', 'org.eclipse.core.resources.mapping.ModelProvider.getMappings()', 'org.eclipse.core.resources.mapping.ModelProvider.getMappings()', 'org.eclipse.core.resources.mapping.ModelProvider.getMappings()']"
org.eclipse.core.resources.mapping.ResourceMapping[],"['org.eclipse.team.core.subscribers.SubscriberScopeManager.refresh()', 'org.eclipse.team.core.mapping.ISynchronizationScopeManager.refresh()', 'org.eclipse.team.core.mapping.ISynchronizationScopeManager.refresh()', 'org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.refresh()', 'org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.refresh()']"
org.eclipse.core.resources.IResourceDelta,['org.eclipse.core.resources.mapping.ModelProvider.validateChange()']
org.eclipse.egit.core.synchronize.dto.GitSynchronizeData,['org.eclipse.egit.core.synchronize.ThreeWayDiffEntry.scan()']
org.eclipse.egit.ui.internal.synchronize.model.GitModelObject,['org.eclipse.egit.ui.internal.synchronize.mapping.GitObjectMapping.create()']
org.eclipse.jface.window.IShellProvider,['org.eclipse.ui.Saveable.doSave()']
org.eclipse.compare.ITypedElement,"['org.eclipse.egit.ui.internal.revision.EditableRevision.replace()', 'org.eclipse.compare.IEditableContent.replace()', 'org.eclipse.compare.IEditableContent.replace()', 'org.eclipse.compare.ResourceNode.replace()', 'org.eclipse.compare.ResourceNode.replace()']"
org.eclipse.egit.ui.internal.synchronize.compare.ComparisonDataSource,"['org.eclipse.egit.ui.internal.synchronize.model.GitModelCacheFile.getCompareInput()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getCompareInput()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getCompareInput()', 'org.eclipse.egit.ui.internal.synchronize.model.GitModelBlob.getCompareInput()']"
org.eclipse.swt.dnd.DropTargetEvent,"['org.eclipse.egit.ui.internal.repository.DropAdapterAssistant.handleDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.handleDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.handleDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.handleDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.handleDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.handleDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.handleDrop()']"
org.eclipse.swt.widgets.Item,"['org.eclipse.jface.viewers.TreeViewer.getParentItem()', 'org.eclipse.jface.viewers.ViewerDropAdapter.getBounds()', 'org.eclipse.ui.navigator.CommonDropAdapter.getBounds()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getItems()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getParentItem()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getPreviousItem()', 'org.eclipse.jface.viewers.AbstractTreeViewer.getTreePathFromItem()', 'org.eclipse.jface.viewers.TreeViewer.getItems()']"
org.eclipse.ui.part.PluginTransferData,['org.eclipse.ui.part.PluginDropAdapter.getPluginAdapter()']
org.eclipse.swt.dnd.TransferData,"['org.eclipse.egit.ui.internal.repository.DropAdapterAssistant.validateDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.validateDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.validateDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.validateDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.validateDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.validateDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.validateDrop()']"
org.eclipse.ui.navigator.ICommonFilterDescriptor,['org.eclipse.ui.navigator.INavigatorFilterService.getViewerFilter()']
org.eclipse.ui.navigator.INavigatorContentDescriptor,['org.eclipse.ui.internal.navigator.NavigatorContentService.getExtension()']
org.eclipse.ui.navigator.PipelinedShapeModification,"['org.eclipse.ui.internal.navigator.extensions.SafeDelegateTreeContentProvider.interceptRemove()', 'org.eclipse.ui.navigator.INavigatorPipelineService.interceptAdd()', 'org.eclipse.ui.navigator.INavigatorPipelineService.interceptRemove()', 'org.eclipse.ui.navigator.IPipelinedTreeContentProvider.interceptAdd()', 'org.eclipse.ui.navigator.IPipelinedTreeContentProvider.interceptRemove()', 'org.eclipse.ui.internal.navigator.extensions.SafeDelegateTreeContentProvider.interceptAdd()']"
org.eclipse.ui.navigator.CommonDropAdapter,"['org.eclipse.egit.ui.internal.repository.DropAdapterAssistant.handleDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.handleDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.handleDrop()', 'org.eclipse.ui.navigator.CommonDropAdapterAssistant.handleDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.handleDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.handleDrop()', 'org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetDropAdapterAssistant.handleDrop()']"
org.eclipse.core.resources.mapping.ResourceMapping,['org.eclipse.team.core.mapping.provider.SynchronizationScopeManager.addMappingToScope()']
org.eclipse.team.core.diff.IDiff,"['org.eclipse.team.internal.core.mapping.SyncInfoToDiffConverter.getRemote()', 'org.eclipse.team.core.mapping.IResourceDiffTree.getResource()', 'org.eclipse.team.core.mapping.IMergeContext.getMergeRule()', 'org.eclipse.team.core.mapping.provider.MergeContext.getMergeRule()']"
org.eclipse.team.ui.synchronize.ISynchronizePageConfiguration,"['org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.createPage()', 'org.eclipse.team.ui.synchronize.ISynchronizeParticipant.createPage()']"
org.eclipse.team.core.synchronize.FastSyncInfoFilter,['org.eclipse.team.core.synchronize.SyncInfoSet.getNodes()']
org.eclipse.team.core.mapping.ISynchronizationScope,['org.eclipse.team.ui.mapping.SynchronizationContentProvider.getChildrenInScope()']
org.eclipse.team.core.mapping.ISynchronizationContext,"['org.eclipse.egit.ui.internal.synchronize.mapping.GitChangeSetContentProvider.getTraversals()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getTraversals()', 'org.eclipse.team.ui.mapping.SynchronizationContentProvider.getTraversals()']"
org.eclipse.egit.ui.internal.synchronize.model.GitModelObjectContainer,['org.eclipse.egit.ui.internal.synchronize.model.TreeBuilder.build()']
org.eclipse.egit.core.synchronize.GitCommitsModelCache$Change,['org.eclipse.egit.ui.internal.synchronize.model.TreeBuilder.FileModelFactory.createFileModel()']
org.eclipse.egit.ui.internal.synchronize.model.TreeBuilder$FileModelFactory,['org.eclipse.egit.ui.internal.synchronize.model.TreeBuilder.build()']
org.eclipse.egit.ui.internal.synchronize.model.TreeBuilder$TreeModelFactory,['org.eclipse.egit.ui.internal.synchronize.model.TreeBuilder.build()']
org.eclipse.jface.operation.IRunnableWithProgress,['org.eclipse.team.internal.ui.actions.JobRunnableContext.run()']
org.eclipse.compare.structuremergeviewer.IDiffElement[],"['org.eclipse.egit.ui.internal.synchronize.action.PushAction.getSubscriberOperation()', 'org.eclipse.team.ui.synchronize.SynchronizeModelAction.getSubscriberOperation()', 'org.eclipse.team.ui.synchronize.SynchronizeModelAction.getSubscriberOperation()', 'org.eclipse.egit.ui.internal.synchronize.action.ExpandAllModelAction.getSubscriberOperation()', 'org.eclipse.egit.ui.internal.synchronize.action.ExpandAllModelAction.getSubscriberOperation()', 'org.eclipse.egit.ui.internal.synchronize.action.PullAction.getSubscriberOperation()', 'org.eclipse.egit.ui.internal.synchronize.action.PullAction.getSubscriberOperation()']"
org.eclipse.jface.action.IContributionManager,['org.eclipse.team.ui.synchronize.SynchronizePageActionGroup.findGroup()']
org.eclipse.team.core.diff.IDiff[],"['org.eclipse.team.core.mapping.provider.MergeContext.getMergeRule()', 'org.eclipse.team.core.mapping.IMergeContext.getMergeRule()']"
org.eclipse.team.core.diff.IThreeWayDiff,"['org.eclipse.team.internal.core.mapping.SyncInfoToDiffConverter.getRemote()', 'org.eclipse.team.internal.core.mapping.SyncInfoToDiffConverter.getRemoteVariant()', 'org.eclipse.team.internal.core.mapping.SyncInfoToDiffConverter.getBaseVariant()']"
org.eclipse.team.core.mapping.provider.SynchronizationContext,['org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.createParticipant()']
org.eclipse.team.core.mapping.ISynchronizationScopeManager,"['org.eclipse.egit.ui.internal.synchronize.GitModelSynchronizeParticipant.restoreContext()', 'org.eclipse.team.ui.synchronize.ModelSynchronizeParticipant.restoreContext()']"
org.eclipse.team.core.variants.IResourceVariant,['org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getSyncInfo()']
org.eclipse.egit.core.synchronize.dto.GitSynchronizeDataSet,['org.eclipse.egit.core.synchronize.GitSyncCache.getAllData()']
org.eclipse.core.resources.IFile,"['org.eclipse.egit.ui.internal.CompareUtils.getIndexTypedElement()', 'org.eclipse.team.core.history.provider.FileRevision.getFileRevisionFor()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.GitSyncInfoToDiffConverter.getLocalFileRevision()', 'org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.getSourceFileRevision()', 'org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.createFileElement()']"
org.eclipse.team.core.synchronize.SyncInfo,"['org.eclipse.egit.core.synchronize.GitResourceVariantTreeSubscriber.GitSyncInfoToDiffConverter.getDeltaFor()', 'org.eclipse.team.internal.core.mapping.SyncInfoToDiffConverter.getDeltaFor()']"
org.eclipse.team.core.variants.IResourceVariantComparator,['org.eclipse.team.internal.core.mapping.SyncInfoToDiffConverter.createSyncInfo()']
org.eclipse.team.core.history.IFileRevision,['org.eclipse.egit.ui.internal.EgitUiEditorUtils.openEditor()']
org.eclipse.swt.widgets.TreeItem,"['org.eclipse.swt.widgets.Tree.sendPaintItemEvent()', 'org.eclipse.swt.widgets.Tree.sendEraseItemEvent()', 'org.eclipse.swt.widgets.Tree.sendEraseItemEvent()', 'org.eclipse.swt.widgets.Tree.sendEraseItemEvent()', 'org.eclipse.swt.widgets.Tree.sendEraseItemEvent()']"
org.eclipse.swt.internal.win32.NMTVCUSTOMDRAW,['org.eclipse.swt.widgets.Tree.getItem()']
org.eclipse.core.resources.mapping.ModelProvider[],['org.eclipse.team.ui.synchronize.ModelOperation.sortByExtension()']
org.eclipse.core.resources.IContainer,"['org.eclipse.debug.core.ILaunchConfigurationType.newPrototypeInstance()', 'org.eclipse.debug.core.ILaunchConfigurationType.newInstance()', 'org.eclipse.debug.core.ILaunchConfigurationType.newInstance()']"
org.eclipse.team.core.subscribers.SubscriberScopeManager,['org.eclipse.egit.ui.internal.operations.GitScopeOperationFactory.createGitScopeOperation()']
org.eclipse.ui.progress.IDeferredWorkbenchAdapter,['org.eclipse.ui.progress.DeferredTreeContentManager.getFetchJobName()']
org.eclipse.ui.progress.PendingUpdateAdapter,['org.eclipse.ui.progress.DeferredTreeContentManager.createElementCollector()']
org.eclipse.ui.internal.navigator.actions.CommonActionProviderDescriptor,['org.eclipse.ui.navigator.NavigatorActionService.getActionProviderInstance()']
org.eclipse.jface.viewers.StructuredViewer,['org.eclipse.jface.viewers.StructuredViewerInternals.getItems()']
org.eclipse.swt.internal.win32.TCHAR,"['org.eclipse.swt.widgets.Combo.deprocessText()', 'org.eclipse.swt.widgets.Text.deprocessText()', 'org.eclipse.swt.widgets.Text.deprocessText()', 'org.eclipse.swt.widgets.Text.deprocessText()', 'org.eclipse.swt.widgets.Text.deprocessText()']"
org.eclipse.swt.widgets.Event,"['org.eclipse.egit.ui.internal.staging.StagingViewTooltips.getToolTipArea()', 'org.eclipse.egit.ui.internal.staging.FixedJFaceToolTip.getToolTipArea()', 'org.eclipse.egit.ui.internal.staging.StagingViewTooltips.getToolTipArea()']"
org.eclipse.ui.IEditorPart,['org.eclipse.search.ui.text.IEditorMatchAdapter.computeContainedMatches()']
org.eclipse.swt.graphics.GC,['org.eclipse.ui.forms.widgets.Hyperlink.shortenText()']
org.eclipse.ui.forms.IMessage[],['org.eclipse.ui.forms.IMessageManager.createSummary()']
org.eclipse.ui.forms.widgets.FormToolkit,['org.eclipse.egit.ui.internal.commit.CommitEditorPage.createSectionClient()']
org.eclipse.ui.forms.widgets.Section,['org.eclipse.egit.ui.internal.commit.CommitEditorPage.createSectionClient()']
java.lang.Integer,"['org.eclipse.egit.ui.internal.commit.StashEditorPage.getDiffSectionTitle()', 'org.eclipse.egit.ui.internal.commit.CommitEditorPage.getDiffSectionTitle()']"
org.eclipse.egit.ui.internal.commit.RepositoryCommit,"['org.eclipse.egit.ui.internal.search.RepositoryMatch.addCommit()', 'org.eclipse.egit.ui.internal.commit.CommitEditor.open()', 'org.eclipse.egit.ui.internal.commit.CommitEditor.openQuiet()', 'org.eclipse.egit.ui.internal.commit.DiffEditorPage.getDiffs()', 'org.eclipse.egit.ui.internal.search.CommitSearchResult.addResult()']"
org.eclipse.jgit.dircache.DirCacheIterator,['org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode()']
org.eclipse.jgit.treewalk.WorkingTreeIterator$Entry,['org.eclipse.jgit.treewalk.WorkingTreeIterator.readSymlinkTarget()']
org.eclipse.jgit.lib.FileMode,['org.eclipse.jgit.lib.IndexDiff.getPathsWithIndexMode()']
org.eclipse.jgit.diff.ContentSource$Pair,['org.eclipse.jgit.diff.RenameDetector.compute()']
org.eclipse.jgit.diff.Edit,"['org.eclipse.jgit.diff.EditList.singleton()', 'org.eclipse.jgit.diff.Edit.before()', 'org.eclipse.jgit.diff.Edit.after()']"
java.nio.charset.Charset,['org.eclipse.jgit.patch.FileHeader.getScriptText()']
java.nio.charset.Charset[],['org.eclipse.jgit.patch.FileHeader.getScriptText()']
org.eclipse.egit.ui.internal.history.FileDiff,['org.eclipse.egit.ui.internal.commit.DiffRegionFormatter.write()']
org.eclipse.core.commands.operations.IOperationHistory,"['org.eclipse.core.commands.operations.IOperationApprover.proceedUndoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()', 'org.eclipse.core.commands.operations.IOperationApprover.proceedRedoing()']"
org.eclipse.ui.internal.texteditor.rulers.RulerColumnTarget,['org.eclipse.ui.internal.texteditor.rulers.RulerColumnTarget.createOrTarget()']
org.eclipse.jface.text.source.CompositeRuler,"['org.eclipse.egit.ui.internal.commit.OldNewLogicalLineNumberRulerColumn.createControl()', 'org.eclipse.jface.text.source.IVerticalRulerColumn.createControl()', 'org.eclipse.jface.text.source.IVerticalRulerColumn.createControl()', 'org.eclipse.jface.text.source.LineNumberRulerColumn.createControl()', 'org.eclipse.jface.text.source.LineNumberRulerColumn.createControl()']"
org.eclipse.ui.texteditor.ITextEditor,['org.eclipse.ui.texteditor.rulers.RulerColumnDescriptor.createColumn()']
org.eclipse.jface.text.source.IVerticalRuler,"['org.eclipse.egit.ui.internal.commit.DiffEditorPage.createSourceViewer()', 'org.eclipse.ui.texteditor.AbstractTextEditor.createSourceViewer()', 'org.eclipse.ui.texteditor.AbstractTextEditor.createSourceViewer()', 'org.eclipse.ui.texteditor.AbstractTextEditor.createSourceViewer()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createSourceViewer()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createSourceViewer()', 'org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createSourceViewer()']"
org.eclipse.core.runtime.IStatus,"['org.eclipse.ui.editors.text.TextEditor.getStatusMessage()', 'org.eclipse.ui.texteditor.StatusTextEditor.getStatusHeader()', 'org.eclipse.ui.texteditor.StatusTextEditor.getStatusBanner()', 'org.eclipse.ui.texteditor.StatusTextEditor.getStatusMessage()', 'org.eclipse.ui.editors.text.TextEditor.getStatusHeader()', 'org.eclipse.ui.editors.text.TextEditor.getStatusBanner()']"
org.eclipse.jface.text.source.ILineRange,"['org.eclipse.jface.text.source.LineChangeHover.getHoverInfo()', 'org.eclipse.jface.text.source.IAnnotationHoverExtension.getHoverInfo()', 'org.eclipse.jface.text.source.IAnnotationHoverExtension.getHoverInfo()', 'org.eclipse.jface.text.source.IAnnotationHoverExtension.getHoverInfo()']"
org.eclipse.jface.text.source.ISharedTextColors,['org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createOverviewRuler()']
org.eclipse.ui.dialogs.FilteredItemsSelectionDialog$GranualProgressMonitor,['org.eclipse.ui.dialogs.FilteredItemsSelectionDialog.FilterJob.doRun()']
org.eclipse.egit.ui.internal.push.PushMode,['org.eclipse.egit.ui.internal.commit.CommitJob.setPushUpstream()']
java.util.regex.Pattern,['org.eclipse.egit.ui.UIUtils.IContentProposalFactory.getProposal()']
org.eclipse.egit.ui.CommitMessageWithCaretPosition,['org.eclipse.egit.ui.internal.dialogs.CommitMessageComponent.calculateCommitMessage()']
org.eclipse.core.commands.Command,['org.eclipse.ui.handlers.IHandlerService.createExecutionEvent()']
org.eclipse.ui.handlers.IHandlerActivation,['org.eclipse.ui.handlers.IHandlerService.activateHandler()']
org.eclipse.core.commands.IHandler,['org.eclipse.ui.handlers.IHandlerService.activateHandler()']
org.eclipse.core.expressions.Expression,['org.eclipse.ui.handlers.IHandlerService.activateHandler()']
org.eclipse.core.commands.ParameterizedCommand,['org.eclipse.ui.handlers.IHandlerService.executeCommandInContext()']
org.eclipse.swt.widgets.Control[][],['org.eclipse.swt.layout.GridLayout.getData()']
org.eclipse.swt.layout.GridLayout,"['org.eclipse.egit.ui.internal.dialogs.NonBlockingWizardDialog.createProgressMonitorPart()', 'org.eclipse.jface.wizard.WizardDialog.createProgressMonitorPart()', 'org.eclipse.jface.wizard.WizardDialog.createProgressMonitorPart()']"
org.eclipse.jgit.util.GitDateFormatter,"['org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getCommittedDate()', 'org.eclipse.egit.core.internal.rebase.RebaseInteractivePlan.PlanElement.getAuthoredDate()']"
org.eclipse.jgit.transport.URIish,"['org.eclipse.egit.ui.internal.SecureStoreUtils.getCredentials()', 'org.eclipse.egit.core.op.PushOperationSpecification.getRefUpdates()', 'org.eclipse.egit.core.op.PushOperationResult.getPushResult()', 'org.eclipse.egit.core.op.PushOperationResult.getErrorMessage()']"
org.eclipse.egit.ui.internal.components.RepositorySelection,['org.eclipse.egit.ui.internal.push.PushWizard.getDestinationString()']
org.eclipse.jgit.lib.ObjectLoader,['org.eclipse.jgit.diff.RawText.load()']
org.eclipse.jgit.dircache.DirCacheCheckout$CheckoutMetadata,['org.eclipse.egit.core.internal.storage.GitFileRevision.inCommit()']
java.nio.file.attribute.BasicFileAttributes,"['org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.preVisitDirectory()', 'java.nio.file.FileVisitor.preVisitDirectory()', 'java.nio.file.FileVisitor.preVisitDirectory()', 'java.nio.file.FileVisitor.visitFile()', 'java.nio.file.FileVisitor.visitFile()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.visitFile()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.visitFile()']"
java.io.IOException,"['org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.postVisitDirectory()', 'java.nio.file.FileVisitor.visitFileFailed()', 'java.nio.file.FileVisitor.visitFileFailed()', 'java.nio.file.FileVisitor.postVisitDirectory()', 'java.nio.file.FileVisitor.postVisitDirectory()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.visitFileFailed()', 'org.eclipse.egit.ui.internal.resources.ResourceStateFactory.FileItem.1.visitFileFailed()']"
org.eclipse.egit.core.internal.indexdiff.IndexDiffData,['org.eclipse.egit.ui.internal.resources.ResourceStateFactory.get()']
org.eclipse.jgit.api.MergeResult,['org.eclipse.egit.ui.internal.merge.MergeResultDialog.getDialog()']
org.eclipse.jgit.api.MergeResult$MergeStatus,['org.eclipse.egit.ui.internal.merge.MergeResultDialog.getStatusText()']
org.eclipse.compare.CompareConfiguration,"['org.eclipse.compare.CompareEditorInput.InternalOutlineViewerCreator.findStructureViewer()', 'org.eclipse.compare.internal.OutlineViewerCreator.findStructureViewer()', 'org.eclipse.compare.internal.OutlineViewerCreator.findStructureViewer()', 'org.eclipse.compare.internal.OutlineViewerCreator.findStructureViewer()', 'org.eclipse.compare.internal.OutlineViewerCreator.findStructureViewer()']"
org.eclipse.compare.structuremergeviewer.ICompareInput,"['org.eclipse.team.ui.synchronize.SaveableCompareEditorInput.findContentViewer()', 'org.eclipse.compare.CompareEditorInput.findStructureViewer()', 'org.eclipse.compare.CompareEditorInput.findStructureViewer()', 'org.eclipse.compare.CompareEditorInput.findStructureViewer()', 'org.eclipse.compare.CompareEditorInput.findContentViewer()', 'org.eclipse.compare.CompareEditorInput.findContentViewer()', 'org.eclipse.compare.CompareEditorInput.findContentViewer()']"
org.eclipse.compare.Splitter,['org.eclipse.compare.CompareEditorInput.createContentViewerSwitchingPane()']
org.eclipse.compare.CompareEditorInput,['org.eclipse.compare.CompareEditorInput.createContentViewerSwitchingPane()']
org.eclipse.jface.viewers.ISelection,['org.eclipse.egit.ui.internal.selection.SelectionUtils.getStructuredSelection()']
org.eclipse.ui.dialogs.FilteredTree,['org.eclipse.ui.dialogs.FilteredTree.getBoldFont()']
org.eclipse.ui.dialogs.PatternFilter,['org.eclipse.ui.dialogs.FilteredTree.getBoldFont()']
org.eclipse.search.ui.text.AbstractTextSearchResult,['org.eclipse.search.ui.text.IFileMatchAdapter.computeContainedMatches()']
org.eclipse.jface.dialogs.IDialogSettings,['org.eclipse.egit.ui.internal.search.CommitSearchSettings.create()']
org.eclipse.ui.IWorkbenchPage,['org.eclipse.egit.ui.internal.EgitUiEditorUtils.openEditor()']
org.eclipse.search.ui.text.Match,['org.eclipse.search.ui.text.AbstractTextSearchViewPage.getCurrentMatchLocation()']
org.eclipse.egit.ui.internal.staging.StagingFolderEntry,['org.eclipse.egit.ui.internal.staging.StagingViewContentProvider.getStagingEntriesFiltered()']
org.eclipse.debug.core.model.IStackFrame,['org.eclipse.debug.core.model.ISourceLocator.getSourceElement()']
org.eclipse.debug.core.ILaunchConfiguration,['org.eclipse.debug.core.sourcelookup.ISourcePathComputerDelegate.computeSourceContainers()']
org.eclipse.debug.core.ILaunch,['org.eclipse.debug.core.model.ILaunchConfigurationDelegate.showCommandLine()']
org.eclipse.debug.core.sourcelookup.ISourceContainer,['org.eclipse.debug.core.sourcelookup.ISourceContainerTypeDelegate.getMemento()']
org.eclipse.egit.ui.internal.branch.ProjectTrackerMemento,['org.eclipse.egit.ui.internal.branch.BranchProjectTracker.save()']
org.eclipse.jgit.lib.Repository[],['org.eclipse.egit.ui.internal.branch.BranchOperationUI.checkout()']
org.eclipse.jface.text.templates.Template,['org.eclipse.jface.text.templates.TemplateContext.evaluate()']
org.eclipse.jface.text.templates.TemplateContext,"['org.eclipse.egit.ui.internal.variables.GitTemplateVariableResolver.getProject()', 'org.eclipse.jface.text.templates.TemplateVariableResolver.resolve()', 'org.eclipse.jface.text.templates.TemplateVariableResolver.resolveAll()']"
org.eclipse.core.variables.IDynamicVariable,"['org.eclipse.egit.ui.internal.variables.GitVariableResolver.resolveValue()', 'org.eclipse.core.variables.IDynamicVariableResolver.resolveValue()', 'org.eclipse.core.variables.IDynamicVariableResolver.resolveValue()']"
org.eclipse.jgit.lib.BranchTrackingStatus,['org.eclipse.egit.ui.internal.GitLabels.formatBranchTrackingStatus()']
org.eclipse.ui.services.IServiceLocator,['org.eclipse.egit.ui.internal.CommonUtils.getService()']
org.eclipse.ui.actions.ActionFactory,['org.eclipse.egit.ui.internal.ActionUtils.createGlobalAction()']
org.eclipse.core.runtime.preferences.IEclipsePreferences,['org.eclipse.ui.preferences.IWorkingCopyManager.getWorkingCopy()']
org.eclipse.ui.preferences.IWorkbenchPreferenceContainer,['org.eclipse.egit.ui.internal.SWTUtils.createPreferenceLink()']
org.eclipse.egit.ui.internal.SWTUtils$PixelConverter,['org.eclipse.egit.ui.internal.SWTUtils.createGridLayout()']
org.eclipse.jface.resource.ResourceManager,['org.eclipse.egit.ui.internal.UIIcons.getImage()']
org.eclipse.egit.ui.internal.revision.FileRevisionEditorInput,['org.eclipse.egit.ui.internal.EgitUiEditorUtils.openEditor()']
org.eclipse.swt.widgets.ToolBar,['org.eclipse.egit.ui.UIUtils.addExpansionItems()']
org.eclipse.jface.viewers.AbstractTreeViewer,['org.eclipse.egit.ui.UIUtils.addExpansionItems()']
